{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/Congrats.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Image from \"next/image\";\r\n\r\nconst Congrats: React.FC = () => {\r\n  return (\r\n    <div className=\"flex flex-col w-full items-center justify-center py-10 gap-6\">\r\n      <Image\r\n        src=\"/assets/congrats.png\"\r\n        height={140}\r\n        width={140}\r\n        alt=\"Congratulations\"\r\n      />\r\n      <div className=\"text-center text-2xl font-semibold\">\r\n        Congratulations!\r\n      </div>\r\n      <div className=\"text-center text-gray-500\">\r\n        Your setup is complete. You can now start using the platform and explore all its features.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Congrats;\r\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,WAAqB;IACzB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,gIAAA,CAAA,UAAK;gBACJ,KAAI;gBACJ,QAAQ;gBACR,OAAO;gBACP,KAAI;;;;;;0BAEN,6LAAC;gBAAI,WAAU;0BAAqC;;;;;;0BAGpD,6LAAC;gBAAI,WAAU;0BAA4B;;;;;;;;;;;;AAKjD;KAjBM;uCAmBS","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/Header.tsx"],"sourcesContent":["import React from \"react\";\nimport Image from \"next/image\";\n\ntype HeaderProps = {\n  showBack?: boolean;\n  onBackClick?: () => void;\n};\n\nconst Header: React.FC<HeaderProps> = ({ showBack = false, onBackClick }) => {\n  return (\n    <div className=\"flex flex-row items-center justify-between w-full px-4 py-2\">\n      {/* Logo */}\n      <div className=\"flex flex-row items-center gap-2\">\n        <Image\n          src=\"/assets/agentX.png\"\n          alt=\"AgentX Logo\"\n          height={30}\n          width={120}\n        />\n      </div>\n\n      {/* Optional Back Button */}\n      {showBack && (\n        <button\n          onClick={onBackClick}\n          className=\"text-purple border border-purple rounded px-4 py-1 hover:bg-purple hover:text-white transition-colors duration-200\"\n        >\n          Back\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;AACA;;;AAOA,MAAM,SAAgC,CAAC,EAAE,WAAW,KAAK,EAAE,WAAW,EAAE;IACtE,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;oBACJ,KAAI;oBACJ,KAAI;oBACJ,QAAQ;oBACR,OAAO;;;;;;;;;;;YAKV,0BACC,6LAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;;;;;;;AAMT;KAxBM;uCA0BS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/ProgressBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\n\ntype ProgressBarProps = {\n  value: number;\n};\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({ value }) => {\n  const [progress, setProgress] = useState<number>(0);\n\n  useEffect(() => {\n    setProgress(value);\n  }, [value]);\n\n  return (\n    <div>\n      <Box sx={{ width: \"100%\" }}>\n        <LinearProgress\n          variant=\"determinate\"\n          value={progress}\n          sx={{\n            \"& .MuiLinearProgress-bar\": {\n              backgroundColor: \"#7902DF\",\n            },\n            backgroundColor: \"#7902DF35\",\n          }}\n        />\n      </Box>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAMA,MAAM,cAA0C,CAAC,EAAE,KAAK,EAAE;;IACxD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,YAAY;QACd;gCAAG;QAAC;KAAM;IAEV,qBACE,6LAAC;kBACC,cAAA,6LAAC,yJAAA,CAAA,UAAG;YAAC,IAAI;gBAAE,OAAO;YAAO;sBACvB,cAAA,6LAAC,+KAAA,CAAA,UAAc;gBACb,SAAQ;gBACR,OAAO;gBACP,IAAI;oBACF,4BAA4B;wBAC1B,iBAAiB;oBACnB;oBACA,iBAAiB;gBACnB;;;;;;;;;;;;;;;;AAKV;GAvBM;KAAA;uCAyBS","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/animations/LoaderAnimation.tsx"],"sourcesContent":["import { Box, Modal } from \"@mui/material\";\nimport Image from \"next/image\";\nimport React from \"react\";\n\ntype LoaderAnimationProps = {\n  loaderModal?: boolean;\n  isOpen?: boolean;\n  title?: string;\n};\n\nconst LoaderAnimation: React.FC<LoaderAnimationProps> = ({\n  loaderModal = false,\n  isOpen = false,\n  title = \"Your agent is building..\",\n}) => {\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    modalsStyle: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div>\n      <Modal\n        open={loaderModal || isOpen}\n        closeAfterTransition\n        BackdropProps={{\n          sx: {\n            backgroundColor: \"#00000020\",\n          },\n        }}\n      >\n        <Box\n          className=\"lg:w-4/12 sm:w-7/12 w-8/12 rounded-3xl bg-white\"\n          sx={styles.modalsStyle}\n        >\n          <div className=\"flex flex-row justify-center w-full\">\n            <div\n              className=\"w-full\"\n              style={{\n                backgroundColor: \"transparent\",\n                padding: 20,\n                borderRadius: \"13px\",\n              }}\n            >\n              <div className=\"flex flex-row items-start mt-12 justify-center\">\n                <Image\n                  src=\"/agentXOrb.gif\"\n                  style={{ height: \"142px\", width: \"152px\",}}\n                  height={142}\n                  width={152}\n                  alt=\"Loading\"\n                />\n              </div>\n\n              <div\n                className=\"text-center mt-8\"\n                style={{ fontWeight: \"600\", fontSize: 16 }}\n              >\n                {title}\n              </div>\n            </div>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoaderAnimation;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;;AASA,MAAM,kBAAkD,CAAC,EACvD,cAAc,KAAK,EACnB,SAAS,KAAK,EACd,QAAQ,0BAA0B,EACnC;IACC,MAAM,SAAS;QACb,cAAc;YACZ,UAAU;YACV,YAAY;QACd;QACA,YAAY;YACV,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QACA,QAAQ;YACN,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QACA,aAAa;YACX,QAAQ;YACR,IAAI;YACJ,IAAI;YACJ,WAAW;YACX,QAAQ;YACR,SAAS;QACX;IACF;IAEA,qBACE,6LAAC;kBACC,cAAA,6LAAC,iMAAA,CAAA,QAAK;YACJ,MAAM,eAAe;YACrB,oBAAoB;YACpB,eAAe;gBACb,IAAI;oBACF,iBAAiB;gBACnB;YACF;sBAEA,cAAA,6LAAC,2LAAA,CAAA,MAAG;gBACF,WAAU;gBACV,IAAI,OAAO,WAAW;0BAEtB,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,WAAU;wBACV,OAAO;4BACL,iBAAiB;4BACjB,SAAS;4BACT,cAAc;wBAChB;;0CAEA,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,OAAO;wCAAE,QAAQ;wCAAS,OAAO;oCAAQ;oCACzC,QAAQ;oCACR,OAAO;oCACP,KAAI;;;;;;;;;;;0CAIR,6LAAC;gCACC,WAAU;gCACV,OAAO;oCAAE,YAAY;oCAAO,UAAU;gCAAG;0CAExC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjB;KA5EM;uCA8ES","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/Footer.tsx"],"sourcesContent":["import { CircularProgress } from \"@mui/material\";\nimport React from \"react\";\nimport LoaderAnimation from \"../animations/LoaderAnimation\";\n\ntype FooterProps = {\n  handleContinue: () => void;\n  handleBack?: () => void;\n  donotShowBack?: boolean;\n  registerLoader?: boolean;\n  shouldContinue?: boolean;\n  addCalendarLoader?: boolean;\n};\n\nconst Footer: React.FC<FooterProps> = ({\n  handleContinue,\n  handleBack,\n  donotShowBack = false,\n  registerLoader = false,\n  shouldContinue = false,\n  addCalendarLoader = false,\n}) => {\n  return (\n    <div>\n      <div className=\"px-4 flex flex-row justify-between items-center pt-4\">\n        {/* Back Button */}\n        <div>\n          {!donotShowBack && handleBack && (\n            <button\n              className=\"text-purple\"\n              style={{ fontWeight: \"700\", fontSize: \"16\" }}\n              onClick={handleBack}\n            >\n              Back\n            </button>\n          )}\n        </div>\n\n        {/* Continue Button */}\n        {registerLoader ? (\n          <LoaderAnimation loaderModal={registerLoader} />\n        ) : (\n          <div>\n            {addCalendarLoader ? (\n              <CircularProgress size={35} />\n            ) : (\n              <button\n                disabled={shouldContinue}\n                className=\"rounded-lg text-white bg-purple\"\n                style={{\n                  fontWeight: \"700\",\n                  fontSize: \"16px\",\n                  backgroundColor: shouldContinue ? \"#00000020\" : \"#7902DF\",\n                  color: shouldContinue ? \"#000000\" : \"#ffffff\",\n                  height: \"40px\",\n                  width: \"100px\",\n                }}\n                onClick={handleContinue}\n              >\n                Continue\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAWA,MAAM,SAAgC,CAAC,EACrC,cAAc,EACd,UAAU,EACV,gBAAgB,KAAK,EACrB,iBAAiB,KAAK,EACtB,iBAAiB,KAAK,EACtB,oBAAoB,KAAK,EAC1B;IACC,qBACE,6LAAC;kBACC,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;8BACE,CAAC,iBAAiB,4BACjB,6LAAC;wBACC,WAAU;wBACV,OAAO;4BAAE,YAAY;4BAAO,UAAU;wBAAK;wBAC3C,SAAS;kCACV;;;;;;;;;;;gBAOJ,+BACC,6LAAC,+IAAA,CAAA,UAAe;oBAAC,aAAa;;;;;yCAE9B,6LAAC;8BACE,kCACC,6LAAC,kOAAA,CAAA,mBAAgB;wBAAC,MAAM;;;;;6CAExB,6LAAC;wBACC,UAAU;wBACV,WAAU;wBACV,OAAO;4BACL,YAAY;4BACZ,UAAU;4BACV,iBAAiB,iBAAiB,cAAc;4BAChD,OAAO,iBAAiB,YAAY;4BACpC,QAAQ;4BACR,OAAO;wBACT;wBACA,SAAS;kCACV;;;;;;;;;;;;;;;;;;;;;;AASf;KArDM;uCAuDS","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/UserType.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Header from \"./Header\";\nimport ProgressBar from \"./ProgressBar\";\nimport Footer from \"./Footer\";\nimport { Box, CircularProgress, Modal } from \"@mui/material\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\n\ninterface UserTypeItem {\n  id: number;\n  title: string;\n  agentType: string;\n  icon: string;\n  areaOfFocusTitle: string;\n  userType: string;\n  roundedImage: boolean;\n}\n\ninterface RegisterDetails {\n  serviceID?: string;\n  focusAreaId?: string;\n  userType: number | null;\n  userTypeTitle: string | null;\n  areaFocusTitle: string | null;\n  otherFocusArea?: string;\n}\n\ninterface UserTypeProps {\n  handleContinue: () => void;\n  DefaultData?: any;\n  handleUserTypeChange: (userType: string) => void;\n}\n\nconst UserType: React.FC<UserTypeProps> = ({\n  handleContinue,\n  handleUserTypeChange,\n}) => {\n  const router = useRouter();\n  const [value] = useState(8);\n  const [selectUserType, setSelectUserType] = useState<number | null>(null);\n  const [selectUserTypeTitle, setSelectUserTypeTitle] = useState<string | null>(null);\n  const [selectedFocusAreaTitle, setSelectedFocusAreaTitle] = useState<string | null>(null);\n  const [showModal, setShowModal] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n  const [screenHeight, setScreenHeight] = useState<number | null>(null);\n\n\n  const userType : UserTypeItem[] =  [\n    {\n      id: 1,\n      title: \"Real Estate Agent\",\n      agentType: \"Real Estate Agent\",\n      // icon: \"/usertype/avt1.png\",\n      icon: \"/agencyIcons/agentsView/realState.jpg\",\n      areaOfFocusTitle: \"What area of real estate do you focus on?\",\n      userType: \"RealEstateAgent\",\n      roundedImage: true,\n    },\n    {\n      id: 2,\n      title: \"Sales Dev Agent\",\n      agentType: \"SDR/BDR Agent\",\n      // icon: \"/usertype/avt2.png\",\n      icon: \"/agencyIcons/agentsView/salesDev.jpg\",\n      areaOfFocusTitle: \"What area of sales do you focus on?\",\n      userType: \"SalesDevRep\",\n      roundedImage: true,\n    },\n    {\n      id: 3,\n      title: \"Solar Agent\",\n      agentType: \"Solar Agent\",\n      // icon: \"/usertype/avt3.png\",\n      icon: \"/agencyIcons/agentsView/solar.jpg\",\n      areaOfFocusTitle: \"What area of solar do you focus on?\",\n      userType: \"SolarRep\",\n      roundedImage: true,\n    },\n    {\n      id: 4,\n      title: \"Insurance Agent\",\n      agentType: \"Insurance Agent\",\n      // icon: \"/usertype/avt4.png\",\n      icon: \"/agencyIcons/agentsView/insurance.jpg\",\n      areaOfFocusTitle: \"What area of insurance do you focus on?\",\n      userType: \"InsuranceAgent\",\n      roundedImage: true,\n    },\n    {\n      id: 5,\n      title: \"Marketer\",\n      agentType: \"Marketer Agent\",\n      // icon: \"/usertype/avt5.png\",\n      icon: \"/agencyIcons/agentsView/marketer.jpg\",\n      areaOfFocusTitle: \"What area of marketing do you focus on?\",\n      userType: \"MarketerAgent\",\n      roundedImage: true,\n    },\n\n    {\n      id: 7,\n      title: \"Recruiter Agentt\",\n      agentType: \"Recruiter Agent\",\n      // icon: \"/usertype/avt8.png\",\n      icon: \"/agencyIcons/agentsView/recruiter.jpg\",\n      areaOfFocusTitle: \"What industries do you specialize in?\",\n      userType: \"RecruiterAgent\",\n      roundedImage: false,\n    },\n    {\n      id: 8,\n      title: \"Tax Agent\",\n      agentType: \"Tax Agent\",\n      // icon: \"/usertype/avt9.png\",\n      icon: \"/agencyIcons/agentsView/tax.jpg\",\n      areaOfFocusTitle: \"What type of clients do you primarily serve?\",\n      userType: \"TaxAgent\",\n      roundedImage: false,\n    },\n    {\n      id: 9,\n      title: \"Debt Collector Agent\",\n      agentType: \"Debt Collector Agent\",\n      // icon: \"/usertype/debtcollectoragent.svg\",\n      icon: \"/agencyIcons/agentsView/debt.jpg\",\n      areaOfFocusTitle: \"What type of clients do you primarily serve?\",\n      userType: \"DebtCollectorAgent\",\n      roundedImage: false,\n    },\n    {\n      id: 10,\n      title: \"Website Agent\",\n      agentType: \"Website Agent\",\n      // icon: \"/agentXOrb.gif\",\n      icon: \"/agencyIcons/agentsView/website.jpg\",\n      areaOfFocusTitle: \"How would you use AgentX?\",\n      userType: \"WebsiteAgent\",\n      roundedImage: true,\n    },\n    {\n      id: 11,\n      title: \"Med Spa Agent\",\n      agentType: \"Med Spa Agent\",\n      // icon: \"/usertype/avt8.png\",\n      icon: \"/agencyIcons/agentsView/medspa.jpg\",\n      areaOfFocusTitle: \"What types of services do you primarily offer\",\n      userType: \"MedSpaAgent\",\n      roundedImage: false,\n    },\n    {\n      id: 12,\n      title: \"Law Agent\",\n      agentType: \"Law Agent\",\n      // icon: \"/usertype/avt4.png\",\n      icon: \"/agencyIcons/agentsView/law.jpg\",\n      areaOfFocusTitle: \"What area of law do you primarily practice?\",\n      userType: \"LawAgent\",\n      roundedImage: false,\n    },\n    {\n      id: 13,\n      title: \"Loan Officer Agent\",\n      agentType: \"Loan Officer Agent\",\n      // icon: \"/usertype/avt2.png\",\n      icon: \"/agencyIcons/agentsView/loan.jpg\",\n      areaOfFocusTitle: \"What type of loans do you primarily work with?\",\n      userType: \"LoanOfficerAgent\",\n      roundedImage: false,\n    },\n\n    {\n      id: 100,\n      title: \"More\",\n      agentType: \"More Agent\",\n      icon: \"/agentXOrb.gif\", //\"/usertype/avt7.png\",\n      areaOfFocusTitle: \"How would you use AgentX?\",\n      userType: \"WebsiteAgent\",\n      roundedImage: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (selectUserType) {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [selectUserType]);\n\n  useEffect(() => {\n    const windowHeight = typeof window !== \"undefined\" ? window.innerHeight : 1000;\n    setScreenHeight(windowHeight);\n    \n    const localData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (localData) {\n      try {\n        const localDetails: RegisterDetails = JSON.parse(localData);\n        setSelectUserType(localDetails.userType);\n        handleUserTypeChange(localDetails.userType?.toString() || \"\");\n        setSelectUserTypeTitle(localDetails.userTypeTitle);\n        setSelectedFocusAreaTitle(localDetails.areaFocusTitle);\n      } catch (error) {\n        console.error(\"Error parsing registration details:\", error);\n      }\n    }\n  }, [handleUserTypeChange]);\n\n  const handleUserTypeSelection = (item: UserTypeItem) => {\n    setSelectUserType(item.id);\n    setSelectUserTypeTitle(item.userType);\n    setSelectedFocusAreaTitle(item.areaOfFocusTitle);\n    handleUserTypeChange(item.userType);\n  };\n\n  const handleNext = () => {\n    localStorage.removeItem(PersistanceKeys.RegisterDetails);\n    const userData: RegisterDetails = {\n      userType: selectUserType,\n      userTypeTitle: selectUserTypeTitle,\n      areaFocusTitle: selectedFocusAreaTitle,\n    };\n\n    localStorage.setItem(\n      PersistanceKeys.RegisterDetails,\n      JSON.stringify(userData)\n    );\n\n    if (selectUserType) {\n      handleContinue();\n    }\n  };\n\n  const modalStyles = {\n    modalsStyle: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    } as const,\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\", backgroundColor: \"transparent\" }}\n      className=\"overflow-y-none flex flex-row justify-center items-center\"\n    >\n      <div\n        className=\"bg-white sm:rounded-2xl flex flex-col justify-between w-full sm:mx-2 md:w-10/12 h-[100%] sm:h-[95%] py-4\"\n        style={{ scrollbarWidth: \"none\" }}\n      >\n        <div className={`h-[90svh] sm:h-[80svh]`}>\n          <div className=\"w-full h-[10%]\">\n            <Header />\n          </div>\n\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-4 w-11/12 md:text-4xl text-lg font-[600] text-center\"\n            >\n              Which AgentX will you build?\n            </div>\n\n            <div className=\"mt-2 w-11/12 text-[10px] sm:text-[17px] font-[400] text-center\">\n              Scale your salesforce. Handle any business use case. With AgentX,\n              <br />you can quickly build an AI agent in minutes.\n            </div>\n\n            <div className=\"flex flex-wrap md:w-11/12 sm:w-full lg:w-7/12 mt-8 h-[80%] overflow-auto scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n              {userType.map((item, index) => {\n                if (index === userType.length - 1) {\n                  return (\n                    <div\n                      key={index}\n                      className=\"flex flex-col gap-3 w-full pb-6 border-[2px] border-white rounded-xl items-center justify-center bg-[#FAF9FF]\"\n                    >\n                      <div className=\"sm:flex hidden\">\n                        <Image\n                          src=\"/svgIcons/halfOrb.svg\"\n                          height={282}\n                          width={282}\n                          alt=\"More agents coming soon\"\n                        />\n                      </div>\n                      <div className=\"text-[15px] font-[500] text-[#ADACAC]\">\n                        More agents coming in the future\n                      </div>\n                      <div className=\"sm:flex hidden\">\n                        <Image\n                          src=\"/svgIcons/blueThreeDots.svg\"\n                          height={9}\n                          width={37}\n                          alt=\"More options\"\n                        />\n                      </div>\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div key={index} className=\"flex w-6/12 md:w-4/12 p-2\">\n                      <div\n                        className={`w-full rounded-lg p-2 md:hover:border-2 md:hover:border-[#7902DF] border border-[#00000010] transition-all duration-400 ease-in-out transform active:scale-90 ${\n                          item.id === selectUserType ? \"border-2 border-[#7902DF]\" : \"\"\n                        }`}\n                        onClick={() => handleUserTypeSelection(item)}\n                        role=\"button\"\n                        tabIndex={0}\n                        onKeyDown={(e) => {\n                          if (e.key === \"Enter\" || e.key === \" \") {\n                            handleUserTypeSelection(item);\n                          }\n                        }}\n                      >\n                        <div\n                          className=\"h-[100px] sm:h-[198px] rounded w-full flex flex-col justify-center pb-[10px] items-center\"\n                          style={{ backgroundColor: \"#FAF9FF\" }}\n                        >\n                          <img\n                            src={item.icon}\n                            style={{\n                              width: item.id === 1 ? \"78%\" : \"60%\",\n                              transform: \"scale(1.1)\",\n                              borderRadius: \"50%\"\n                            }}\n                            alt={item.agentType}\n                          />\n                        </div>\n                        <div className=\"text-center mt-4 pb-4 font-[600] text-[17px]\">\n                          {item.agentType}\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%] flex flex-col justify-end w-full\">\n          <div>\n            <ProgressBar value={value} />\n          </div>\n          <div className=\"mb-4\" style={{ height: \"35px\" }}>\n            <Footer\n              handleContinue={handleNext}\n              donotShowBack={true}\n              shouldContinue={shouldContinue}\n            />\n          </div>\n        </div>\n      </div>\n\n      <Modal\n        open={showModal}\n        onClose={() => setShowModal(false)}\n        closeAfterTransition\n        BackdropProps={{\n          timeout: 1000,\n          sx: { backgroundColor: \"#00000040\" },\n        }}\n      >\n        <Box className=\"lg:w-5/12 sm:w-full w-8/12\" sx={modalStyles.modalsStyle}>\n          <div className=\"flex flex-row justify-center w-full\">\n            <div className=\"w-full bg-white p-5 rounded-[13px]\">\n              <div className=\"flex flex-row justify-end\">\n                <button onClick={() => setShowModal(false)}>\n                  <Image\n                    src=\"/assets/crossIcon.png\"\n                    height={40}\n                    width={40}\n                    alt=\"Close modal\"\n                  />\n                </button>\n              </div>\n              <div className=\"text-center mt-2 mb-4 font-[700] text-[24px]\">\n                Coming Soon ....\n              </div>\n            </div>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserType;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/apis/Apis.ts"],"sourcesContent":["// const BasePath = process.env.NEXT_PUBLIC_REACT_APP_BASE_URL;\n\nconst BasePath =\n  process.env.NEXT_PUBLIC_REACT_APP_ENVIRONMENT === \"Production\"\n    ? \"https://apimyagentx.com/agentx/\"\n    : \"https://apimyagentx.com/agentxtest/\";\n\nconsole.log(\n  \"Current environment is\",\n  process.env.NEXT_PUBLIC_REACT_APP_ENVIRONMENT\n);\n\nconst Apis = {\n  getCalenders: `${BasePath}api/calendar/calendars`,\n  register: `${BasePath}api/user/register`,\n  LogIn: `${BasePath}api/user/login`,\n  defaultData: `${BasePath}api/data/loadDefaualtData`,\n  buildAgent: `${BasePath}api/agent/buildAgent`,\n  DelAgent: `${BasePath}api/agent/deleteAgent`,\n  findPhoneNumber: `${BasePath}api/agent/findPhoneNumbers`,\n  purchaseNumber: `${BasePath}api/agent/purchasePhone`,\n  userAvailablePhoneNumber: `${BasePath}api/agent/listUsersAvailablePhoneNumbers`,\n  reassignNumber: `${BasePath}api/agent/releasePhoneNumber`,\n  asignPhoneNumber: `${BasePath}api/agent/assignPhoneNumber`,\n  getVoices: \"https://fine-tuner.ai/api/1.1/wf/v2_voice_agent_voices\",\n  addKyc: `${BasePath}api/agent/addKyc`,\n  deleteKyc: `${BasePath}api/agent/deleteKyc`,\n  updateKYC: `${BasePath}api/agent/updateKyc`,\n  getKYCs: `${BasePath}api/agent/getKycs`,\n  getPipelines: `${BasePath}api/pipeline/getPipelines`,\n  getPipelineById: `${BasePath}api/pipeline/getPipeline`,\n  getLeadsInStage: `${BasePath}api/leads/getLeadsInStage`,\n  updatePipeline: `${BasePath}api/pipeline/updatePipeline`,\n  createPipeLineCadence: `${BasePath}api/pipeline/createPipelineCadence`,\n  getAgentCadence: `${BasePath}api/pipeline/getAgentCadence`,\n  deletePipeline: `${BasePath}api/pipeline/deletePipeline`,\n  updateAgent: `${BasePath}api/agent/updateAgent`,\n  updateSubAgent: `${BasePath}api/agent/updateSubAgent`,\n  createLead: `${BasePath}api/leads/addLeads`,\n  getLeads: `${BasePath}api/leads/getLeads`,\n  getSheets: `${BasePath}api/leads/getSheets`,\n  getAgents: `${BasePath}api/agent/getAgents`,\n  assignLeadToPipeLine: `${BasePath}api/pipeline/assignLeadsToPipeline`,\n  uniqueColumns: `${BasePath}api/leads/getUniqueColumns`,\n  CheckEmail: `${BasePath}api/user/checkEmailExists`,\n  CheckPhone: `${BasePath}api/user/checkPhoneNumber`,\n  getCallLogs: `${BasePath}api/leads/callLogs`,\n  getCallsInBatch: `${BasePath}api/pipeline/getCallsInABatch`,\n  getLeadsInBatch: `${BasePath}api/pipeline/leadsInBatch`,\n  getSheduledCallLogs: `${BasePath}api/pipeline/getScheduledCalls`,\n  getAdminSheduledCallLogs: `${BasePath}api/admin/getScheduledCallsAdmin`,\n  getAgentCallLogs: `${BasePath}api/agent/getAgentCallActivity`,\n  pauseAgent: `${BasePath}api/pipeline/pauseAgentCadence`,\n  resumeCalls: `${BasePath}api/pipeline/resumeAgentCadence`,\n  getUniqueColumns: `${BasePath}api/leads/getUniqueColumns`,\n  addSmartList: `${BasePath}api/leads/addSmartList`,\n  delSmartList: `${BasePath}api/leads/deleteList`,\n  addCustomStage: `${BasePath}api/pipeline/createStage`,\n  deleteStage: `${BasePath}api/pipeline/deletePipelineStage`,\n  UpdateStage: `${BasePath}api/pipeline/updateStage`,\n  addObjectionGuardrial: `${BasePath}api/agent/addObjectionGuardRail`,\n  getObjectionGuardrial: `${BasePath}api/agent/getObjectionsAndGuardrails`,\n  DelObjectGuard: `${BasePath}api/agent/deleteObjectionGuardRail`,\n  reorderStages: `${BasePath}api/pipeline/reorderStages`,\n  createPipeLine: `${BasePath}api/pipeline/createPipeline`,\n  testAI: `${BasePath}api/agent/testAi`,\n  addCalender: `${BasePath}api/calendar/createCalendar`,\n  addLeadNote: `${BasePath}api/leads/addLeadNote`,\n  getDashboardData: `${BasePath}api/agent/dashboard`,\n  delLeadTag: `${BasePath}api/leads/deleteLeadTag`,\n  createSetupIntent: `${BasePath}api/user/createSetupIntent`,\n  getPaymentIntent: `${BasePath}api/user/getSetupIntent`,\n  addCard: `${BasePath}api/user/addPaymentMethod`,\n  subscribePlan: `${BasePath}api/user/subscribePlan`,\n  purchaseSupportPlan: `${BasePath}api/user/purchaseSupportPlan`,\n  getLeadDetails: `${BasePath}api/leads/leadDetail`,\n  getStagesList: `${BasePath}api/pipeline/getPipeline`,\n  updateLeadStageApi: `${BasePath}api/leads/updateLeadStage`,\n  sendVerificationCode: `${BasePath}api/user/sendVerificationCode`,\n  deleteLead: `${BasePath}api/leads/deleteLead`,\n  getProfileData: `${BasePath}api/user/myProfile`,\n  getCardsList: `${BasePath}api/user/getPaymentMethods`,\n  makeDefaultCard: `${BasePath}api/user/setDefaultPaymentMethod`,\n  getPaymentHistory: `${BasePath}api/user/getTransactionsHistory`,\n  cancelPlan: `${BasePath}api/user/cancelPlan`,\n  redeemPlan: `${BasePath}api/user/redeemAbortCancelReward`,\n  getNotifications: `${BasePath}api/user/notifications`,\n  updateAgentImg: `${BasePath}api/agent/updateAgentProfileImage`,\n  myApiKeys: `${BasePath}api/user/apiKeys`,\n  genrateApiKey: `${BasePath}api/user/generateApiKey`,\n  getImportantCalls: `${BasePath}api/leads/importantCalls`,\n  updateProfileApi: `${BasePath}api/user/updateProfile`,\n  getTeam: `${BasePath}api/team/getTeamMembers`,\n  inviteTeamMember: `${BasePath}api/team/inviteTeamMember`,\n  deleteTeamMember: `${BasePath}api/team/deleteTeamMember`,\n  AssignLeadToTeam: `${BasePath}api/team/assignLeadToTeam`,\n  delNumber: `${BasePath}api/agent/deletePhoneNumber`,\n  calcelPlanReason: `${BasePath}api/user/addCancelPlanReason`,\n  sendFeedbback: `${BasePath}api/user/sendFeedback`,\n  getAiNot: `${BasePath}/api/agent/sendTestAiNotification`,\n  getUsers: `${BasePath}/api/admin/users`,\n  addAffiliate: `${BasePath}api/admin/addAffiliate`,\n  getAffiliate: `${BasePath}api/admin/getAffiliates`,\n  deleteAffiliate: `${BasePath}api/admin/deleteAffiliate`,\n  adminStats: `${BasePath}api/admin/adminStats`,\n  getUsersForAffiliate: `${BasePath}api/admin/usersForAffiliate`,\n  AddKnowledgebase: `${BasePath}api/kb/addKnowledgebase`,\n  GetKnowledgebase: `${BasePath}api/kb/getKnowledgebase`,\n  deleteKnowledgebase: `${BasePath}api/kb/deleteKnowledgebase`,\n  AdminAnalytics: `${BasePath}api/admin/adminAnalytics`,\n  adminCallLogs: `${BasePath}api/admin/callLogsAdmin`,\n  addMinutes: `${BasePath}api/admin/addMinutesToUser`,\n  adminUsersWithUniquePhoneNumbers: `${BasePath}api/admin/adminUsersWithUniquePhoneNumbers`,\n  adminEngagements: `${BasePath}api/admin/adminEngagements`,\n  getProfileFromId: `${BasePath}api/user/getProfileFromId`,\n  getUsersWithUniqueNumbers: `${BasePath}api/admin/adminUsersWithUniquePhoneNumbers`,\n  getUsersWithAgents: `${BasePath}api/admin/adminUsersWithAgents`,\n  getUsersWithPipelines: `${BasePath}api/admin/adminUsersWithPipelines`,\n  getUsersWithLeads: `${BasePath}api/admin/adminUsersWithLeads`,\n  getUsersWithTeams: `${BasePath}api/admin/adminUsersWithTeams`,\n  getUsersWithCalenders: `${BasePath}api/admin/adminUsersWithCalendars`,\n  deleteProfile: `${BasePath}api/user/deleteProfile`,\n  deleteCalendar: `${BasePath}api/calendar/deleteCalendar`,\n  getVerificationCodes: `${BasePath}api/admin/getVerificationCodes`,\n  getAgentDetails: `${BasePath}api/agent/getAgentDetails`,\n  setVoicemaeil: `${BasePath}api/agent/setVoicemail`,\n  updateVoicemail: `${BasePath}api/agent/updateVoicemail`,\n  enrichLead: `${BasePath}api/leads/enrichLead`,\n  chechAffiliateUniqueUrl: `${BasePath}api/admin/checkAffiliateUrl`,\n  getPayouts: `${BasePath}api/admin/getAffiliatePayouts`,\n  addPayouts: `${BasePath}api/admin/payAffiliate`,\n  connectAgencyAccount: `${BasePath}api/agency/connectAgency`,\n  getPlansForAgency: `${BasePath}api/agency/getPlanListForAgency`,\n  pauseProfile: `${BasePath}api/user/pauseProfile`,\n  addMonthlyPlan: `${BasePath}api/agency/createAgencyPlan`,\n  getMonthlyPlan: `${BasePath}api/agency/getAgencyPlansList`,\n  addXBarOptions: `${BasePath}api/agency/createAgencyXbarPlan`,\n  getXBarOptions: `${BasePath}api/agency/getAgencyXbarPlansList`,\n  CreateAgencySubAccount: `${BasePath}api/agency/createSubAccount`,\n  getAgencySubAccount: `${BasePath}api/agency/getSubAccounts`,\n  getSubAccountPlans: `${BasePath}api/agency/getPlansForSubaccount`,\n  subAgencyAndSubAccountPlans: `${BasePath}api/agency/subscribeAgencyPlan`,\n  addComment: `${BasePath}api/leads/addCommentOnTranscript`,\n  createOnboardingLink: `${BasePath}api/agency/createConnectLink`,\n  setUpAgencyTwilioKey: `${BasePath}api/agency/addSynthflowTwilio`,\n  addUpSellPhone: `${BasePath}api/user/setPhoneNumberPrice`,\n  getCallTranscript: `${BasePath}api/leads/getCallTranscript`,\n} as const;\n\nexport default Apis;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1117, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/UserService.tsx"],"sourcesContent":["import Image from \"next/image\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Header from \"./Header\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Footer from \"./Footer\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport Apis from \"../apis/Apis\";\r\nimport { PersistanceKeys } from \"@/constants/Constants\";\r\nimport { GetServicesForUser } from \"@/utilities/AgentServices\";\r\n\r\n// Define types for props\r\ntype UserServiceProps = {\r\n  handleContinue: () => void;\r\n  handleBack: () => void;\r\n};\r\n\r\n// Define types for service item\r\ntype ServiceItem = {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\nconst UserService: React.FC<UserServiceProps> = ({ handleContinue, handleBack }) => {\r\n  const router = useRouter();\r\n  const [serviceId, setServiceId] = useState<number[]>([]);\r\n  const [servicesData, setServicesData] = useState<ServiceItem[]>([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n  const [shouldContinue, setShouldContinue] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const selectedServiceID = localStorage.getItem(PersistanceKeys.RegisterDetails);\r\n    if (selectedServiceID) {\r\n      const serviceIds = JSON.parse(selectedServiceID);\r\n      setServiceId(serviceIds.serviceID);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDefaultData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (serviceId.length > 0) {\r\n      setShouldContinue(false);\r\n    } else {\r\n      setShouldContinue(true);\r\n    }\r\n  }, [serviceId]);\r\n\r\n  const getDefaultData = async (): Promise<void> => {\r\n    try {\r\n      const selectedServiceID = localStorage.getItem(PersistanceKeys.RegisterDetails);\r\n      let AgentTypeTitle: string | null = null;\r\n      if (selectedServiceID) {\r\n        const serviceIds = JSON.parse(selectedServiceID);\r\n        AgentTypeTitle = serviceIds.userTypeTitle;\r\n      }\r\n      const servicesLocal = GetServicesForUser(AgentTypeTitle);\r\n      setServicesData(servicesLocal);\r\n\r\n      const ApiPath = `${Apis.defaultData}?type=${AgentTypeTitle}`;\r\n      const response : any = await axios.get(ApiPath, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response) {\r\n        setServicesData(response.data.data.agentServices);\r\n      }\r\n    } catch (error) {\r\n      // console.error(\"Error in getDefaultData:\", error);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const handleserviceId = (id: number): void => {\r\n    setServiceId((prevIds) => {\r\n      if (prevIds.includes(id)) {\r\n        return prevIds.filter((prevId) => prevId !== id);\r\n      } else {\r\n        return [...prevIds, id];\r\n      }\r\n    });\r\n    setValue(30);\r\n  };\r\n\r\n  const handleNext = (): void => {\r\n    const data = localStorage.getItem(PersistanceKeys.RegisterDetails);\r\n    if (data) {\r\n      const details = JSON.parse(data);\r\n      details.serviceID = serviceId;\r\n      localStorage.setItem(PersistanceKeys.RegisterDetails, JSON.stringify(details));\r\n\r\n      if (serviceId && serviceId.length > 0) {\r\n        handleContinue();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ width: \"100%\" }}\r\n      className=\"overflow-y-none flex flex-row justify-center items-center\"\r\n    >\r\n      <div\r\n        className=\"bg-white sm:rounded-2xl flex flex-col justify-between w-full sm:mx-2 md:w-10/12 h-[100%] sm:h-[90%] py-4\"\r\n        style={{ scrollbarWidth: \"none\" }}\r\n      >\r\n        <div className=\"h-[90svh] sm:h-[82svh]\">\r\n          <div className=\"h-[10%]\">\r\n            <Header />\r\n          </div>\r\n\r\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\r\n            <div\r\n              className=\"mt-6 w-10/12 sm:w-full md:w-11/12 md:text-4xl text-lg font-[650] sm:font-[600]\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              What would you like AgentX to help you with?\r\n            </div>\r\n\r\n            {loader ? (\r\n              <div className=\"w-full flex flex-row justify-center items-center h-screen\">\r\n                <CircularProgress size={35} />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className=\"mt-2 pb-2 sm:mt-8 w-full md:w-10/12 lg:w-7/12 gap-4 flex flex-col sm:max-h-[90%] max-h-[100%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\"\r\n              >\r\n                {servicesData.map((item) => (\r\n                  <button\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                      handleserviceId(item.id);\r\n                    }}\r\n                    className=\"border-none outline-none\"\r\n                  >\r\n                    <div\r\n                      className=\"border bg-white flex flex-row items-center w-full rounded-2xl pt-3\"\r\n                      style={{\r\n                        border: serviceId.includes(item.id)\r\n                          ? \"2px solid #7902DF\"\r\n                          : \"\",\r\n                        scrollbarWidth: \"none\",\r\n                        backgroundColor: serviceId.includes(item.id)\r\n                          ? \"#402FFF05\"\r\n                          : \"\",\r\n                      }}\r\n                    >\r\n                      <div className=\"flex flex-row items-start px-4 w-full py-2 gap-2\">\r\n                        <div className=\"mt-2 sm:hidden\">\r\n                          {serviceId.includes(item.id) ? (\r\n                            <Image\r\n                              src={\"/assets/charmTick.png\"}\r\n                              alt=\"*\"\r\n                              height={24}\r\n                              width={24}\r\n                            />\r\n                          ) : (\r\n                            <Image\r\n                              src={\"/assets/charmUnMark.png\"}\r\n                              alt=\"*\"\r\n                              height={24}\r\n                              width={24}\r\n                            />\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 sm:flex hidden\">\r\n                          {serviceId.includes(item.id) ? (\r\n                            <Image\r\n                              src={\"/assets/charmTick.png\"}\r\n                              alt=\"*\"\r\n                              height={24}\r\n                              width={24}\r\n                            />\r\n                          ) : (\r\n                            <Image\r\n                              src={\"/assets/charmUnMark.png\"}\r\n                              alt=\"*\"\r\n                              height={24}\r\n                              width={24}\r\n                            />\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"text-start w-[100%] md:w-[90%]\">\r\n                          <div\r\n                            style={{\r\n                              fontWeight: \"700\",\r\n                              fontSize: 20,\r\n                              textAlign: \"start\",\r\n                            }}\r\n                          >\r\n                            {item.title}\r\n                          </div>\r\n\r\n                          <div className=\"mt-2\" style={{ textAlign: \"start\" }}>\r\n                            {item.description}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6 h-[10%] flex flex-col justify-end\">\r\n          <div>\r\n            <ProgressBar value={33} />\r\n          </div>\r\n\r\n          <div style={{ height: \"35px\" }}>\r\n            <Footer\r\n              handleContinue={handleNext}\r\n              handleBack={handleBack}\r\n              shouldContinue={shouldContinue}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserService;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1482, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/FocusArea.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Image from \"next/image\";\r\nimport axios from \"axios\";\r\nimport Apis from \"../apis/Apis\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { PersistanceKeys } from \"@/constants/Constants\";\r\nimport { GetAreasOfFocusForUser } from \"@/utilities/AreaOfFocus\";\r\n\r\ntype FocusAreaProps = {\r\n  handleContinue: () => void;\r\n  handleBack: () => void;\r\n  DefaultData?: any;\r\n  handleSalesAgentContinue?: () => void;\r\n  handleSolarAgentContinue?: () => void;\r\n  handleInsuranceContinue?: () => void;\r\n  handleMarketerAgentContinue?: () => void;\r\n  handleWebsiteAgentContinue?: () => void;\r\n  handleRecruiterAgentContinue?: () => void;\r\n  handleTaxAgentContinue?: () => void;\r\n};\r\n\r\ntype FocusItem = {\r\n  id: string | number;\r\n  title: string;\r\n  description?: string;\r\n};\r\n\r\nconst FocusArea: React.FC<FocusAreaProps> = ({\r\n  handleContinue,\r\n  handleBack,\r\n}) => {\r\n  const othersFocus = useRef<HTMLInputElement>(null);\r\n  const router = useRouter();\r\n\r\n  const [focusArea, setFocusArea] = useState<(string | number)[]>([]);\r\n  const [focusAreaTitle, setFocusAreaTitle] = useState<string>(\"\");\r\n  const [loader, setLoader] = useState<boolean>(false);\r\n  const [focusData, setFocusData] = useState<FocusItem[]>([]);\r\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\r\n\r\n  const [otherType, setOtherType] = useState<string>(\"\");\r\n  const [checkOthersFocusArea, setCheckOthersFocusArea] = useState<boolean>(false);\r\n  const [showOtherInput, setShowOtherInput] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const focusData = localStorage.getItem(PersistanceKeys.RegisterDetails);\r\n    if (focusData) {\r\n      const FocusAreaDetails = JSON.parse(focusData);\r\n      setFocusArea(FocusAreaDetails.focusAreaId || []);\r\n      setFocusAreaTitle(FocusAreaDetails.areaFocusTitle || \"\");\r\n      if (FocusAreaDetails.userTypeTitle !== \"RealEstateAgent\") {\r\n        setShowOtherInput(true);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDefaultData();\r\n  }, []);\r\n\r\n  const getDefaultData = async () => {\r\n    try {\r\n      const selectedServiceID = localStorage.getItem(PersistanceKeys.RegisterDetails);\r\n      let AgentTypeTitle: string | null = null;\r\n\r\n      if (selectedServiceID) {\r\n        const serviceIds = JSON.parse(selectedServiceID);\r\n        AgentTypeTitle = serviceIds.userTypeTitle;\r\n      }\r\n\r\n      const focusData = localStorage.getItem(PersistanceKeys.RegisterDetails);\r\n      if (focusData) {\r\n        const FocusAreaDetails = JSON.parse(focusData);\r\n\r\n        if (FocusAreaDetails.userTypeTitle !== \"RecruiterAgent\") {\r\n          const servicesLocal = GetAreasOfFocusForUser(AgentTypeTitle);\r\n          setFocusData(servicesLocal);\r\n        }\r\n\r\n        const ApiPath = `${Apis.defaultData}?type=${AgentTypeTitle}`;\r\n        const response :any = await axios.get(ApiPath, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (response) {\r\n          if (FocusAreaDetails.userTypeTitle === \"RecruiterAgent\") {\r\n            setFocusData(response?.data?.data?.userIndustry || []);\r\n          } else {\r\n            setFocusData(response?.data?.data?.areaOfFocus || []);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in getDefaultData:\", error);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (focusArea.length > 0 || otherType.length > 0) {\r\n      setShouldContinue(false);\r\n    } else {\r\n      setShouldContinue(true);\r\n    }\r\n  }, [focusArea, otherType]);\r\n\r\n  const handleNext = () => {\r\n    const data = localStorage.getItem(PersistanceKeys.RegisterDetails);\r\n\r\n    if (data) {\r\n      const LocalDetails = JSON.parse(data);\r\n      let details = LocalDetails;\r\n\r\n      if (Array.isArray(focusArea)) {\r\n        details.focusAreaId = otherType.trim()\r\n          ? [...focusArea, otherType]\r\n          : [...focusArea];\r\n      } else {\r\n        details.focusAreaId = otherType.trim() ? [otherType] : [];\r\n      }\r\n\r\n      localStorage.setItem(\r\n        PersistanceKeys.RegisterDetails,\r\n        JSON.stringify(details)\r\n      );\r\n\r\n      handleContinue();\r\n    }\r\n  };\r\n\r\n  const handlefocusArea = (id: string | number) => {\r\n    setFocusArea((prevIds) => {\r\n      if (prevIds.includes(id)) {\r\n        return prevIds.filter((prevId) => prevId !== id);\r\n      } else {\r\n        return [...prevIds, id];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSelectOthersField = () => {\r\n    if (checkOthersFocusArea) {\r\n      if (othersFocus.current) {\r\n        othersFocus.current.blur();\r\n      }\r\n      setOtherType(\"\");\r\n    } else {\r\n      othersFocus.current?.focus();\r\n    }\r\n    setCheckOthersFocusArea(!checkOthersFocusArea);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ width: \"100%\" }}\r\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\r\n    >\r\n      <div\r\n        className=\"bg-white sm:rounded-2xl flex flex-col justify-between w-full sm:mx-2 md:w-10/12 sm:h-[90%] py-4\"\r\n        style={{ scrollbarWidth: \"none\" }}\r\n      >\r\n        <div className=\"h-[90svh] sm:h-[82svh]\">\r\n          <div className=\"h-[10%]\">\r\n            <Header />\r\n          </div>\r\n\r\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\r\n            <div\r\n              className=\"mt-6 w-9/12 sm:w-11/12 md:text-4xl text-lg font-[600]\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              {focusAreaTitle || \"\"}\r\n            </div>\r\n\r\n            {loader ? (\r\n              <div className=\"w-full flex flex-row items-center justify-center h-screen\">\r\n                <CircularProgress size={35} />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className=\"mt-2 sm:mt-8 pb-2 md:10/12 w-full lg:w-7/12 gap-4 flex flex-col sm:max-h-[90%] max-h-[100%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\"\r\n              >\r\n                {focusData.map((item) => (\r\n                  <button\r\n                    key={item.id}\r\n                    onClick={() => handlefocusArea(item.id)}\r\n                    className=\"border-none outline-none\"\r\n                  >\r\n                    <div\r\n                      className=\"border bg-white flex flex-row items-start pt-3 w-full rounded-2xl\"\r\n                      style={{\r\n                        border: focusArea.includes(item.id)\r\n                          ? \"2px solid #7902DF\"\r\n                          : \"\",\r\n                        scrollbarWidth: \"none\",\r\n                        backgroundColor: focusArea.includes(item.id)\r\n                          ? \"#402FFF05\"\r\n                          : \"\",\r\n                      }}\r\n                    >\r\n                      <div className=\"w-full flex flex-row items-start px-4 py-2 gap-2\">\r\n                        <div className=\"mt-2 sm:hidden\">\r\n                          <Image\r\n                            src={\r\n                              focusArea.includes(item.id)\r\n                                ? \"/assets/charmTick.png\"\r\n                                : \"/assets/charmUnMark.png\"\r\n                            }\r\n                            alt=\"*\"\r\n                            height={24}\r\n                            width={24}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 sm:flex hidden\">\r\n                          <Image\r\n                            src={\r\n                              focusArea.includes(item.id)\r\n                                ? \"/assets/charmTick.png\"\r\n                                : \"/assets/charmUnMark.png\"\r\n                            }\r\n                            alt=\"*\"\r\n                            height={32}\r\n                            width={32}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"text-start w-[100%] md:w-[90%]\">\r\n                          <div\r\n                            style={{\r\n                              fontWeight: \"700\",\r\n                              fontSize: 20,\r\n                            }}\r\n                          >\r\n                            {item.title}\r\n                          </div>\r\n                          {item.description && (\r\n                            <div className=\"mt-2\">{item.description}</div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </button>\r\n                ))}\r\n\r\n                {showOtherInput && (\r\n                  <div className=\"border-none outline-none\">\r\n                    <div\r\n                      className=\"border bg-white flex flex-row items-start pt-3 w-full rounded-2xl\"\r\n                      style={{\r\n                        border: checkOthersFocusArea ? \"2px solid #7902DF\" : \"\",\r\n                        scrollbarWidth: \"none\",\r\n                        backgroundColor: checkOthersFocusArea\r\n                          ? \"#402FFF05\"\r\n                          : \"\",\r\n                      }}\r\n                    >\r\n                      <div className=\"w-full flex flex-row items-start justify-between px-4 py-2\">\r\n                        <div className=\"text-start w-[100%] md:w-[90%]\">\r\n                          <button\r\n                            onClick={handleSelectOthersField}\r\n                            style={{\r\n                              fontWeight: \"700\",\r\n                              fontSize: 20,\r\n                              width: \"100%\",\r\n                              textAlign: \"start\",\r\n                              outline: \"none\",\r\n                            }}\r\n                          >\r\n                            Other (Type in)\r\n                          </button>\r\n                          <div className=\"mt-2\">\r\n                            <input\r\n                              ref={othersFocus}\r\n                              className=\"outline-none border-none focus:ring-0 w-full\"\r\n                              style={{\r\n                                fontWeight: \"500\",\r\n                                fontSize: 15,\r\n                                color: \"#151515\",\r\n                              }}\r\n                              placeholder=\"Type here...\"\r\n                              value={otherType}\r\n                              onChange={(e) => {\r\n                                const value = e.target.value;\r\n                                setOtherType(value);\r\n                                if (value) {\r\n                                  setCheckOthersFocusArea(true);\r\n                                }\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <button onClick={handleSelectOthersField}>\r\n                          <Image\r\n                            src={\r\n                              checkOthersFocusArea\r\n                                ? \"/assets/charmTick.png\"\r\n                                : \"/assets/charmUnMark.png\"\r\n                            }\r\n                            alt=\"*\"\r\n                            height={36}\r\n                            width={36}\r\n                          />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"h-[10%]\">\r\n          <div>\r\n            <ProgressBar value={60} />\r\n          </div>\r\n\r\n          <Footer\r\n            handleContinue={() => {\r\n              const windowWidth = typeof window !== \"undefined\" ? window.innerWidth : 1000;\r\n              if (windowWidth < 640) {\r\n                const data = localStorage.getItem(PersistanceKeys.RegisterDetails);\r\n                if (data) {\r\n                  const LocalDetails = JSON.parse(data);\r\n                  let details = LocalDetails;\r\n\r\n                  if (Array.isArray(focusArea)) {\r\n                    details.focusAreaId = otherType.trim()\r\n                      ? [...focusArea, otherType]\r\n                      : [...focusArea];\r\n                  } else {\r\n                    details.focusAreaId = otherType.trim() ? [otherType] : [];\r\n                  }\r\n\r\n                  localStorage.setItem(\r\n                    PersistanceKeys.RegisterDetails,\r\n                    JSON.stringify(details)\r\n                  );\r\n                }\r\n                handleContinue();\r\n              } else {\r\n                handleNext();\r\n              }\r\n            }}\r\n            handleBack={handleBack}\r\n            shouldContinue={shouldContinue}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FocusArea;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1980, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/SignUpForm.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Image from \"next/image\";\r\n\r\ntype SignUpFormProps = {\r\n  currentStep: number;\r\n  totalSteps: number;\r\n  onNext: () => void;\r\n  onBack?: () => void;\r\n};\r\n\r\nconst SignUpForm: React.FC<SignUpFormProps> = ({\r\n  currentStep,\r\n  totalSteps,\r\n  onNext,\r\n  onBack,\r\n}) => {\r\n  const handleNextClick = () => {\r\n    onNext();\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    if (onBack) onBack();\r\n  };\r\n\r\n  const progressPercentage = (currentStep / totalSteps) * 100;\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full h-full items-center justify-center p-4\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-row items-center justify-between w-full mb-4\">\r\n        <Image\r\n          src=\"/assets/agentX.png\"\r\n          alt=\"AgentX Logo\"\r\n          height={40}\r\n          width={140}\r\n        />\r\n        <div className=\"text-gray-500 text-sm\">\r\n          Step {currentStep} of {totalSteps}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"w-full bg-gray-200 rounded-full h-2 mb-6\">\r\n        <div\r\n          className=\"bg-purple h-2 rounded-full transition-all duration-300\"\r\n          style={{ width: `${progressPercentage}%` }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* Form Content */}\r\n      <div className=\"flex flex-col items-center justify-center w-full flex-grow\">\r\n        {/* You can insert dynamic form fields based on currentStep here */}\r\n        <p className=\"text-lg font-semibold mb-2\">\r\n          This is a placeholder for step {currentStep}\r\n        </p>\r\n        <p className=\"text-gray-500 mb-6\">\r\n          Customize this section with your form fields.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Navigation Buttons */}\r\n      <div className=\"flex flex-row items-center justify-between w-full mt-6\">\r\n        {onBack && (\r\n          <button\r\n            onClick={handleBackClick}\r\n            className=\"text-purple border border-purple rounded px-6 py-2 hover:bg-purple hover:text-white transition-colors duration-200\"\r\n          >\r\n            Back\r\n          </button>\r\n        )}\r\n\r\n        <button\r\n          onClick={handleNextClick}\r\n          className=\"bg-purple text-white rounded px-6 py-2 hover:bg-purple-dark transition-colors duration-200 ml-auto\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n"],"names":[],"mappings":";;;;AACA;;;AASA,MAAM,aAAwC,CAAC,EAC7C,WAAW,EACX,UAAU,EACV,MAAM,EACN,MAAM,EACP;IACC,MAAM,kBAAkB;QACtB;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,QAAQ;IACd;IAEA,MAAM,qBAAqB,AAAC,cAAc,aAAc;IAExD,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,QAAQ;wBACR,OAAO;;;;;;kCAET,6LAAC;wBAAI,WAAU;;4BAAwB;4BAC/B;4BAAY;4BAAK;;;;;;;;;;;;;0BAK3B,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,mBAAmB,CAAC,CAAC;oBAAC;;;;;;;;;;;0BAK7C,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAE,WAAU;;4BAA6B;4BACR;;;;;;;kCAElC,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAMpC,6LAAC;gBAAI,WAAU;;oBACZ,wBACC,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;kCAKH,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;KAtEM;uCAwES","debugId":null}},
    {"offset": {"line": 2122, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/dashboard/leads/AgentSelectSnackMessage.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nexport enum SnackbarTypes {\n  Error = \"Error\",\n  Warning = \"Warning\",\n  Success = \"Success\",\n}\n\ninterface AgentSelectSnackMessageProps {\n  title?: string | null;\n  message?: string | null;\n  type?: SnackbarTypes | null;\n  time?: number;\n  isVisible: boolean;\n  hide: () => void;\n}\n\nconst DefaultMessage = null;\n\nconst AgentSelectSnackMessage: React.FC<AgentSelectSnackMessageProps> = ({\n  title = null,\n  message = DefaultMessage,\n  type = SnackbarTypes.Error,\n  time = 4000,\n  isVisible,\n  hide,\n}) => {\n  useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        hide();\n      }, time);\n\n      return () => clearTimeout(timer);\n    }\n  }, [isVisible, time, hide]);\n\n  const GetIcon = (): string => {\n    switch (type) {\n      case SnackbarTypes.Success:\n        return \"/svgIcons/successMsgIcon.svg\";\n      case SnackbarTypes.Warning:\n      case SnackbarTypes.Error:\n      default:\n        return \"/assets/salmanassets/danger_conflict.svg\";\n    }\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div\n      className=\"flex items-center justify-center w-full z-[99999]\"\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        translate: \"-50%\",\n        top: 10,\n      }}\n    >\n      <div\n        className=\"flex items-center space-x-4 p-2 bg-white rounded-md shadow-md\"\n        style={{ width: \"fit-content\" }}\n      >\n        {/* Icon Section */}\n        <div className=\"flex-shrink-0\">\n          <div className=\"w-10 h-10 flex items-center justify-center bg-red-100 rounded-full\">\n            <img src={GetIcon()} alt=\"snackbar-icon\" />\n          </div>\n        </div>\n\n        {/* Text Section */}\n        <div style={{ width: \"fit-content\" }}>\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            {title || message}\n          </h3>\n          <p\n            className={`${!title ? \"text-lg\" : \"text-sm\"} text-gray-600`}\n            style={{ fontWeight: !title ? \"600\" : \"500\" }}\n          >\n            {title && message}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AgentSelectSnackMessage;\n"],"names":[],"mappings":";;;;;AAAA;;;;AAEO,IAAA,AAAK,uCAAA;;;;WAAA;;AAeZ,MAAM,iBAAiB;AAEvB,MAAM,0BAAkE,CAAC,EACvE,QAAQ,IAAI,EACZ,UAAU,cAAc,EACxB,cAA0B,EAC1B,OAAO,IAAI,EACX,SAAS,EACT,IAAI,EACL;;IACC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACR,IAAI,WAAW;gBACb,MAAM,QAAQ;+DAAW;wBACvB;oBACF;8DAAG;gBAEH;yDAAO,IAAM,aAAa;;YAC5B;QACF;4CAAG;QAAC;QAAW;QAAM;KAAK;IAE1B,MAAM,UAAU;QACd,OAAQ;YACN;gBACE,OAAO;YACT;YACA;YACA;gBACE,OAAO;QACX;IACF;IAEA,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,6LAAC;QACC,WAAU;QACV,OAAO;YACL,UAAU;YACV,MAAM;YACN,WAAW;YACX,KAAK;QACP;kBAEA,cAAA,6LAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO;YAAc;;8BAG9B,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,KAAK;4BAAW,KAAI;;;;;;;;;;;;;;;;8BAK7B,6LAAC;oBAAI,OAAO;wBAAE,OAAO;oBAAc;;sCACjC,6LAAC;4BAAG,WAAU;sCACX,SAAS;;;;;;sCAEZ,6LAAC;4BACC,WAAW,GAAG,CAAC,QAAQ,YAAY,UAAU,cAAc,CAAC;4BAC5D,OAAO;gCAAE,YAAY,CAAC,QAAQ,QAAQ;4BAAM;sCAE3C,SAAS;;;;;;;;;;;;;;;;;;;;;;;AAMtB;GAnEM;KAAA;uCAqES","debugId":null}},
    {"offset": {"line": 2261, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/services/AuthVerification/SnackMessages.tsx"],"sourcesContent":["import AgentSelectSnackMessage, { SnackbarTypes } from \"../../../dashboard/leads/AgentSelectSnackMessage\";\nimport React from \"react\";\n\ntype SnackMessagesProps = {\n  message: string;\n  isVisible: boolean;\n  setIsVisible: (visible: boolean) => void;\n  success?: boolean;\n};\n\nconst SnackMessages: React.FC<SnackMessagesProps> = ({\n  message,\n  isVisible,\n  setIsVisible,\n  success = true,\n}) => {\n  return (\n    <div>\n      {/* Snack Message */}\n      <AgentSelectSnackMessage\n        isVisible={isVisible}\n        hide={() => setIsVisible(false)}\n        message={message}\n        type={success ? SnackbarTypes.Success : SnackbarTypes.Error}\n      />\n    </div>\n  );\n};\n\nexport default SnackMessages;\n"],"names":[],"mappings":";;;;AAAA;;;AAUA,MAAM,gBAA8C,CAAC,EACnD,OAAO,EACP,SAAS,EACT,YAAY,EACZ,UAAU,IAAI,EACf;IACC,qBACE,6LAAC;kBAEC,cAAA,6LAAC,+JAAA,CAAA,UAAuB;YACtB,WAAW;YACX,MAAM,IAAM,aAAa;YACzB,SAAS;YACT,MAAM,UAAU,+JAAA,CAAA,gBAAa,CAAC,OAAO,GAAG,+JAAA,CAAA,gBAAa,CAAC,KAAK;;;;;;;;;;;AAInE;KAjBM;uCAmBS","debugId":null}},
    {"offset": {"line": 2299, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/InsuranceAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/navigation\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport ProgressBar from \"../ProgressBar\";\n\ntype InsuranceAgentSignUpProps = {\n  handleInsuranceBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst InsuranceAgentSignUp: React.FC<InsuranceAgentSignUpProps> = ({\n  handleInsuranceBack,\n}) => {\n  const router = useRouter();\n\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [userFarm, setUserFarm] = useState<string>(\"\");\n  const [userBrokage, setUserBrokage] = useState<string>(\"\");\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response:any = await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  useEffect(() => {\n    if (userFarm.trim() !== \"\" && userBrokage.trim() !== \"\") {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [userFarm, userBrokage]);\n\n    //email validation function\n  const validateEmail = (email: string): boolean => {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  // Check if email contains consecutive dots, which are invalid\n  if (/\\.\\./.test(email)) {\n    return false;\n  }\n\n  // Check the general pattern for a valid email\n  return emailPattern.test(email);\n};\n\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Market Territory */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Market Territory (Farm/Focus Area)\n          </div>\n          <input\n            placeholder=\"City, Zip, County, etc.\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userFarm}\n            onChange={(e) => setUserFarm(e.target.value)}\n          />\n\n          {/* Brokerage */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Brokerage or Agency Name\n          </div>\n          <input\n            placeholder=\"Brokerage Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userBrokage}\n            onChange={(e) => setUserBrokage(e.target.value)}\n          />\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => {verifyInputRef.current[index] = el}}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleInsuranceBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InsuranceAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2998, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/Body.tsx"],"sourcesContent":["import React from \"react\";\n\ntype BodyProps = {\n  children: React.ReactNode;\n};\n\nconst Body: React.FC<BodyProps> = ({ children }) => {\n  return (\n    <div className=\"flex flex-col w-full h-full justify-center items-center px-4\">\n      <div className=\"w-full sm:w-10/12 md:w-8/12 lg:w-7/12 xl:w-6/12 flex flex-col bg-white sm:rounded-xl rounded-none h-full py-6 sm:py-10 px-6 sm:px-10\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n"],"names":[],"mappings":";;;;;AAMA,MAAM,OAA4B,CAAC,EAAE,QAAQ,EAAE;IAC7C,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;KARM;uCAUS","debugId":null}},
    {"offset": {"line": 3033, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/services/AuthVerification/AuthService.ts"],"sourcesContent":["import Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\n\ntype VerificationResponse = {\n  status: boolean;\n  message: string;\n  error?: any;\n  data: any;\n};\n\nconst SendVerificationCode = async (\n  phone: string,\n  login: boolean = true,\n  verifyApiResponse?: VerificationResponse\n): Promise<VerificationResponse> => {\n  try {\n    const ApiData = {\n      login,\n      phone,\n    };\n\n    const ApiPath = Apis.sendVerificationCode;\n    const result :any = await axios.post(ApiPath, ApiData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const response: VerificationResponse = result.data;\n    verifyApiResponse = response; // though this is not used externally\n    return response;\n  } catch (error: any) {\n    return {\n      status: false,\n      message: error.message,\n      error,\n      data: null,\n    };\n  }\n};\n\nexport default SendVerificationCode;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AASA,MAAM,uBAAuB,OAC3B,OACA,QAAiB,IAAI,EACrB;IAEA,IAAI;QACF,MAAM,UAAU;YACd;YACA;QACF;QAEA,MAAM,UAAU,6HAAA,CAAA,UAAI,CAAC,oBAAoB;QACzC,MAAM,SAAc,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS,SAAS;YACrD,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,MAAM,WAAiC,OAAO,IAAI;QAClD,oBAAoB,UAAU,qCAAqC;QACnE,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,OAAO;YACL,QAAQ;YACR,SAAS,MAAM,OAAO;YACtB;YACA,MAAM;QACR;IACF;AACF;KA7BM;uCA+BS","debugId":null}},
    {"offset": {"line": 3077, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/services/apisServices/ApiService.js"],"sourcesContent":["import Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\n\n//api call to assign lead to teamm members\nexport const AssignTeamMember = async (leadId, teamMemberUserId) => {\n  try {\n    // //console.log\n    let AuthToken = null;\n    const localData = localStorage.getItem(\"User\");\n    // //console.log\n    if (localData) {\n      const Data = JSON.parse(localData);\n      //// //console.log;\n      AuthToken = Data.token;\n      // return Data.token\n    }\n    // //console.log\n    const ApiData = {\n      // leadId: selectedLeadsDetails.id,\n      // teamMemberUserId: item?.id\n      leadId: leadId,\n      teamMemberUserId: teamMemberUserId,\n    };\n    // //console.log;\n\n    const ApiPath = Apis.AssignLeadToTeam;\n    // //console.log\n    // return\n    const response = await axios.post(ApiPath, ApiData, {\n      headers: {\n        Authorization: \"Bearer \" + AuthToken,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (response) {\n      return response;\n    }\n  } catch (error) {\n    // console.error(\"Error occured in assign lead to teammeber api is\", error);\n  } finally {\n    // //console.log;\n  }\n};\n\n//api call to check the phone number availability\nexport const checkPhoneNumber = async (value) => {\n  try {\n    const ApiPath = Apis.CheckPhone;\n\n    const ApiData = {\n      phone: value,\n    };\n\n    // //console.log;\n\n    const response = await axios.post(ApiPath, ApiData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (response) {\n      return response;\n    }\n  } catch (error) {\n    // console.error(\"Error occured in check phone api is :\", error);\n  } finally {\n  }\n};\n\n//function to get location\nexport const getLocation = () => {\n  // setLocationLoader(true);\n\n  // Check if geolocation is available in the browser\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        const { latitude, longitude } = position.coords;\n        localStorage.setItem(\"CompleteLocation\", JSON.stringify(position));\n        try {\n          // //console.log\n          // Fetch country code based on latitude and longitude\n          const response = await fetch(\n            `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`\n          );\n          // //console.log\n          const data = await response.json();\n          // //console.log\n\n          // Set the country code if the API returns it\n          const locationData = {\n            location: data.countryCode.toLowerCase(),\n          };\n          // //console.log\n          if (data && data.countryCode) {\n            localStorage.setItem(\"userLocation\", JSON.stringify(locationData));\n            // //console.log\n            getLocalLocation();\n            // //console.log\n          } else {\n            // console.error(\"Unable to fetch country code.\");\n          }\n        } catch (error) {\n          // console.error(\"Error fetching geolocation data:\", error);\n        } finally {\n        }\n      },\n      (error) => {\n        // console.error(\"Geolocation error:\", error.message);\n      }\n    );\n  } else {\n    // console.error(\"Geolocation is not supported by this browser.\");\n  }\n};\n\nexport const getLocalLocation = () => {\n  // //console.log\n  const loc = localStorage.getItem(\"userLocation\");\n  // //console.log\n\n  if (loc) {\n    const L = JSON.parse(loc);\n    if (L) {\n      // //console.log\n    }\n    return L?.location;\n  } else if (!loc) {\n    return \"us\";\n  }\n};\n\n//function to get the teamsList\nexport const getTeamsList = async () => {\n  try {\n    const data = localStorage.getItem(\"User\");\n\n    if (data) {\n      let u = JSON.parse(data);\n\n      let path = Apis.getTeam;\n\n      const response = await axios.get(path, {\n        headers: {\n          Authorization: \"Bearer \" + u.token,\n        },\n      });\n\n      if (response) {\n        if (response.data.status === true) {\n          // //console.log;\n          return response.data;\n        } else {\n          // //console.log;\n          // return response.data.data\n        }\n      }\n    }\n  } catch (error) {\n    // console.error(\"Error occured in api is\", error);\n  } finally {\n    // //console.log;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3235, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/SalesDevAgent.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst SalesDevAgent = ({\n  handleContinue,\n  handleSalesAgentBack,\n  length = 6,\n  onComplete,\n  handleWaitList,\n  setCongratsPopup,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [customerService, setCustomerService] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //getlocation\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  // Function to get the user's location and set the country code\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      company &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !customerService ||\n      !company ||\n      !userTransaction ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    customerService,\n    company,\n    userTransaction,\n    checkPhoneResponse,\n    emailCheckResponse,\n  ]);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n      // //console.log;\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      // formData.append(\"farm\", customerService);\n      // formData.append(\"brokerage\", company);\n      // formData.append(\"averageTransactionPerYear\", userTransaction);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"areaOfService\", customerService);\n      formData.append(\"company\", company);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      //console.log;\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        //console.log;\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n          //console.log;\n          try {\n            if (typeof document !== \"undefined\") {\n              setCookie(response.data.data.user, document);\n            }\n          } catch (error) {\n            //console.log;\n          }\n          //console.log;\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n          //console.log;\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            //console.log;\n          } else {\n            //console.log;\n            // handleContinue();\n            router.push(\"/createagent\")\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate or serve customers\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Company\n              </div>\n              <input\n                placeholder=\"Company\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={company}\n                onChange={(e) => {\n                  setCompany(e.target.value);\n                }}\n              />\n\n              {/* <div>\n                                <div style={styles.headingStyle} className='mt-6'>\n                                    {`What’s your market territory`}\n                                </div>\n                                <input\n                                    placeholder='Your territory  '\n                                    className='border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0'\n                                    style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                                    value={customerService}\n                                    onChange={(e) => { setCustomerService(e.target.value) }}\n                                />\n\n                                <div style={styles.headingStyle} className='mt-6'>\n                                    Your brokerage\n                                </div>\n                                <input\n                                    placeholder='Brokerage'\n                                    className='border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0'\n                                    style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                                    value={company}\n                                    onChange={(e) => { setCompany(e.target.value) }}\n                                />\n\n                                <div style={styles.headingStyle} className='mt-6'>\n                                    How many homes did you sell last yeartion volume per year\n                                </div>\n                                <input\n                                    placeholder='Value'\n                                    className='border border-[#00000010] rounded p-3 outline-none mb-2 focus:outline-none focus:ring-0'\n                                    style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                                    value={userTransaction}\n                                    onChange={(e) => { setUserTransaction(e.target.value) }}\n                                />\n                            </div> */}\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSalesAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SalesDevAgent;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4291, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/SolarRepAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\n\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/navigation\";\n\ntype SolarRepAgentSignUpProps = {\n  handleSolarAgentBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst SolarRepAgentSignUp: React.FC<SolarRepAgentSignUpProps> = ({\n  handleSolarAgentBack,\n}) => {\n  const router = useRouter();\n\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [market, setMarket] = useState<string>(\"\");\n  const [companyName, setCompanyName] = useState<string>(\"\");\n  const [installationVolume, setInstallationVolume] = useState<string>(\"\");\n  const [primaryClientType, setPrimaryClientType] = useState<string[]>([]);\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const primaryClientTypes = [\n    { title: \"Residential\" },\n    { title: \"Commercial\" },\n    { title: \"Industrial\" },\n    { title: \"Other\" },\n  ];\n\n    const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response :any= await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const validateEmail = (email: string): boolean => {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  // Check if email contains consecutive dots, which are invalid\n  if (/\\.\\./.test(email)) {\n    return false;\n  }\n\n  // Check the general pattern for a valid email\n  return emailPattern.test(email);\n};\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n  };\n\n  const handleSelectClientType = (item: { title: string }) => {\n    if (primaryClientType.includes(item.title)) {\n      setPrimaryClientType(primaryClientType.filter((t) => t !== item.title));\n    } else {\n      setPrimaryClientType([...primaryClientType, item.title]);\n    }\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  useEffect(() => {\n    if (\n      market.trim() !== \"\" &&\n      companyName.trim() !== \"\" &&\n      installationVolume.trim() !== \"\" &&\n      primaryClientType.length > 0\n    ) {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [market, companyName, installationVolume, primaryClientType]);\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Market */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Market Territory (City / State)\n          </div>\n          <input\n            placeholder=\"City / State\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={market}\n            onChange={(e) => setMarket(e.target.value)}\n          />\n\n          {/* Company */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Company Name\n          </div>\n          <input\n            placeholder=\"Company Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={companyName}\n            onChange={(e) => setCompanyName(e.target.value)}\n          />\n\n          {/* Installation Volume */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Installation Volume (Monthly / Yearly)\n          </div>\n          <input\n            placeholder=\"Installation Volume\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={installationVolume}\n            onChange={(e) => setInstallationVolume(e.target.value)}\n          />\n\n          {/* Primary Client Types */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Primary Client Types\n          </div>\n          <div className=\"flex flex-wrap items-center gap-4\" style={{ marginTop: \"8px\" }}>\n            {primaryClientTypes.map((item, index) => (\n              <div key={index}>\n                <button\n                  onClick={() => handleSelectClientType(item)}\n                  className=\"border border-[#00000010] rounded px-4 h-[70px] outline-none focus:outline-none focus:ring-0 w-auto\"\n                  style={{\n                    ...styles.inputStyle,\n                    borderRadius: \"30px\",\n                    whiteSpace: \"nowrap\",\n                    border: primaryClientType.includes(item.title) ? \"2px solid #7902DF\" : \"\",\n                    backgroundColor: primaryClientType.includes(item.title) ? \"#402FFF20\" : \"\",\n                  }}\n                >\n                  {item.title}\n                </button>\n              </div>\n            ))}\n          </div>\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => {verifyInputRef.current[index] = el!}}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) =>{\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SolarRepAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5081, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/MarketerAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport SnackMessages from \"@/components/onboarding/services/AuthVerification/SnackMessages\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/navigation\";\n\ntype MarketerAgentSignUpProps = {\n  handleMarketerAgentBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst MarketerAgentSignUp: React.FC<MarketerAgentSignUpProps> = ({\n  handleMarketerAgentBack,\n}) => {\n  const router = useRouter();\n\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [companyName, setCompanyName] = useState<string>(\"\");\n  const [servicesOffered, setServicesOffered] = useState<string[]>([]);\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const servicesOptions = [\n    { title: \"Social Media Marketing\" },\n    { title: \"SEO / SEM\" },\n    { title: \"Email Marketing\" },\n    { title: \"Content Creation\" },\n    { title: \"Paid Ads\" },\n    { title: \"Other\" },\n  ];\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response:any = await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n  const validateEmail = (email: string): boolean => {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  // Check if email contains consecutive dots, which are invalid\n  if (/\\.\\./.test(email)) {\n    return false;\n  }\n\n  // Check the general pattern for a valid email\n  return emailPattern.test(email);\n};\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n  };\n\n  const handleSelectService = (item: { title: string }) => {\n    if (servicesOffered.includes(item.title)) {\n      setServicesOffered(servicesOffered.filter((t) => t !== item.title));\n    } else {\n      setServicesOffered([...servicesOffered, item.title]);\n    }\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  useEffect(() => {\n    if (companyName.trim() !== \"\" && servicesOffered.length > 0) {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [companyName, servicesOffered]);\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Company Name */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Company Name\n          </div>\n          <input\n            placeholder=\"Company Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={companyName}\n            onChange={(e) => setCompanyName(e.target.value)}\n          />\n\n          {/* Services Offered */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Services You Offer\n          </div>\n          <div className=\"flex flex-wrap items-center gap-4\" style={{ marginTop: \"8px\" }}>\n            {servicesOptions.map((item, index) => (\n              <div key={index}>\n                <button\n                  onClick={() => handleSelectService(item)}\n                  className=\"border border-[#00000010] rounded px-4 h-[70px] outline-none focus:outline-none focus:ring-0 w-auto\"\n                  style={{\n                    ...styles.inputStyle,\n                    borderRadius: \"30px\",\n                    whiteSpace: \"nowrap\",\n                    border: servicesOffered.includes(item.title) ? \"2px solid #7902DF\" : \"\",\n                    backgroundColor: servicesOffered.includes(item.title) ? \"#402FFF20\" : \"\",\n                  }}\n                >\n                  {item.title}\n                </button>\n              </div>\n            ))}\n          </div>\n\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => {verifyInputRef.current[index] = el!}}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleMarketerAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketerAgentSignUp;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AAWA,MAAM,sBAA0D,CAAC,EAC/D,uBAAuB,EACxB;;IACC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEnE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACxD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA6B;IACxF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAErD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC9D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACpE,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA6B;IAExF,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,MAAM,GAAG,IAAI,CAAC;IACrE,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAsB,EAAE;IACpD,MAAM,SAAS;IAEf,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC9D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAE9D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC9D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACpD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwC;QAC7E,QAAQ;QACR,SAAS;IACX;IAEA,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAyB;IAE/C,MAAM,kBAAkB;QACtB;YAAE,OAAO;QAAyB;QAClC;YAAE,OAAO;QAAY;QACrB;YAAE,OAAO;QAAkB;QAC3B;YAAE,OAAO;QAAmB;QAC5B;YAAE,OAAO;QAAW;QACpB;YAAE,OAAO;QAAQ;KAClB;IACD,MAAM,SAAS;QACb,cAAc;YACZ,UAAU;YACV,YAAY;QACd;QACA,YAAY;YACV,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QACA,QAAQ;YACN,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QACA,aAAa;YACX,QAAQ;YACR,IAAI;YACJ,IAAI;YACJ,WAAW;YACX,QAAQ;YACR,SAAS;QACX;IACF;IAEA,MAAM,aAAa,OAAO;QACxB,eAAe;QACf,IAAI;YACF,MAAM,WAAe,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,6HAAA,CAAA,UAAI,CAAC,UAAU,EAAE;gBAAE;YAAM;YAC/D,IAAI,UAAU,MAAM;gBAClB,sBAAsB;oBACpB,QAAQ,SAAS,IAAI,CAAC,MAAM;oBAC5B,SAAS,SAAS,IAAI,CAAC,OAAO;gBAChC;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;QACzC,SAAU;YACR,eAAe;QACjB;IACF;IACA,MAAM,gBAAgB,CAAC;QACvB,MAAM,eAAe;QAErB,8DAA8D;QAC9D,IAAI,OAAO,IAAI,CAAC,QAAQ;YACtB,OAAO;QACT;QAEA,8CAA8C;QAC9C,OAAO,aAAa,IAAI,CAAC;IAC3B;IAEE,MAAM,0BAA0B,CAAC;QAC/B,mBAAmB;IACrB;IAEA,MAAM,sBAAsB,CAAC;QAC3B,IAAI,gBAAgB,QAAQ,CAAC,KAAK,KAAK,GAAG;YACxC,mBAAmB,gBAAgB,MAAM,CAAC,CAAC,IAAM,MAAM,KAAK,KAAK;QACnE,OAAO;YACL,mBAAmB;mBAAI;gBAAiB,KAAK,KAAK;aAAC;QACrD;IACF;IAEA,MAAM,oBAAoB;QACxB,mBAAmB;IACrB;IAEA,MAAM,cAAc;QAClB,mBAAmB;IACrB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,IAAI,YAAY,IAAI,OAAO,MAAM,gBAAgB,MAAM,GAAG,GAAG;gBAC3D,kBAAkB;YACpB,OAAO;gBACL,kBAAkB;YACpB;QACF;wCAAG;QAAC;QAAa;KAAgB;IACjC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;oBAA8C,OAAO;wBAAE,WAAW;oBAAS;8BAAG;;;;;;8BAI7F,6LAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,gBAAgB;oBAAO;;sCAGhC,6LAAC;4BAAI,OAAO,OAAO,YAAY;sCAAE;;;;;;sCACjC,6LAAC;4BACC,aAAY;4BACZ,WAAU;4BACV,OAAO;gCAAE,GAAG,OAAO,UAAU;gCAAE,WAAW;4BAAM;4BAChD,OAAO;4BACP,UAAU,CAAC;gCACT,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gCAC5B,MAAM,gBAAgB,MACnB,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,OAAS,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACxD,IAAI,CAAC;gCACR,YAAY;4BACd;;;;;;sCAIF,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,OAAO,OAAO,YAAY;8CAAE;;;;;;8CACjC,6LAAC;;wCACE,4BACC,6LAAC;4CAAE,OAAO;gDAAE,GAAG,OAAO,MAAM;gDAAE,OAAO;4CAAQ;sDAAG;;;;;mDAEhD,oCACE,6LAAC;4CACC,OAAO;gDACL,GAAG,OAAO,MAAM;gDAChB,OAAO,mBAAmB,MAAM,GAAG,UAAU;4CAC/C;sDAEC,mBAAmB,OAAO,CAAC,MAAM,CAAC,GAAG,WAAW,KAAK,mBAAmB,OAAO,CAAC,KAAK,CAAC;;;;;;sDAI7F,6LAAC;4CAAI,OAAO;gDAAE,GAAG,OAAO,MAAM;gDAAE,OAAO;4CAAM;sDAAI;;;;;;;;;;;;;;;;;;sCAIrD,6LAAC;4BACC,WAAU;4BACV,OAAO;gCAAE,GAAG,OAAO,UAAU;gCAAE,WAAW;4BAAM;4BAChD,OAAO;4BACP,MAAK;4BACL,aAAY;4BACZ,UAAU,CAAC;gCACT,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gCAC5B,aAAa;gCAEb,IAAI,SAAS,OAAO,EAAE,aAAa,SAAS,OAAO;gCACnD,sBAAsB;gCAEtB,IAAI,CAAC,OAAO;oCACV,cAAc;oCACd;gCACF;gCAEA,IAAI,CAAC,cAAc,QAAQ;oCACzB,cAAc;gCAChB,OAAO;oCACL,SAAS,OAAO,GAAG,WAAW;wCAC5B,WAAW;oCACb,GAAG;gCACL;4BACF;4BACA,SAAS,CAAC,IAAM,EAAE,MAAM,CAAC,YAAY,CAAC,gBAAgB;;;;;;sCAIxD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,OAAO,OAAO,YAAY;8CAAE;;;;;;8CACjC,6LAAC;;wCACE,gCACC,6LAAC;4CAAE,WAAU;4CAAc,OAAO;gDAAE,GAAG,OAAO,MAAM;gDAAE,QAAQ;4CAAO;sDAAG;;;;;;wCAIzE,6BACC,6LAAC;4CACC,OAAO;gDACL,GAAG,OAAO,MAAM;gDAChB,OAAO;gDACP,QAAQ;4CACV;sDAEC;;;;;mDAED,kCACF,6LAAC;4CACC,OAAO;gDACL,GAAG,OAAO,MAAM;gDAChB,OAAO;gDACP,QAAQ;4CACV;sDACD;;;;;mDAGC,mCACF,6LAAC;4CACC,OAAO;gDACL,GAAG,OAAO,MAAM;gDAChB,OAAO,mBAAmB,MAAM,GAAG,UAAU;gDAC7C,QAAQ;4CACV;sDAEC,mBAAmB,OAAO,CAAC,MAAM,CAAC,GAAG,WAAW,KAAK,mBAAmB,OAAO,CAAC,KAAK,CAAC;;;;;iEAGzF,6LAAC;;;;;;;;;;;;;;;;;sCAKP,6LAAC;4BAAI,OAAO;gCAAE,WAAW;4BAAM;sCAC7B,cAAA,6LAAC,6JAAA,CAAA,UAAU;gCACT,SAAS;gCACT,eAAe;oCAAC;iCAAK;gCACrB,iBAAiB;gCACjB,qBAAqB;gCACrB,OAAO;gCACP,UAAU;gCACV,aAAa,iBAAiB,yBAAyB;gCACvD,YAAY;oCACV,OAAO;oCACP,aAAa;oCACb,iBAAiB;oCACjB,aAAa;oCACb,YAAY;oCACZ,eAAe;gCACjB;gCACA,aAAa;oCACX,QAAQ;oCACR,iBAAiB;gCACnB;gCACA,eAAe;oCACb,WAAW;oCACX,WAAW;gCACb;;;;;;;;;;;sCAKJ,6LAAC;4BAAI,OAAO,OAAO,YAAY;4BAAE,WAAU;sCAAO;;;;;;sCAGlD,6LAAC;4BACC,aAAY;4BACZ,WAAU;4BACV,OAAO;gCAAE,GAAG,OAAO,UAAU;gCAAE,WAAW;4BAAM;4BAChD,OAAO;4BACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;sCAIhD,6LAAC;4BAAI,OAAO,OAAO,YAAY;4BAAE,WAAU;sCAAO;;;;;;sCAGlD,6LAAC;4BAAI,WAAU;4BAAoC,OAAO;gCAAE,WAAW;4BAAM;sCAC1E,gBAAgB,GAAG,CAAC,CAAC,MAAM,sBAC1B,6LAAC;8CACC,cAAA,6LAAC;wCACC,SAAS,IAAM,oBAAoB;wCACnC,WAAU;wCACV,OAAO;4CACL,GAAG,OAAO,UAAU;4CACpB,cAAc;4CACd,YAAY;4CACZ,QAAQ,gBAAgB,QAAQ,CAAC,KAAK,KAAK,IAAI,sBAAsB;4CACrE,iBAAiB,gBAAgB,QAAQ,CAAC,KAAK,KAAK,IAAI,cAAc;wCACxE;kDAEC,KAAK,KAAK;;;;;;mCAZL;;;;;;;;;;sCAmBd,6LAAC,iMAAA,CAAA,QAAK;4BACJ,MAAM;4BACN,oBAAoB;4BACpB,eAAe;gCACb,SAAS;gCACT,IAAI;oCAAE,iBAAiB;gCAAY;4BACrC;sCAEA,cAAA,6LAAC,2LAAA,CAAA,MAAG;gCAAC,WAAU;gCAA6B,IAAI,OAAO,WAAW;0CAChE,cAAA,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCACC,WAAU;wCACV,OAAO;4CACL,iBAAiB;4CACjB,SAAS;4CACT,cAAc;wCAChB;;0DAEA,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC;oDAAO,SAAS;8DACf,cAAA,6LAAC,gIAAA,CAAA,UAAK;wDACJ,KAAK;wDACL,QAAQ;wDACR,OAAO;wDACP,KAAI;;;;;;;;;;;;;;;;0DAIV,6LAAC;gDAAI,OAAO;oDAAE,UAAU;oDAAI,YAAY;gDAAM;0DAAG;;;;;;0DAGjD,6LAAC;gDACC,WAAU;gDACV,OAAO;oDAAE,GAAG,OAAO,UAAU;oDAAE,OAAO;gDAAY;;oDACnD;oDACkD,gBAAgB,KAAK,CAAC,CAAC;oDAAG;;;;;;;0DAI7E,6LAAC;gDAAI,WAAU;gDAAO,OAAO;oDAAE,SAAS;oDAAQ,KAAK;gDAAM;0DACxD,MAAM,IAAI,CAAC;oDAAE;gDAAO,GAAG,GAAG,CAAC,CAAC,GAAG,sBAC9B,6LAAC;wDAEC,KAAK,CAAC;4DAAQ,eAAe,OAAO,CAAC,MAAM,GAAG;wDAAG;wDACjD,MAAK;wDACL,WAAU;wDACV,WAAW;wDACX,OAAO,UAAU,CAAC,MAAM;wDACxB,UAAU,CAAC;4DACT,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;4DAC5B,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,UAAU,IAAI;4DAC1C,MAAM,YAAY;mEAAI;6DAAW;4DACjC,SAAS,CAAC,MAAM,GAAG;4DACnB,cAAc;wDAChB;wDACA,aAAY;wDACZ,OAAO;4DACL,OAAO;4DACP,QAAQ;4DACR,WAAW;4DACX,UAAU;4DACV,QAAQ;4DACR,cAAc;wDAChB;wDACA,WAAU;uDAtBL;;;;;;;;;;0DA2BX,6LAAC;gDACC,WAAU;gDACV,OAAO,OAAO,UAAU;;oDACzB;oDAEE,+BACC,6LAAC,kOAAA,CAAA,mBAAgB;wDAAC,MAAM;;;;;6EAExB,6LAAC;wDACC,WAAU;wDACV,SAAS;kEACV;;;;;;;;;;;;4CAMJ,+BACC,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC,kOAAA,CAAA,mBAAgB;oDAAC,MAAM;;;;;;;;;;qEAG1B,6LAAC;gDACC,WAAU;gDACV,OAAO;oDAAE,QAAQ;gDAAO;gDACxB,SAAS;oDACP,QAAQ,GAAG,CAAC;oDACZ,mBAAmB;gDACrB;0DACD;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAUX,6LAAC,6KAAA,CAAA,UAAa;4BACZ,SAAS,SAAS,OAAO;4BACzB,WAAW;4BACX,cAAc;4BACd,SAAS,SAAS,MAAM;;;;;;;;;;;;8BAK5B,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;sCACC,cAAA,6LAAC,2IAAA,CAAA,UAAW;gCAAC,OAAO;;;;;;;;;;;sCAGtB,6LAAC,sIAAA,CAAA,UAAM;4BACL,gBAAgB;4BAChB,YAAY;4BACZ,gBAAgB;4BAChB,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;AAM5B;GA9bM;;QAGW,qIAAA,CAAA,YAAS;;;KAHpB;uCAgcS","debugId":null}},
    {"offset": {"line": 5827, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/WebOwnersAgentSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { isValidUrl, PersistanceKeys } from \"@/constants/Constants\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst WebOwnersAgentSignUp = ({\n  handleContinue,\n  handleWebsiteAgentBack,\n  length = 6,\n  onComplete,\n  handleWaitList,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //web url\n  const [websiteUrl, setWebsiteUrl] = useState(\"\");\n  const [urlError, setUrlError] = useState(false);\n  const [urlErrorMessage, setUrlErrorMessage] = useState(\"\");\n\n  //get location\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  // Function to get the user's location and set the country code\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      websiteUrl &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !websiteUrl ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    websiteUrl,\n    checkPhoneResponse,\n    emailCheckResponse,\n  ]);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for url validation\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      //console.log);\n      if (websiteUrl) {\n        if (isValidUrl(websiteUrl)) {\n          setUrlError(true);\n          setErrMessage(\"\");\n          //console.log;\n        } else {\n          setUrlErrorMessage(\"Invalid\");\n          setUrlError(false);\n        }\n      }\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [websiteUrl]);\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      // formData.append(\"farm\", userFarm);\n      // formData.append(\"brokerage\", userBrokage);\n      // formData.append(\"averageTransactionPerYear\", userTransaction);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"website\", websiteUrl);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          localStorage.removeItem(PersistanceKeys.RegisterDetails);\n          // localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n          //set cokie on locastorage to run middle ware\n          // document.cookie = `User=${encodeURIComponent(\n          //   JSON.stringify(response.data.data)\n          // )}; path=/; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n\n          //check for document undefined issue\n\n          // if (typeof document !== \"undefined\") {\n          //     document.cookie = `User=${encodeURIComponent(\n          //         JSON.stringify(response.data.data)\n          //     )}; path=/; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n          // }\n\n          handleWaitList();\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82vh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-8/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Website (URL)\n              </div>\n              <div>\n                {urlErrorMessage && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: \"red\",\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {urlErrorMessage}\n                  </p>\n                )}\n              </div>\n\n              <input\n                placeholder=\"URL\"\n                className=\"border border-[#00000010] rounded p-3 outline-none mb-2 focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={websiteUrl}\n                onChange={(e) => {\n                  setWebsiteUrl(e.target.value);\n                  setUrlError(false);\n                  setUrlErrorMessage(\"\");\n                }}\n              />\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleWebsiteAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WebOwnersAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6888, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/RecruiterAgentSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst RecruiterAgentSignUp = ({\n  handleContinue,\n  handleRecruiterAgentBack,\n  length = 6,\n  onComplete,\n  handleWaitList,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code for servie customers\n  const [ServiceCustomer, setServiceCustomer] = useState(\"\");\n\n  //get location\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  // Function to get the user's location and set the country code\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      ServiceCustomer &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !ServiceCustomer ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    ServiceCustomer,\n  ]);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    // handleWaitList();\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"areaOfService\", ServiceCustomer);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            // handleContinue();\n            router.push(\"/createagent\");\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-8/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate or serve customers\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={ServiceCustomer}\n                onChange={(e) => {\n                  setServiceCustomer(e.target.value);\n                }}\n              />\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleRecruiterAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecruiterAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7906, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/TaxAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport SnackMessages from \"@/components/onboarding/services/AuthVerification/SnackMessages\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\n\ntype TaxAgentSignUpProps = {\n  handleTaxAgentBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst TaxAgentSignUp: React.FC<TaxAgentSignUpProps> = ({ handleTaxAgentBack }) => {\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [companyName, setCompanyName] = useState<string>(\"\");\n  const [servicesOffered, setServicesOffered] = useState<string[]>([]);\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const servicesOptions = [\n    { title: \"Individual Tax Preparation\" },\n    { title: \"Business Tax Preparation\" },\n    { title: \"Tax Planning & Consulting\" },\n    { title: \"Bookkeeping & Accounting\" },\n    { title: \"Payroll Services\" },\n    { title: \"Other\" },\n  ];\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response : any = await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n  const validateEmail = (email: string): boolean => {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  // Check if email contains consecutive dots, which are invalid\n  if (/\\.\\./.test(email)) {\n    return false;\n  }\n\n  // Check the general pattern for a valid email\n  return emailPattern.test(email);\n};\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n    // Optionally: add debounce + phone validation logic here\n  };\n\n  const handleSelectService = (item: { title: string }) => {\n    if (servicesOffered.includes(item.title)) {\n      setServicesOffered(servicesOffered.filter((t) => t !== item.title));\n    } else {\n      setServicesOffered([...servicesOffered, item.title]);\n    }\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  useEffect(() => {\n    if (servicesOffered.length > 0) {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [servicesOffered]);\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Company */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Name of the company you work with, if any.\n          </div>\n          <input\n            placeholder=\"Company Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={companyName}\n            onChange={(e) => setCompanyName(e.target.value)}\n          />\n\n          {/* Services Offered */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Services You Offer\n          </div>\n          <div className=\"flex flex-wrap items-center gap-4\" style={{ marginTop: \"8px\" }}>\n            {servicesOptions.map((item, index) => (\n              <div key={index}>\n                <button\n                  onClick={() => handleSelectService(item)}\n                  className=\"border border-[#00000010] rounded px-4 h-[70px] outline-none focus:outline-none focus:ring-0 w-auto\"\n                  style={{\n                    ...styles.inputStyle,\n                    borderRadius: \"30px\",\n                    whiteSpace: \"nowrap\",\n                    border: servicesOffered.includes(item.title) ? \"2px solid #7902DF\" : \"\",\n                    backgroundColor: servicesOffered.includes(item.title) ? \"#402FFF20\" : \"\",\n                  }}\n                >\n                  {item.title}\n                </button>\n              </div>\n            ))}\n          </div>\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => {verifyInputRef.current[index] = el!}}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        // Example: handle verification submit\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleTaxAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaxAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8646, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/DebtCollectorAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport SnackMessages from \"./services/AuthVerification/SnackMessages\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\n\ntype DebtCollectorAgentSignUpProps = {\n  handleSolarAgentBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst DebtCollectorAgentSignUp: React.FC<DebtCollectorAgentSignUpProps> = ({\n  handleSolarAgentBack,\n}) => {\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [customerService, setCustomerService] = useState<string>(\"\");\n  const [companyName, setCompanyName] = useState<string>(\"\");\n  const [installationVolume, setInstallationVolume] = useState<string>(\"\");\n  const [ClientType, setClientType] = useState<string[]>([]);\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const primaryClientTypes = [\n    { title: \"Consumer Debts\" },\n    { title: \"Commercial Debts\" },\n    { title: \"Medical Debts\" },\n    { title: \"Utility Debts\" },\n    { title: \"Government Debts\" },\n  ];\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response = await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n    // Optionally: add debounce + phone validation logic here\n  };\n\n  const handleSelectClientType = (item: { title: string }) => {\n    if (ClientType.includes(item.title)) {\n      setClientType(ClientType.filter((t) => t !== item.title));\n    } else {\n      setClientType([...ClientType, item.title]);\n    }\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            id=\"random-est-fld\"\n            autoComplete=\"off\"\n            name=\"random-est-fld-xyz\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              className=\"border outline-none bg-white\"\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Company */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Name of the company or collection agency you work with, if any.\n          </div>\n          <input\n            placeholder=\"Company Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={companyName}\n            onChange={(e) => setCompanyName(e.target.value)}\n          />\n\n          {/* Client Type */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Typical Collection Strategy\n          </div>\n          <div className=\"flex flex-wrap items-center gap-4\" style={{ marginTop: \"8px\" }}>\n            {primaryClientTypes.map((item, index) => (\n              <div key={index}>\n                <button\n                  onClick={() => handleSelectClientType(item)}\n                  className=\"border border-[#00000010] rounded px-4 h-[70px] outline-none focus:outline-none focus:ring-0 w-auto\"\n                  style={{\n                    ...styles.inputStyle,\n                    borderRadius: \"30px\",\n                    whiteSpace: \"nowrap\",\n                    border: ClientType.includes(item.title) ? \"2px solid #7902DF\" : \"\",\n                    backgroundColor: ClientType.includes(item.title) ? \"#402FFF20\" : \"\",\n                  }}\n                >\n                  {item.title}\n                </button>\n              </div>\n            ))}\n          </div>\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => (verifyInputRef.current[index] = el!)}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        // Example: handle verification submit\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DebtCollectorAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9367, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/MedSpaAgentSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst MedSpaAgentSignUp = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"Individuals (B2)\",\n    },\n    {\n      id: 2,\n      title: \"Businesses & Corporations (B2B)\",\n    },\n    {\n      id: 3,\n      title: \"Government & Public Sector\",\n    },\n  ];\n\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      installationVolume &&\n      // projectSize &&\n      // ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !userFarm ||\n      !userBrokage ||\n      !userTransaction ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      // projectSize ||\n      // ClientType ||\n      // userTransaction ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n    installationVolume,\n    projectSize,\n    // ClientType,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      let clienttype = null;\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"firmOrCompanyAffiliation\", companyName);\n      formData.append(\"averageMonthlyClients\", installationVolume);\n      // formData.append(\"projectsPerYear\", projectSize);\n      // formData.append(\"primaryClientType\", clienttype);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            // handleContinue();\n            router.push(\"/createagent\")\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\n                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the med spa or practice you work with, if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                How many clients do you typically see per month?\n              </div>\n              <input\n                placeholder=\"Type here\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                  setInstallationVolume(e.target.value);\n                }}\n                type=\"number\"\n              />\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MedSpaAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10481, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/LawAgentSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst LawAgentSignUp = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n  const [consultation, setConsultation] = useState(null);\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"Individuals (B2)\",\n    },\n    {\n      id: 2,\n      title: \"Businesses & Corporations (B2B)\",\n    },\n    {\n      id: 3,\n      title: \"Government & Public Sector\",\n    },\n  ];\n\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      installationVolume &&\n      // projectSize &&\n      ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true &&\n      consultation\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !userFarm ||\n      !userBrokage ||\n      !userTransaction ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      ClientType ||\n      // userTransaction ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false ||\n      consultation\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n    installationVolume,\n    projectSize,\n    ClientType,\n    consultation,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  const handleConsultationFormat = (item) => {\n    setConsultation(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"firmOrCompanyAffiliation\", companyName);\n      formData.append(\"caseVolume\", installationVolume);\n      // formData.append(\"projectsPerYear\", projectSize);\n      formData.append(\"clientType\", ClientType);\n      formData.append(\"consultationFormat\", consultation);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            // handleContinue();\n            router.push(\"/createagent\")\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily practice law?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the firm or legal practice you work with, if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                How many cases do you handle annually or monthly?\n              </div>\n              <input\n                type=\"number\"\n                placeholder=\"Type here\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                  setInstallationVolume(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Client Type\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\", flexWrap: \"wrap\" }}\n              >\n                {primaryClientTypes.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleSelectClientType(item);\n                        }}\n                        className=\"border border-[#00000010] rounded px-4 py-4 outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            ClientType === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            ClientType === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Consultation Format\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\" }}\n              >\n                {ConsultationFormat.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleConsultationFormat(item);\n                        }}\n                        className=\"border border-[#00000010] rounded px-4 py-4 outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            consultation === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            consultation === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LawAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 11698, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/otherAgentsSignUp/LoanOfficerSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst LoanOfficerSignUp = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n\n  const [otherType, setOtherType] = useState(\"\");\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"First-Time Homebuyers\",\n    },\n    {\n      id: 2,\n      title: \"Investors & Property Developers\",\n    },\n    {\n      id: 3,\n      title: \"Veterans & Active Military\",\n    },\n    {\n      id: 3,\n      title: \"Luxury Homebuyers\",\n    },\n    {\n      id: 5,\n      title: \"Self-Employed & Entrepreneurs\",\n    },\n    {\n      id: 6,\n      title: \"Other (type here)\",\n    },\n  ];\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      // projectSize ||\n      ClientType ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n\n    ClientType,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"firmOrCompanyAffiliation\", companyName);\n      formData.append(\"clientType\", ClientType);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            // handleContinue();\n            router.push(\"/createagent\")\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily serve clients?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the mortgage lender, bank, or brokerage you work with,\n                if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Client Type\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\", flexWrap: \"wrap\" }}\n              >\n                {primaryClientTypes.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleSelectClientType(item);\n                        }}\n                        className=\"border border-[#00000010] rounded px-4 py-4 outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            ClientType === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            ClientType === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                      {ClientType === \"Other (type here)\" && item.id === 6 && (\n                        <input\n                          placeholder=\"Type here\"\n                          className=\" w-full border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                          style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                          value={otherType}\n                          onChange={(e) => {\n                            setOtherType(e.target.value);\n                          }}\n                        />\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoanOfficerSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 12863, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/mobileUI/RealEstateOtherDetails.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { RefObject } from \"react\";\n\ninterface RealEstateOtherDetailsProps {\n  inputsFields: RefObject<Array<HTMLInputElement | null>>;\n  userBrokage: string;\n  userFarm: string;\n  userTransaction: string;\n  setUserFarm: (value: string) => void;\n  setUserBrokage: (value: string) => void;\n  setUserTransaction: (value: string) => void;\n  handleVerifyPopup: () => void;\n}\n\nconst RealEstateOtherDetails: React.FC<RealEstateOtherDetailsProps> = ({\n  inputsFields,\n  userBrokage,\n  userFarm,\n  userTransaction,\n  setUserFarm,\n  setUserBrokage,\n  setUserTransaction,\n  handleVerifyPopup,\n}) => {\n  return (\n    <div className=\"w-full\">\n      <div style={styles.headingStyle} className=\"mt-6\">\n        {`What’s your market territory`}\n      </div>\n      <input\n        ref={(el) => {inputsFields.current[0] = el}}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        enterKeyHint=\"done\"\n        placeholder=\"Your territory\"\n        className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n        style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n        value={userFarm}\n        onChange={(e) => {\n          setUserFarm(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\" || e.key === \"Done\") {\n            inputsFields.current[1]?.focus();\n          }\n        }}\n      />\n\n      <div style={styles.headingStyle} className=\"mt-6\">\n        Your brokerage\n      </div>\n      <input\n        ref={(el) => {inputsFields.current[1] = el}}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        enterKeyHint=\"done\"\n        placeholder=\"Brokerage\"\n        className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n        style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n        value={userBrokage}\n        onChange={(e) => {\n          setUserBrokage(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\" || e.key === \"Done\") {\n            inputsFields.current[2]?.focus();\n          }\n        }}\n      />\n\n      <div style={styles.headingStyle} className=\"mt-6\">\n        How many homes did you sell last year\n      </div>\n      <input\n        ref={(el) => {inputsFields.current[2] = el}}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        enterKeyHint=\"done\"\n        placeholder=\"Type here\"\n        type=\"text\"\n        className=\"border border-[#00000010] w-full rounded p-3 outline-none mb-2 focus:outline-none focus:ring-0\"\n        style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n        value={userTransaction}\n        onChange={(e) => {\n          setUserTransaction(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\" || e.key === \"Done\") {\n            handleVerifyPopup();\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RealEstateOtherDetails;\n\nconst styles = {\n  headingStyle: {\n    fontSize: 16,\n    fontWeight: \"600\",\n  },\n  inputStyle: {\n    fontSize: 15,\n    fontWeight: \"500\",\n    borderRadius: \"7px\",\n  },\n  errmsg: {\n    fontSize: 12,\n    fontWeight: \"500\",\n    borderRadius: \"7px\",\n  },\n  verifyPopup: {\n    height: \"auto\",\n    bgcolor: \"transparent\",\n    mx: \"auto\",\n    my: \"50vh\",\n    transform: \"translateY(-55%)\",\n    borderRadius: 2,\n    border: \"none\",\n    outline: \"none\",\n  },\n};\n\n"],"names":[],"mappings":";;;;AAAA;;AAeA,MAAM,yBAAgE,CAAC,EACrE,YAAY,EACZ,WAAW,EACX,QAAQ,EACR,eAAe,EACf,WAAW,EACX,cAAc,EACd,kBAAkB,EAClB,iBAAiB,EAClB;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BACxC,CAAC,4BAA4B,CAAC;;;;;;0BAEjC,6LAAC;gBACC,KAAK,CAAC;oBAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBAAE;gBAC1C,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACT,YAAY,EAAE,MAAM,CAAC,KAAK;gBAC5B;gBACA,WAAW,CAAC;oBACV,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACzC,aAAa,OAAO,CAAC,EAAE,EAAE;oBAC3B;gBACF;;;;;;0BAGF,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACC,KAAK,CAAC;oBAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBAAE;gBAC1C,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACT,eAAe,EAAE,MAAM,CAAC,KAAK;gBAC/B;gBACA,WAAW,CAAC;oBACV,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACzC,aAAa,OAAO,CAAC,EAAE,EAAE;oBAC3B;gBACF;;;;;;0BAGF,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACC,KAAK,CAAC;oBAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBAAE;gBAC1C,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,MAAK;gBACL,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACT,mBAAmB,EAAE,MAAM,CAAC,KAAK;gBACnC;gBACA,WAAW,CAAC;oBACV,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACzC;oBACF;gBACF;;;;;;;;;;;;AAIR;KAnFM;uCAqFS;AAEf,MAAM,SAAS;IACb,cAAc;QACZ,UAAU;QACV,YAAY;IACd;IACA,YAAY;QACV,UAAU;QACV,YAAY;QACZ,cAAc;IAChB;IACA,QAAQ;QACN,UAAU;QACV,YAAY;QACZ,cAAc;IAChB;IACA,aAAa;QACX,QAAQ;QACR,SAAS;QACT,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACX;AACF","debugId":null}},
    {"offset": {"line": 13031, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/mobileUI/OtherDetails.tsx"],"sourcesContent":["\"use client\";\n\nimport Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { setCookie } from \"@/utilities/cookies\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { UserTypes } from \"@/constants/UserTypes\";\nimport RealEstateOtherDetails from \"./RealEstateOtherDetails\";\n// import RealEstateOtherDetails from \"./RealEstateOtherDetails\";\n// import SolarRepAgentSignUp from \"../otherAgentsSignUp/SolarRepAgentSignUp\";\n// import SolarRepOtherDetails from \"./SalesRepOtherDetails\";\n// import SalesDevRepOtherDetails from \"./SolerDevRepOtherDetails\";\n// import InsuranceOtherDetails from \"./InsuranceOtherDetails\";\n// import MarketerOtherDetails from \"./MarketerOtherDetails\";\n// import RecuiterOtherDetails from \"./RecuiterOtherDetails\";\n// import DebtCollectorOtherDetails from \"./DebtCollectorOtherDetails\";\n// import WebsiteAgentOtherDetails from \"./WebsiteAgentOtherDetails\";\n// import MedSpaAgentOtherDetails from \"./MedSpaAgentOtherDetails\";\n// import LawAgentOtherDetails from \"./LawAgentOtherDetails\";\n// import LoanOfficerOtherDetails from \"./LoanOfficerOtherDetails\";\n\n// Props Interface\ninterface OtherDetailsProps {\n  handleContinue: () => void;\n  handleBack: () => void;\n  length?: number;\n  onComplete?: (code: string) => void;\n  userDetails: {\n    name: string;\n    email: string;\n    phone: string;\n  };\n}\n\ninterface ApiResponse {\n  status?: boolean;\n  message?: string;\n  data?: any;\n}\n\nconst OtherDetails: React.FC<OtherDetailsProps> = ({\n  handleContinue,\n  handleBack,\n  length = 6,\n  onComplete,\n  userDetails,\n}) => {\n  const verifyInputRef = useRef<Array<HTMLInputElement | null>>([]);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const inputsFields = useRef<Array<HTMLInputElement | null>>([]);\n\n  const router = useRouter();\n\n  const [userName, setUserName] = useState<string>(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<ApiResponse>({});\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userFarm, setUserFarm] = useState<string>(\"\");\n  const [userBrokage, setUserBrokage] = useState<string>(\"\");\n  const [userTransaction, setUserTransaction] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [countryCode, setCountryCode] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [userData, setUserData] = useState<any>(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(length).fill(\"\"));\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<ApiResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<ApiResponse | null>(null);\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [congratsPopup, setCongratsPopup] = useState<boolean>(false);\n\n  // Other agent variables\n  const [service, setService] = useState<string>(\"\");\n  const [companyName, setCompanyName] = useState<string>(\"\");\n\n  const [installationVolume, setInstallationVolume] = useState<string>(\"\");\n  const [projectSize, setProjectSize] = useState<string>(\"\");\n  const [ClientType, setClientType] = useState<string | null>(null);\n  const [collectionStretigy, setCollectionStretigy] = useState<string | null>(null);\n\n  const [websiteUrl, setWebsiteUrl] = useState<string>(\"\");\n  const [urlErrorMessage, setUrlErrorMessage] = useState<string>(\"\");\n\n  const [territory, setTerritory] = useState<string>(\"\");\n  const [firmOrCompanyAffiliation, setFirmOrCompanyAffiliation] = useState<string>(\"\");\n  const [averageMonthlyClients, setAverageMonthlyClients] = useState<string>(\"\");\n\n  const [consultation, setConsultation] = useState<string>(\"\");\n  const [caseVolume, setCaseVolume] = useState<string>(\"\");\n\n  const primaryClientTypes = [\n    { id: 1, title: \"Residential clients\" },\n    { id: 2, title: \"Commercial clients\" },\n    { id: 3, title: \"Both\" },\n  ];\n  // Load userData from localStorage\n  useEffect(() => {\n    const storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      const data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  // Focus first input field on mount\n  useEffect(() => {\n    const registrationDetails = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    inputsFields.current[0]?.focus();\n\n    if (registrationDetails) {\n      const registrationData = JSON.parse(registrationDetails);\n      setUserData(registrationData);\n    }\n  }, []);\n\n  // Agent validation\n  useEffect(() => {\n    if (\n      userData?.userTypeTitle === UserTypes.SalesDevRep ||\n      userData?.userTypeTitle === UserTypes.MarketerAgent\n    ) {\n      setShouldContinue(service && companyName ? false : true);\n    }\n    else if (userData?.userTypeTitle === UserTypes.RealEstateAgent) {\n      setShouldContinue(userFarm && userBrokage && userTransaction ? false : true);\n    }\n    else if (userData?.userTypeTitle === UserTypes.SolarRep) {\n      setShouldContinue(service && companyName && installationVolume && projectSize && ClientType ? false : true);\n    }\n    else if (userData?.userTypeTitle === UserTypes.InsuranceAgent) {\n      setShouldContinue(userFarm && userBrokage ? false : true);\n    }\n    else if (userData?.userTypeTitle === UserTypes.DebtCollectorAgent) {\n      setShouldContinue(service && companyName && installationVolume && collectionStretigy ? false : true);\n    }\n    else if (userData?.userTypeTitle === UserTypes.WebsiteAgent) {\n      setShouldContinue(websiteUrl ? false : true);\n    }\n    else if (\n      userData?.userTypeTitle === UserTypes.RecruiterAgent ||\n      userData?.userTypeTitle === UserTypes.TaxAgent\n    ) {\n      setShouldContinue(service ? false : true);\n    }\n    else if (userData?.userTypeTitle === UserTypes.MedSpaAgent) {\n      setShouldContinue(territory && firmOrCompanyAffiliation && averageMonthlyClients ? false : true);\n    }\n    else if (userData?.userTypeTitle === UserTypes.LawAgent) {\n      setShouldContinue(territory && firmOrCompanyAffiliation && caseVolume && consultation && ClientType ? false : true);\n    }\n    else if (userData?.userTypeTitle === UserTypes.LoanOfficerAgent) {\n      setShouldContinue(territory && firmOrCompanyAffiliation && ClientType ? false : true);\n    }\n    else {\n      setShouldContinue(userFarm && userBrokage && userTransaction ? false : true);\n    }\n  }, [\n    userFarm,\n    userBrokage,\n    userTransaction,\n    service,\n    companyName,\n    installationVolume,\n    projectSize,\n    ClientType,\n    collectionStretigy,\n    websiteUrl,\n    territory,\n    firmOrCompanyAffiliation,\n    averageMonthlyClients,\n    caseVolume,\n    consultation,\n  ]);\n\n  // Focus verify input field when popup opens\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0]?.focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handlers\n  const handleSelectClientType = (item: { id: number; title: string }) => {\n    setClientType(item.title);\n  };\n\n  const handleSelectCollectionStretigy = (item: { id: number; title: string }) => {\n    setCollectionStretigy(item.title);\n  };\n\n  const handleConsultationFormat = (item: { title: string }) => {\n    setConsultation(item.title);\n  };\n\n  const validatePhoneNumber = (phoneNumber: string) => {\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`\n    );\n\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n      }, 300);\n    }\n  };\n\n  const checkPhoneNumber = async (value: string) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n      const ApiData = { phone: value };\n\n      const response: any = await axios.post(ApiPath, ApiData, {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      if (response) {\n        setCheckPhoneResponse(response.data);\n      }\n    } catch (error) {\n      console.error(\"Error occurred in check phone API:\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const handleVerifyPopup = async () => {\n    try {\n      setShowVerifyPopup(true);\n      setTimeout(() => {\n        if (verifyInputRef.current[0]) {\n          verifyInputRef.current[0]?.focus();\n        }\n      }, 100);\n\n      setSendcodeLoader(true);\n      const response = await SendVerificationCode(userDetails.phone, true);\n      setResponse(response);\n      setIsVisible(true);\n    } catch (error) {\n      console.error(\"Error occurred:\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  const handleVerifyInputChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    index: number\n  ) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return;\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1]?.focus();\n    }\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  const handleBackspace = (\n    e: React.KeyboardEvent<HTMLInputElement>,\n    index: number\n  ) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1]?.focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    newValues.forEach((char, index) => {\n      if (verifyInputRef.current[index]) {\n        verifyInputRef.current[index]!.value = char;\n      }\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index]?.focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  const handleVerifyCode = () => {\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      const agentTitle: string = userData?.userTypeTitle;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n\n      let campainee = typeof window !== \"undefined\" ? GetCampaigneeNameIfAvailable(window) : null;\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n\n      formData.append(\"name\", userDetails.name);\n      formData.append(\"email\", userDetails.email);\n      formData.append(\"phone\", userDetails.phone);\n\n      // Conditionally append optional fields\n      if (userFarm) {\n        formData.append(\"farm\", userFarm);\n      }\n      if (userBrokage) {\n        formData.append(\"brokerage\", userBrokage);\n      }\n      if (userTransaction) {\n        formData.append(\"averageTransactionPerYear\", userTransaction);\n      }\n      if (service) {\n        formData.append(\"areaOfService\", service);\n      }\n      if (companyName) {\n        formData.append(\"company\", companyName);\n      }\n      if (installationVolume) {\n        formData.append(\"projectsPerYear\", installationVolume);\n      }\n      if (projectSize) {\n        formData.append(\"projectSizekw\", projectSize);\n      }\n      if (websiteUrl) {\n        formData.append(\"website\", websiteUrl);\n      }\n      if (collectionStretigy) {\n        formData.append(\"collectionStrategy\", collectionStretigy);\n      }\n      if (ClientType) {\n        formData.append(\"clientType\", ClientType);\n      }\n      if (territory) {\n        formData.append(\"territory\", territory);\n      }\n      if (firmOrCompanyAffiliation) {\n        formData.append(\"firmOrCompanyAffiliation\", firmOrCompanyAffiliation);\n      }\n      if (averageMonthlyClients) {\n        formData.append(\"averageMonthlyClients\", averageMonthlyClients);\n      }\n      if (caseVolume) {\n        formData.append(\"caseVolume\", caseVolume);\n      }\n      if (consultation) {\n        formData.append(\"consultationFormat\", consultation);\n      }\n\n      // Required fields\n      formData.append(\"agentService\", JSON.stringify(userData?.serviceID || []));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData?.focusAreaId || []));\n      formData.append(\"userType\", agentTitle || \"\");\n      formData.append(\"login\", \"false\");\n      formData.append(\"timeZone\", Intl.DateTimeFormat().resolvedOptions().timeZone);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n\n      // Optional: Debug log\n      // for (let [key, value] of formData.entries()) {\n      //   console.log(`${key}: ${value}`);\n      // }\n\n      // Submit the form\n      const response: any = await axios.post(ApiPath, formData);\n\n      if (response) {\n        const result = response.data;\n        setResponse(result);\n        setIsVisible(true);\n\n        if (response.data.status === true) {\n          // Clear localStorage\n          localStorage.removeItem(PersistanceKeys.RegisterDetails);\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          // Set cookie\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          // Responsive navigation\n          const screenWidth = window.innerWidth;\n          const SM_SCREEN_SIZE = 640;\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setShowVerifyPopup(false);\n            setCongratsPopup(true);\n          } else {\n            handleContinue();\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Error occurred in register API:\", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n  const getOtherAgentDetailsComponent = (): React.ReactNode => {\n    return (\n      <RealEstateOtherDetails\n        inputsFields={inputsFields}\n        userBrokage={userBrokage}\n        userFarm={userFarm}\n        userTransaction={userTransaction}\n        setUserBrokage={setUserBrokage}\n        setUserFarm={setUserFarm}\n        setUserTransaction={setUserTransaction}\n        handleVerifyPopup={handleVerifyPopup}\n      />\n    )\n  }\n\n  // if (userData?.userTypeTitle) {\n\n  //   if (userData?.userTypeTitle === UserTypes.RealEstateAgent) {\n  //     return (\n  //       <RealEstateOtherDetails\n  //         inputsFields={inputsFields}\n  //         userBrokage={userBrokage}\n  //         userFarm={userFarm}\n  //         userTransaction={userTransaction}\n  //         setUserBrokage={setUserBrokage}\n  //         setUserFarm={setUserFarm}\n  //         setUserTransaction={setUserTransaction}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.SalesDevRep) {\n  //     return (\n  //       <SalesDevRepOtherDetails\n  //         inputsFields={inputsFields}\n  //         service={service}\n  //         companyName={companyName}\n  //         setService={setService}\n  //         setCompanyName={setCompanyName}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.SolarRep) {\n  //     return (\n  //       <SolarRepOtherDetails\n  //         inputsFields={inputsFields}\n  //         installationVolume={installationVolume}\n  //         projectSize={projectSize}\n  //         ClientType={ClientType}\n  //         setInstallationVolume={setInstallationVolume}\n  //         setProjectSize={setProjectSize}\n  //         companyName={companyName}\n  //         setCompanyName={setCompanyName}\n  //         service={service}\n  //         setService={setService}\n  //         setClientType={setClientType}\n  //         handleSelectClientType={handleSelectClientType}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.InsuranceAgent) {\n  //     return (\n  //       <InsuranceOtherDetails\n  //         inputsFields={inputsFields}\n  //         userBrokage={userBrokage}\n  //         userFarm={userFarm}\n  //         setUserBrokage={setUserBrokage}\n  //         setUserFarm={setUserFarm}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.MarketerAgent) {\n  //     return (\n  //       <MarketerOtherDetails\n  //         inputsFields={inputsFields}\n  //         service={service}\n  //         companyName={companyName}\n  //         setService={setService}\n  //         setCompanyName={setCompanyName}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n\n  //   if (\n  //     userData?.userTypeTitle === UserTypes.RecruiterAgent ||\n  //     userData?.userTypeTitle === UserTypes.TaxAgent\n  //   ) {\n  //     return (\n  //       <RecuiterOtherDetails\n  //         inputsFields={inputsFields}\n  //         service={service}\n  //         setService={setService}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.DebtCollectorAgent) {\n  //     return (\n  //       <DebtCollectorOtherDetails\n  //         inputsFields={inputsFields}\n  //         service={service}\n  //         setService={setService}\n  //         companyName={companyName}\n  //         setCompanyName={setCompanyName}\n  //         installationVolume={installationVolume}\n  //         setInstallationVolume={setInstallationVolume}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //         collectionStretigy={collectionStretigy}\n  //         handleSelectCollectionStretigy={handleSelectCollectionStretigy}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.WebsiteAgent) {\n  //     return (\n  //       <WebsiteAgentOtherDetails\n  //         websiteUrl={websiteUrl}\n  //         setWebsiteUrl={setWebsiteUrl}\n  //         urlErrorMessage={urlErrorMessage}\n  //         setUrlErrorMessage={setUrlErrorMessage}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.MedSpaAgent) {\n  //     return (\n  //       <MedSpaAgentOtherDetails\n  //         inputsFields={inputsFields}\n  //         customerService={territory}\n  //         setCustomerService={setTerritory}\n  //         companyName={firmOrCompanyAffiliation}\n  //         setCompanyName={setFirmOrCompanyAffiliation}\n  //         installationVolume={averageMonthlyClients}\n  //         setInstallationVolume={setAverageMonthlyClients}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.LawAgent) {\n  //     return (\n  //       <LawAgentOtherDetails\n  //         inputsFields={inputsFields}\n  //         customerService={territory}\n  //         setCustomerService={setTerritory}\n  //         companyName={firmOrCompanyAffiliation}\n  //         setCompanyName={setFirmOrCompanyAffiliation}\n  //         installationVolume={caseVolume}\n  //         setInstallationVolume={setCaseVolume}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //         consultation={consultation}\n  //         handleConsultationFormat={handleConsultationFormat}\n  //         ClientType={ClientType}\n  //         handleSelectClientType={handleSelectClientType}\n  //       />\n  //     );\n  //   }\n\n  //   if (userData?.userTypeTitle === UserTypes.LoanOfficerAgent) {\n  //     return (\n  //       <LoanOfficerOtherDetails\n  //         inputsFields={inputsFields}\n  //         customerService={territory}\n  //         setCustomerService={setTerritory}\n  //         companyName={firmOrCompanyAffiliation}\n  //         setCompanyName={setFirmOrCompanyAffiliation}\n  //         ClientType={ClientType}\n  //         handleSelectClientType={handleSelectClientType}\n  //         handleVerifyPopup={handleVerifyPopup}\n  //       />\n  //     );\n  //   }\n  // };\n\n\n\n\n  // Final return\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white sm:rounded-2xl sm:mx-2 w-full md:w-10/12 h-[100%] sm:max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[90svh] sm:h-[82svh]\">\n          {/* Header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n\n            <div\n              className=\"mt-4 sm:mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[90%] sm:max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              {getOtherAgentDetailsComponent()}\n\n              {/* Verify Modal */}\n              <Modal\n                open={showVerifyPopup}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full sm:w-10/12 w-full\"\n                  sx={{\n                    height: \"auto\",\n                    bgcolor: \"transparent\",\n                    mx: \"auto\",\n                    my: \"50vh\",\n                    transform: \"translateY(-55%)\",\n                    borderRadius: 2,\n                    border: \"none\",\n                    outline: \"none\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full mx-2\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n\n                      <div\n                        className=\"mt-8\"\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                          color: \"#00000060\",\n                        }}\n                      >\n                        Enter code that was sent to number ending with ***\n                        {userDetails?.phone.slice(-4)}.\n                      </div>\n\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => { verifyInputRef.current[index] = el }}\n                            autoComplete=\"off\"\n                            autoCorrect=\"off\"\n                            spellCheck=\"false\"\n                            enterKeyHint=\"done\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength={1}\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\"focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                        }}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n\n                      {registerLoader ? (\n                        <div className=\"flex flex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{\n                            height: \"50px\",\n                            fontSize: 15,\n                            fontWeight: \"700\",\n                          }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              {/* Congrats Modal */}\n              <Modal\n                open={congratsPopup}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"w-full\"\n                  sx={{\n                    height: \"auto\",\n                    bgcolor: \"transparent\",\n                    mx: \"auto\",\n                    my: \"50vh\",\n                    transform: \"translateY(-55%)\",\n                    borderRadius: 2,\n                    border: \"none\",\n                    outline: \"none\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"w-full mx-4\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"w-full mt-2 flex flex-row justify-center\">\n                        <Image\n                          src=\"/agentXOrb.gif\"\n                          style={{\n                            height: \"100px\",\n                            width: \"110px\",\n                            objectFit: \"contain\",\n                          }}\n                          height={102}\n                          width={102}\n                          alt=\"*\"\n                        />\n                      </div>\n\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                          textAlign: \"center\",\n                          marginTop: 20,\n                        }}\n                      >\n                        Congrats!\n                      </div>\n\n                      <div\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"600\",\n                          textAlign: \"center\",\n                          marginTop: 50,\n                          color: \"#00000070\",\n                        }}\n                      >\n                        Your account is created!\n                      </div>\n\n                      {registerLoader ? (\n                        <div className=\"flex flex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{\n                            height: \"50px\",\n                            fontSize: 15,\n                            fontWeight: \"700\",\n                          }}\n                          onClick={() => {\n                            router.push(\"/createagent\");\n                          }}\n                        >\n                          Get Started\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OtherDetails;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 14057, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/onboarding/mobileUI/BasicDetails.tsx"],"sourcesContent":["\"use client\";\n\nimport Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  CircularProgress,\n  Modal,\n  Box,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { setCookie } from \"@/utilities/cookies\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\n\n// Props interface\ninterface BasicDetailsProps {\n  handleContinue: () => void;\n  handleBack: () => void;\n  length?: number;\n  onComplete?: (code: string) => void;\n  handleDetails: (name: string, email: string, phone: string) => void;\n  userDetails: {\n    name: string;\n    email: string;\n    phone: string;\n  };\n}\n\ninterface ApiResponse {\n  status?: boolean;\n  message?: string;\n  data?: any;\n}\n\nconst BasicDetails: React.FC<BasicDetailsProps> = ({\n  handleContinue,\n  handleBack,\n  length = 6,\n  onComplete,\n  handleDetails,\n  userDetails,\n}) => {\n  const verifyInputRef = useRef<Array<HTMLInputElement | null>>([]);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const inputsFields = useRef<Array<HTMLInputElement | null>>([]);\n  const phoneInputRef = useRef<HTMLInputElement | null>(null);\n\n  const router = useRouter();\n\n  const [userName, setUserName] = useState<string>(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<ApiResponse>({});\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userFarm, setUserFarm] = useState<string>(\"\");\n  const [userBrokage, setUserBrokage] = useState<string>(\"\");\n  const [userTransaction, setUserTransaction] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [countryCode, setCountryCode] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [userData, setUserData] = useState<any>(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(length).fill(\"\"));\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<ApiResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<ApiResponse | null>(null);\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [congratsPopup, setCongratsPopup] = useState<boolean>(false);\n\n  const handlePhoneNumberChange = (phone: string) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  const validatePhoneNumber = (phoneNumber: string) => {\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`\n    );\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n      }, 300);\n    }\n  };\n\n  const validateEmail = (email: string): boolean => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n    return emailPattern.test(email);\n  };\n\n  const handleVerifyPopup = async () => {\n    handleContinue();\n    return;\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  const handleVerifyInputChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    index: number\n  ) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return;\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1]?.focus();\n    }\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  const handleBackspace = (\n    e: React.KeyboardEvent<HTMLInputElement>,\n    index: number\n  ) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1]?.focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    newValues.forEach((char, index) => {\n      if (verifyInputRef.current[index]) {\n        verifyInputRef.current[index]!.value = char;\n      }\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index]?.focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  const checkEmail = async (value: string) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n      const ApiData = { email: value };\n\n      const response :any = await axios.post(ApiPath, ApiData, {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      if (response) {\n        setEmailCheckResponse(response.data);\n      }\n    } catch (error) {\n      console.error(\"Error occurred in check email API:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value: string) => {\n    try {\n      setPhoneNumberLoader(true);\n\n      const ApiPath = Apis.CheckPhone;\n      const ApiData = { phone: value };\n\n      const response:any = await axios.post(ApiPath, ApiData, {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      if (response) {\n        setCheckPhoneResponse(response.data);\n      }\n    } catch (error) {\n      console.error(\"Error occurred in check phone API:\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\nreturn (\n  <div\n    style={{ width: \"100%\" }}\n    className=\"overflow-y-hidden flex flex-col justify-center items-center h-[100svh]\"\n  >\n    <div className=\"flex flex-col bg-white sm:rounded-2xl sm:mx-2 w-full md:w-10/12 h-[90%] sm:max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n      <div className=\"h-[90svh] sm:h-[82svh]\">\n        {/* Header */}\n        <div className=\"h-[10%]\">\n          <Header />\n        </div>\n\n        {/* Body */}\n        <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n          <div\n            className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n            style={{ textAlign: \"center\" }}\n            onClick={handleContinue}\n          >\n            Your Contact Information\n          </div>\n\n          <div\n            className=\"mt-4 sm:mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[90%] sm:max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n            style={{ scrollbarWidth: \"none\" }}\n          >\n            {/* Name Input */}\n            <div style={{ fontSize: 16, fontWeight: 600 }}>\n              What's your full name\n            </div>\n            <input\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              spellCheck=\"false\"\n              enterKeyHint=\"done\"\n              placeholder=\"Name\"\n              className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n              ref={(el) => {inputsFields.current[0] = el}}\n              style={{\n                fontSize: 15,\n                fontWeight: 500,\n                borderRadius: \"7px\",\n                marginTop: \"8px\",\n              }}\n              value={userName}\n              onChange={(e) => {\n                const input = e.target.value;\n                const formattedName = input\n                  .split(\" \")\n                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                  .join(\" \");\n                setUserName(formattedName);\n              }}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\" || e.key === \"Done\") {\n                  inputsFields.current[1]?.focus();\n                }\n              }}\n            />\n            {/* Email Input */}\n            <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n              <div style={{ fontSize: 16, fontWeight: 600 }}>\n                What's your email address\n              </div>\n              <div>\n                {emailLoader ? (\n                  <p\n                    style={{\n                      fontSize: 12,\n                      fontWeight: 500,\n                      color: \"black\",\n                    }}\n                  >\n                    Checking...\n                  </p>\n                ) : emailCheckResponse ? (\n                  <p\n                    style={{\n                      fontSize: 12,\n                      fontWeight: 500,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {`${emailCheckResponse?.message?.charAt(0).toUpperCase()} ${emailCheckResponse.message?.slice(1)}`}\n                  </p>\n                ) : null}\n                <div style={{ fontSize: 12, fontWeight: 500, color: \"red\" }}>\n                  {validEmail}\n                </div>\n              </div>\n            </div>\n\n            <input\n              ref={(el) => {inputsFields.current[1] = el}}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              spellCheck=\"false\"\n              enterKeyHint=\"done\"\n              placeholder=\"Email address\"\n              className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n              style={{\n                fontSize: 15,\n                fontWeight: 500,\n                borderRadius: \"7px\",\n                marginTop: \"8px\",\n              }}\n              value={userEmail}\n              onChange={(e) => {\n                const value = e.target.value;\n                setUserEmail(value);\n\n                if (timerRef.current) {\n                  clearTimeout(timerRef.current);\n                }\n\n                setEmailCheckResponse(null);\n\n                if (!value) {\n                  setValidEmail(\"\");\n                  return;\n                }\n\n                if (!validateEmail(value)) {\n                  setValidEmail(\"Invalid\");\n                } else {\n                  timerRef.current = setTimeout(() => {\n                    checkEmail(value);\n                  }, 300);\n                }\n              }}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  phoneInputRef.current?.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\",\n                  });\n                  phoneInputRef.current?.focus({ preventScroll: true });\n                }\n              }}\n            />\n            {/* Phone Number Input */}\n            <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n              <div style={{ fontSize: 16, fontWeight: 600 }}>\n                What's your phone number\n              </div>\n              <div>\n                {locationLoader && (\n                  <p\n                    className=\"text-purple\"\n                    style={{\n                      fontSize: 12,\n                      fontWeight: 500,\n                      height: \"20px\",\n                    }}\n                  >\n                    Getting location...\n                  </p>\n                )}\n                {errorMessage ? (\n                  <p\n                    style={{\n                      fontSize: 12,\n                      fontWeight: 500,\n                      color: \"red\",\n                      height: \"20px\",\n                    }}\n                  >\n                    {errorMessage}\n                  </p>\n                ) : phoneNumberLoader ? (\n                  <p\n                    style={{\n                      fontSize: 12,\n                      fontWeight: 500,\n                      color: \"black\",\n                      height: \"20px\",\n                    }}\n                  >\n                    Checking...\n                  </p>\n                ) : checkPhoneResponse ? (\n                  <p\n                    style={{\n                      fontSize: 12,\n                      fontWeight: 500,\n                      color: checkPhoneResponse.status ? \"green\" : \"red\",\n                      height: \"20px\",\n                    }}\n                  >\n                    {`${checkPhoneResponse?.message?.charAt(0).toUpperCase()} ${checkPhoneResponse?.message?.slice(1)}`}\n                  </p>\n                ) : null}\n              </div>\n            </div>\n\n            <div style={{ marginTop: \"8px\" }}>\n              <PhoneInput\n                country={\"us\"}\n                onlyCountries={[\"us\"]}\n                disableDropdown={true}\n                countryCodeEditable={false}\n                disableCountryCode={false}\n                value={userPhoneNumber}\n                onChange={handlePhoneNumberChange}\n                placeholder={\n                  locationLoader\n                    ? \"Loading location...\"\n                    : \"Enter Phone Number\"\n                }\n                disabled={loading}\n                inputProps={{\n                  ref: phoneInputRef,\n                }}\n                inputStyle={{\n                  width: \"100%\",\n                  borderWidth: \"0px\",\n                  backgroundColor: \"transparent\",\n                  paddingLeft: \"60px\",\n                  paddingTop: \"20px\",\n                  paddingBottom: \"20px\",\n                }}\n                buttonStyle={{\n                  border: \"none\",\n                  backgroundColor: \"transparent\",\n                }}\n                dropdownStyle={{\n                  maxHeight: \"150px\",\n                  overflowY: \"auto\",\n                }}\n                defaultMask={loading ? \"Loading...\" : undefined}\n              />\n            </div>\n            {/* SnackMessages */}\n            <SnackMessages\n              message={response.message || \"\"}\n              isVisible={isVisible}\n              setIsVisible={setIsVisible}\n              success={response.status || false}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    {/* ProgressBar + Footer */}\n    <div className=\"h-[10%] w-full\">\n      <div>\n        <ProgressBar value={70} />\n      </div>\n\n      <Footer\n        handleContinue={handleVerifyPopup}\n        handleBack={handleBack}\n        registerLoader={registerLoader}\n        shouldContinue={shouldContinue}\n      />\n    </div>\n  </div>\n);\n};\n\nexport default BasicDetails;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 14654, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/general/BackgroundVideo.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ntype BackgroundVideoProps = {\n  showImageOnly?: boolean;\n  imageUrl?: string;\n};\n\nexport default function BackgroundVideo({\n  showImageOnly = false,\n  imageUrl = \"/assets/background.png\",\n}: BackgroundVideoProps) {\n  const [isVideoSupported, setIsVideoSupported] = useState<boolean>(false);\n\n  useEffect(() => {\n    const checkVideoAutoplaySupport = async () => {\n      const video = document.createElement(\"video\");\n      video.src = \"/banerVideo.mp4\";\n      video.muted = true;\n      video.playsInline = true;\n\n      try {\n        await video.play();\n        video.remove();\n        setIsVideoSupported(true);\n      } catch {\n        video.remove();\n        setIsVideoSupported(false);\n      }\n    };\n\n    checkVideoAutoplaySupport();\n  }, []);\n\n  return (\n    <div className=\"relative w-full h-screen overflow-hidden\">\n      {!showImageOnly && isVideoSupported ? (\n        <video\n          autoPlay\n          muted\n          loop\n          playsInline\n          className=\"absolute inset-0 w-full h-full object-cover\"\n        >\n          <source src=\"/banerVideo.mp4\" type=\"video/mp4\" />\n        </video>\n      ) : (\n        <div\n          className=\"absolute inset-0 w-full h-full bg-cover bg-center\"\n          style={{\n            backgroundImage: `url('${imageUrl}')`,\n          }}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;;AAOe,SAAS,gBAAgB,EACtC,gBAAgB,KAAK,EACrB,WAAW,wBAAwB,EACd;;IACrB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAElE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM;uEAA4B;oBAChC,MAAM,QAAQ,SAAS,aAAa,CAAC;oBACrC,MAAM,GAAG,GAAG;oBACZ,MAAM,KAAK,GAAG;oBACd,MAAM,WAAW,GAAG;oBAEpB,IAAI;wBACF,MAAM,MAAM,IAAI;wBAChB,MAAM,MAAM;wBACZ,oBAAoB;oBACtB,EAAE,OAAM;wBACN,MAAM,MAAM;wBACZ,oBAAoB;oBACtB;gBACF;;YAEA;QACF;oCAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;kBACZ,CAAC,iBAAiB,iCACjB,6LAAC;YACC,QAAQ;YACR,KAAK;YACL,IAAI;YACJ,WAAW;YACX,WAAU;sBAEV,cAAA,6LAAC;gBAAO,KAAI;gBAAkB,MAAK;;;;;;;;;;iCAGrC,6LAAC;YACC,WAAU;YACV,OAAO;gBACL,iBAAiB,CAAC,KAAK,EAAE,SAAS,EAAE,CAAC;YACvC;;;;;;;;;;;AAKV;GAhDwB;KAAA","debugId":null}},
    {"offset": {"line": 14735, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/agentxsaas_ts/components/ErrorBoundary.tsx"],"sourcesContent":["import React, { Component, ReactNode, ErrorInfo } from \"react\";\n\n// Define props and state types\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(): ErrorBoundaryState {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Caught an error:\", error, errorInfo);\n    // You can send this error to an external logging service (e.g., Sentry, LogRocket)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"flex justify-center items-center h-[100svh] w-full\">\n          <h1 className=\"text-2xl font-bold\">Something went wrong.</h1>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"],"names":[],"mappings":";;;;AAAA;;;AAWA,MAAM,sBAAsB,6JAAA,CAAA,YAAS;IACnC,YAAY,KAAyB,CAAE;QACrC,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;IAEA,OAAO,2BAA+C;QACpD,OAAO;YAAE,UAAU;QAAK;IAC1B;IAEA,kBAAkB,KAAY,EAAE,SAAoB,EAAE;QACpD,QAAQ,KAAK,CAAC,oBAAoB,OAAO;IACzC,mFAAmF;IACrF;IAEA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,qBACE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;8BAAqB;;;;;;;;;;;QAGzC;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF;uCAEe","debugId":null}}]
}