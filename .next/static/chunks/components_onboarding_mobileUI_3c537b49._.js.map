{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/RealEstateOtherDetails.js"],"sourcesContent":["import React from \"react\";\n\nfunction RealEstateOtherDetails({\n  inputsFields,\n  userBrokage,\n  userFarm,\n  userTransaction,\n  handleVerifyPopup,\n  setUserFarm,\n  setUserBrokage,\n  setUserTransaction,\n}) {\n  return (\n    <div className=\"w-full\">\n      <div style={styles.headingStyle} className=\"mt-6\">\n        {`Whatâ€™s your market territory`}\n      </div>\n      <input\n        ref={(el) => (inputsFields.current[0] = el)}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        enterKeyHint=\"done\"\n        placeholder=\"Your territory\"\n        className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n        style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n        value={userFarm}\n        onChange={(e) => {\n          setUserFarm(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\" || e.key === \"Done\") {\n            inputsFields.current[1]?.focus(); // Move to the second input\n          }\n        }}\n      />\n\n      <div style={styles.headingStyle} className=\"mt-6\">\n        Your brokerage\n      </div>\n      <input\n        ref={(el) => (inputsFields.current[1] = el)}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        enterKeyHint=\"done\"\n        placeholder=\"Brokerage\"\n        className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n        style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n        value={userBrokage}\n        onChange={(e) => {\n          setUserBrokage(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\" || e.key === \"Done\") {\n            inputsFields.current[2]?.focus(); // Move to the second input\n          }\n        }}\n      />\n\n      <div style={styles.headingStyle} className=\"mt-6\">\n        How many homes did you sell last year\n      </div>\n      <input\n        ref={(el) => (inputsFields.current[2] = el)}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        enterKeyHint=\"done\"\n        placeholder=\"Type here\"\n        type = \"number\"\n        className=\"border border-[#00000010] w-full rounded p-3 outline-none mb-2 focus:outline-none focus:ring-0\"\n        style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n        value={userTransaction}\n        onChange={(e) => {\n          setUserTransaction(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\" || e.key === \"Done\") {\n            handleVerifyPopup();\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default RealEstateOtherDetails;\n\nconst styles = {\n  headingStyle: {\n    fontSize: 16,\n    fontWeight: \"600\",\n  },\n  inputStyle: {\n    fontSize: 15,\n    fontWeight: \"500\",\n    borderRadius: \"7px\",\n  },\n  errmsg: {\n    fontSize: 12,\n    fontWeight: \"500\",\n    borderRadius: \"7px\",\n  },\n  verifyPopup: {\n    height: \"auto\",\n    bgcolor: \"transparent\",\n    // p: 2,\n    mx: \"auto\",\n    my: \"50vh\",\n    transform: \"translateY(-55%)\",\n    borderRadius: 2,\n    border: \"none\",\n    outline: \"none\",\n  },\n};\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,uBAAuB,EAC9B,YAAY,EACZ,WAAW,EACX,QAAQ,EACR,eAAe,EACf,iBAAiB,EACjB,WAAW,EACX,cAAc,EACd,kBAAkB,EACnB;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BACxC,CAAC,4BAA4B,CAAC;;;;;;0BAEjC,6LAAC;gBACC,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACT,YAAY,EAAE,MAAM,CAAC,KAAK;gBAC5B;gBACA,WAAW,CAAC;oBACV,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACzC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBAC/D;gBACF;;;;;;0BAGF,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACC,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACT,eAAe,EAAE,MAAM,CAAC,KAAK;gBAC/B;gBACA,WAAW,CAAC;oBACV,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACzC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBAC/D;gBACF;;;;;;0BAGF,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACC,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,MAAO;gBACP,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACT,mBAAmB,EAAE,MAAM,CAAC,KAAK;gBACnC;gBACA,WAAW,CAAC;oBACV,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACzC;oBACF;gBACF;;;;;;;;;;;;AAIR;KAnFS;uCAqFM;AAEf,MAAM,SAAS;IACb,cAAc;QACZ,UAAU;QACV,YAAY;IACd;IACA,YAAY;QACV,UAAU;QACV,YAAY;QACZ,cAAc;IAChB;IACA,QAAQ;QACN,UAAU;QACV,YAAY;QACZ,cAAc;IAChB;IACA,aAAa;QACX,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACX;AACF","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/SalesRepOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction SolarRepOtherDetails({\n    service,\n    setService,\n    companyName,\n    setCompanyName,\n    installationVolume,\n    setInstallationVolume,\n    projectSize,\n    handleSelectClientType,\n    setProjectSize,\n    ClientType,\n    inputsFields,\n}) {\n\n    const primaryClientTypes = [\n        {\n            id: 1,\n            title: \"Residential clients\",\n        },\n        {\n            id: 2,\n            title: \"Commercial clients\",\n        },\n        {\n            id: 3,\n            title: \"Both\",\n        },\n    ];\n\n    return (\n        <div className=\"w-full\">\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate or serve customers\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[0] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Your territory\"\n                className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={service}\n                onChange={(e) => {\n                    setService(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[1]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Company\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[1] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Brokerage\"\n                className=\"border w-full border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                    setCompanyName(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[2]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Installation Volume per Year\n            </div>\n            <input\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                ref={(el) => (inputsFields.current[2] = el)}\n                placeholder=\"Type here\"\n                className=\"border w-full border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                    setInstallationVolume(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[3]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Average Project Size (kW)\n            </div>\n            <input\n                placeholder=\"Type here\"\n                className=\"w-full border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                ref={(el) => (inputsFields.current[3] = el)}\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={projectSize}\n                onChange={(e) => {\n                    setProjectSize(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[4]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Primary Client Type\n            </div>\n\n            <div\n                className=\"flex flex-col w-full items-start gap-4\"\n                style={{ marginTop: \"8px\" }}\n            >\n                {primaryClientTypes.map((item, index) => {\n                    return (\n                        <div key={index} className=\"w-full\">\n                            <button\n                                onClick={() => {\n                                    handleSelectClientType(item);\n                                }}\n                                className=\"border border-[#00000010] text-start rounded px-4 rounded py-1 outline-none focus:outline-none focus:ring-0 w-full\"\n                                style={{\n                                    ...styles.inputStyle,\n                                    // borderRadius: \"30px\",\n                                    paddingInline: index === 2 && \"40px\",\n                                    border:\n                                        ClientType === item.title\n                                            ? \"2px solid #7902DF\"\n                                            : \"\",\n                                    backgroundColor:\n                                        ClientType === item.title ? \"#402FFF20\" : \"\",\n                                }}\n                            >\n                                {item.title}\n                            </button>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default SolarRepOtherDetails\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,qBAAqB,EAC1B,OAAO,EACP,UAAU,EACV,WAAW,EACX,cAAc,EACd,kBAAkB,EAClB,qBAAqB,EACrB,WAAW,EACX,sBAAsB,EACtB,cAAc,EACd,UAAU,EACV,YAAY,EACf;IAEG,MAAM,qBAAqB;QACvB;YACI,IAAI;YACJ,OAAO;QACX;QACA;YACI,IAAI;YACJ,OAAO;QACX;QACA;YACI,IAAI;YACJ,OAAO;QACX;KACH;IAED,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,WAAW,EAAE,MAAM,CAAC,KAAK;gBAC7B;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBACjE;gBACJ;;;;;;0BAIJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,eAAe,EAAE,MAAM,CAAC,KAAK;gBACjC;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBACjE;gBACJ;;;;;;0BAGJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,sBAAsB,EAAE,MAAM,CAAC,KAAK;gBACxC;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBACjE;gBACJ;;;;;;0BAIJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,aAAY;gBACZ,WAAU;gBACV,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,eAAe,EAAE,MAAM,CAAC,KAAK;gBACjC;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBACjE;gBACJ;;;;;;0BAGJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAIlD,6LAAC;gBACG,WAAU;gBACV,OAAO;oBAAE,WAAW;gBAAM;0BAEzB,mBAAmB,GAAG,CAAC,CAAC,MAAM;oBAC3B,qBACI,6LAAC;wBAAgB,WAAU;kCACvB,cAAA,6LAAC;4BACG,SAAS;gCACL,uBAAuB;4BAC3B;4BACA,WAAU;4BACV,OAAO;gCACH,GAAG,OAAO,UAAU;gCACpB,wBAAwB;gCACxB,eAAe,UAAU,KAAK;gCAC9B,QACI,eAAe,KAAK,KAAK,GACnB,sBACA;gCACV,iBACI,eAAe,KAAK,KAAK,GAAG,cAAc;4BAClD;sCAEC,KAAK,KAAK;;;;;;uBAlBT;;;;;gBAsBlB;;;;;;;;;;;;AAIhB;KA7JS;uCA+JM;AAGf,MAAM,SAAS;IACX,cAAc;QACV,UAAU;QACV,YAAY;IAChB;IACA,YAAY;QACR,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,QAAQ;QACJ,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,aAAa;QACT,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/SolerDevRepOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction SalesDevRepOtherDetails({\n    inputsFields,\n    service,\n    setService,\n    companyName,\n    setCompanyName,\n    handleVerifyPopup\n}) {\n    return (\n        <div className=\"w-full\">\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate or serve customers\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[0] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Your territory\"\n                className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={service}\n                onChange={(e) => {\n                    setService(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[1]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Company\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[1] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Brokerage\"\n                className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                    setCompanyName(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        handleVerifyPopup();\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\nexport default SalesDevRepOtherDetails\n\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,wBAAwB,EAC7B,YAAY,EACZ,OAAO,EACP,UAAU,EACV,WAAW,EACX,cAAc,EACd,iBAAiB,EACpB;IACG,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,WAAW,EAAE,MAAM,CAAC,KAAK;gBAC7B;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBACjE;gBACJ;;;;;;0BAGJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,eAAe,EAAE,MAAM,CAAC,KAAK;gBACjC;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC;oBACJ;gBACJ;;;;;;;;;;;;AAIhB;KAzDS;uCA2DM;AAIf,MAAM,SAAS;IACX,cAAc;QACV,UAAU;QACV,YAAY;IAChB;IACA,YAAY;QACR,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,QAAQ;QACJ,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,aAAa;QACT,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/InsuranceOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction InsuranceOtherDetails({\n    inputsFields,\n    userFarm,\n    setUserFarm,\n    userBrokage,\n    setUserBrokage,\n    handleVerifyPopup\n\n}) {\n    return (\n        <div className='w-full'>\n            <div style={styles.headingStyle} className=\"mt-6\">\n                {`Market Territory `}\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[0] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Your territory\"\n                className=\"w-full border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userFarm}\n                onChange={(e) => {\n                    setUserFarm(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[1]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Agency or Brokerage Name\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[1] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Brokerage\"\n                className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userBrokage}\n                onChange={(e) => {\n                    setUserBrokage(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        handleVerifyPopup(); \n                    }\n                }}\n            />\n        </div>\n    )\n}\n\nexport default InsuranceOtherDetails\n\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,sBAAsB,EAC3B,YAAY,EACZ,QAAQ,EACR,WAAW,EACX,WAAW,EACX,cAAc,EACd,iBAAiB,EAEpB;IACG,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BACtC,CAAC,iBAAiB,CAAC;;;;;;0BAExB,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,YAAY,EAAE,MAAM,CAAC,KAAK;gBAC9B;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBACjE;gBACJ;;;;;;0BAGJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,eAAe,EAAE,MAAM,CAAC,KAAK;gBACjC;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC;oBACJ;gBACJ;;;;;;;;;;;;AAIhB;KA1DS;uCA4DM;AAIf,MAAM,SAAS;IACX,cAAc;QACV,UAAU;QACV,YAAY;IAChB;IACA,YAAY;QACR,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,QAAQ;QACJ,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,aAAa;QACT,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/MarketerOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction MarketerOtherDetails({\n    inputsFields,\n    service,\n    setService,\n    companyName,\n    setCompanyName,\n    handleVerifyPopup\n}) {\n    return (\n        <div className=\"w-full\">\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate or serve customers\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[0] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Your territory\"\n                className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={service}\n                onChange={(e) => {\n                    setService(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[1]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Company\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[1] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Brokerage\"\n                className=\"border border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                    setCompanyName(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        handleVerifyPopup();\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\nexport default MarketerOtherDetails\n\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,qBAAqB,EAC1B,YAAY,EACZ,OAAO,EACP,UAAU,EACV,WAAW,EACX,cAAc,EACd,iBAAiB,EACpB;IACG,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,WAAW,EAAE,MAAM,CAAC,KAAK;gBAC7B;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC,aAAa,OAAO,CAAC,EAAE,EAAE,SAAS,2BAA2B;oBACjE;gBACJ;;;;;;0BAGJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,eAAe,EAAE,MAAM,CAAC,KAAK;gBACjC;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC;oBACJ;gBACJ;;;;;;;;;;;;AAIhB;KAzDS;uCA2DM;AAIf,MAAM,SAAS;IACX,cAAc;QACV,UAAU;QACV,YAAY;IAChB;IACA,YAAY;QACR,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,QAAQ;QACJ,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,aAAa;QACT,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/RecuiterOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction RecuiterOtherDetails({\n    inputsFields,\n    service,\n    setService,\n    handleVerifyPopup\n}) {\n    return (\n        <div className='w-full'>\n            <div className=\"mt-6\" style={styles.headingStyle}>\n                Where do you primarily operate or serve customers\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[0] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Your territory\"\n                className=\"w-full border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={service}\n                onChange={(e) => {\n                    setService(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        handleVerifyPopup(); // Move to the second input\n                    }\n                }}\n            />\n\n        \n        </div>\n    )\n}\n\nexport default RecuiterOtherDetails\n\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,qBAAqB,EAC1B,YAAY,EACZ,OAAO,EACP,UAAU,EACV,iBAAiB,EACpB;IACG,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;gBAAO,OAAO,OAAO,YAAY;0BAAE;;;;;;0BAGlD,6LAAC;gBACG,KAAK,CAAC,KAAQ,aAAa,OAAO,CAAC,EAAE,GAAG;gBACxC,cAAa;gBACb,aAAY;gBACZ,YAAW;gBACX,cAAa;gBACb,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,WAAW,EAAE,MAAM,CAAC,KAAK;gBAC7B;gBACA,WAAW,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,QAAQ;wBACvC,qBAAqB,2BAA2B;oBACpD;gBACJ;;;;;;;;;;;;AAMhB;KAlCS;uCAoCM;AAIf,MAAM,SAAS;IACX,cAAc;QACV,UAAU;QACV,YAAY;IAChB;IACA,YAAY;QACR,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,QAAQ;QACJ,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,aAAa;QACT,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 902, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/DebtCollectorOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction DebtCollectorOtherDetails({\n    inputsFields,\n    service,\n    setService,\n    companyName,\n    setCompanyName,\n    installationVolume,\n    setInstallationVolume,\n    collectionStretigy,\n    handleSelectCollectionStretigy\n}) {\n    const primaryClientTypes = [\n        {\n            id: 1,\n            title: \"Soft Collections\",\n        },\n        {\n            id: 2,\n            title: \"Hard Collections\",\n        },\n        {\n            id: 3,\n            title: \"Hybrid Approach\",\n        },\n        {\n            id: 4,\n            title: \"Other\",\n        },\n    ];\n    return (\n        <div className='w-full'>\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily collect debts?\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[0] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Secific cities,contries or regions\"\n                className=\"border w-full border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={service}\n                onChange={(e) => {\n                    setService(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[1]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the company or collection agency you work with, if any.\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[0] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Name\"\n                className=\"border w-full border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                    setCompanyName(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[1]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                What is the typical balance size of debts you recover?\n            </div>\n            <input\n                ref={(el) => (inputsFields.current[0] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Eg,< $1000, $1000-$5000, $5000-$10000, $10000-$50000\"\n                className=\"border w-full border-[#00000010] w-full rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                    setInstallationVolume(e.target.value);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \"Done\") {\n                        inputsFields.current[1]?.focus(); // Move to the second input\n                    }\n                }}\n            />\n\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Typical Collection Strategy\n            </div>\n\n            <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-4\"\n                style={{ marginTop: \"8px\" }}\n            >\n                {primaryClientTypes.map((item, index) => {\n                    return (\n                        <div key={index} className=\"w-full\">\n                            <button\n                                onClick={() => {\n                                    handleSelectCollectionStretigy(item);\n                                }}\n                                className=\"border text-start border-[#00000010] rounded px-4 h-[70px] outline-none focus:outline-none focus:ring-0 w-full\"\n                                style={{\n                                    ...styles.inputStyle,\n                                    borderRadius: \"30px\",\n                                    border:\n                                        collectionStretigy === item.title\n                                            ? \"2px solid #7902DF\"\n                                            : \"\",\n                                    backgroundColor:\n                                        collectionStretigy === item.title ? \"#7902DF20\" : \"\",\n                                }}\n                            >\n                                {item.title}\n                            </button>\n                        </div>\n                    );\n                })}\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default DebtCollectorOtherDetails\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1128, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/WebsiteAgentOtherDetails.js"],"sourcesContent":["import { isValidUrl } from '@/constants/Constants';\nimport React, { useState,useEffect } from 'react'\n\nfunction WebsiteAgentOtherDetails({\n    websiteUrl,\n    setWebsiteUrl,\n    urlErrorMessage,\n    setUrlErrorMessage,\n}) {\n\n\n\n      useEffect(() => {\n        let timer = setTimeout(() => {\n          //console.log);\n          if (websiteUrl) {\n            if (isValidUrl(websiteUrl)) {\n                setUrlErrorMessage(\"\")\n              //console.log;\n            } else {\n              setUrlErrorMessage(\"Invalid\");\n            }\n          }\n        }, 300);\n    \n        return () => clearTimeout(timer);\n      }, [websiteUrl]);\n\n    return (\n        <div className='w-full'>\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Website (URL)\n            </div>\n            <div>\n                {urlErrorMessage && (\n                    <p\n                        style={{\n                            ...styles.errmsg,\n                            color: \"red\",\n                            textAlign: \"right\",\n                        }}\n                    >\n                        {urlErrorMessage}\n                    </p>\n                )}\n            </div>\n\n            <input\n                placeholder=\"URL\"\n                className=\"border w-full border-[#00000010] rounded p-3 outline-none mb-2 focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={websiteUrl}\n                onChange={(e) => {\n                    setWebsiteUrl(e.target.value);\n                    setUrlErrorMessage(\"\");\n                }}\n            />\n\n        </div>\n    )\n}\n\nexport default WebsiteAgentOtherDetails\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;;;AAEA,SAAS,yBAAyB,EAC9B,UAAU,EACV,aAAa,EACb,eAAe,EACf,kBAAkB,EACrB;;IAIK,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8CAAE;YACR,IAAI,QAAQ;4DAAW;oBACrB,eAAe;oBACf,IAAI,YAAY;wBACd,IAAI,CAAA,GAAA,yHAAA,CAAA,aAAU,AAAD,EAAE,aAAa;4BACxB,mBAAmB;wBACrB,cAAc;wBAChB,OAAO;4BACL,mBAAmB;wBACrB;oBACF;gBACF;2DAAG;YAEH;sDAAO,IAAM,aAAa;;QAC5B;6CAAG;QAAC;KAAW;IAEjB,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;0BACI,iCACG,6LAAC;oBACG,OAAO;wBACH,GAAG,OAAO,MAAM;wBAChB,OAAO;wBACP,WAAW;oBACf;8BAEC;;;;;;;;;;;0BAKb,6LAAC;gBACG,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,cAAc,EAAE,MAAM,CAAC,KAAK;oBAC5B,mBAAmB;gBACvB;;;;;;;;;;;;AAKhB;GAzDS;KAAA;uCA2DM;AAGf,MAAM,SAAS;IACX,cAAc;QACV,UAAU;QACV,YAAY;IAChB;IACA,YAAY;QACR,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,QAAQ;QACJ,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,aAAa;QACT,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/MedSpaAgentOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction MedSpaAgentOtherDetails({\n    customerService,\n    setCustomerService,\n    companyName,\n    setCompanyName,\n    installationVolume,\n    setInstallationVolume\n}) {\n    return (\n        <div className='w-full'>\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate?\n            </div>\n            <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border w-full border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                    setCustomerService(e.target.value);\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the med spa or practice you work with, if any.\n            </div>\n            <input\n                placeholder=\"Name\"\n                className=\"borde w-full border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                    setCompanyName(e.target.value);\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                How many clients do you typically see per month?\n            </div>\n            <input\n                placeholder=\"Type here\"\n                className=\"border w-full border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                    setInstallationVolume(e.target.value);\n                }}\n                type=\"number\"\n            />\n        </div>\n    )\n}\n\nexport default MedSpaAgentOtherDetails\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,wBAAwB,EAC7B,eAAe,EACf,kBAAkB,EAClB,WAAW,EACX,cAAc,EACd,kBAAkB,EAClB,qBAAqB,EACxB;IACG,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,mBAAmB,EAAE,MAAM,CAAC,KAAK;gBACrC;;;;;;0BAGJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,eAAe,EAAE,MAAM,CAAC,KAAK;gBACjC;;;;;;0BAGJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAGlD,6LAAC;gBACG,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,sBAAsB,EAAE,MAAM,CAAC,KAAK;gBACxC;gBACA,MAAK;;;;;;;;;;;;AAIrB;KAnDS;uCAqDM;AAGf,MAAM,SAAS;IACX,cAAc;QACV,UAAU;QACV,YAAY;IAChB;IACA,YAAY;QACR,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,QAAQ;QACJ,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,aAAa;QACT,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/LawAgentOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction LawAgentOtherDetails({\n    customerService,\n    setCustomerService,\n    companyName,\n    setCompanyName,\n    installationVolume,\n    setInstallationVolume,\n    ClientType,\n    handleSelectClientType,\n    consultation,\n    handleConsultationFormat\n}) {\n    const primaryClientTypes = [\n        {\n          id: 1,\n          title: \"Individuals (B2)\",\n        },\n        {\n          id: 2,\n          title: \"Businesses & Corporations (B2B)\",\n        },\n        {\n          id: 3,\n          title: \"Government & Public Sector\",\n        },\n      ];\n    \n      const ConsultationFormat = [\n        {\n          id: 1,\n          title: \"In-Person Consultations\",\n        },\n        {\n          id: 2,\n          title: \"Virtual Consultations\",\n        },\n        {\n          id: 3,\n          title: \"Virtual Consultationsr\",\n        },\n      ];\n    return (\n        <div>\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily practice law?\n            </div>\n            <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                    setCustomerService(e.target.value);\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the firm or legal practice you work with, if any.\n            </div>\n            <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                    setCompanyName(e.target.value);\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                How many cases do you handle annually or monthly?\n            </div>\n            <input\n                type=\"number\"\n                placeholder=\"Type here\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                    setInstallationVolume(e.target.value);\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Client Type\n            </div>\n\n            <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\", flexWrap: \"wrap\" }}\n            >\n                {primaryClientTypes.map((item, index) => {\n                    return (\n                        <div key={index} className=\"w-full\">\n                            <button\n                                onClick={() => {\n                                    handleSelectClientType(item);\n                                }}\n                                className=\"border border-[#00000010] rounded px-4 py-4 outline-none focus:outline-none focus:ring-0\"\n                                style={{\n                                    ...styles.inputStyle,\n                                    borderRadius: \"30px\",\n                                    paddingInline: index === 2 && \"40px\",\n                                    border:\n                                        ClientType === item.title\n                                            ? \"2px solid #7902DF\"\n                                            : \"\",\n                                    backgroundColor:\n                                        ClientType === item.title ? \"#402FFF20\" : \"\",\n                                }}\n                            >\n                                {item.title}\n                            </button>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Consultation Format\n            </div>\n\n            <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\" }}\n            >\n                {ConsultationFormat.map((item, index) => {\n                    return (\n                        <div key={index} className=\"w-full\">\n                            <button\n                                onClick={() => {\n                                    handleConsultationFormat(item);\n                                }}\n                                className=\"border border-[#00000010] rounded px-4 py-4 outline-none focus:outline-none focus:ring-0\"\n                                style={{\n                                    ...styles.inputStyle,\n                                    borderRadius: \"30px\",\n                                    paddingInline: index === 2 && \"40px\",\n                                    border:\n                                        consultation === item.title\n                                            ? \"2px solid #7902DF\"\n                                            : \"\",\n                                    backgroundColor:\n                                        consultation === item.title ? \"#402FFF20\" : \"\",\n                                }}\n                            >\n                                {item.title}\n                            </button>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default LawAgentOtherDetails\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1645, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/LoanOfficerOtherDetails.js"],"sourcesContent":["import React from 'react'\n\nfunction LoanOfficerOtherDetails({\n    customerService,\n    setCustomerService,\n    companyName,\n    setCompanyName,\n    ClientType,\n    otherType,\n    setOtherType,\n    handleSelectClientType\n}) {\n\n    const primaryClientTypes = [\n        {\n            id: 1,\n            title: \"First-Time Homebuyers\",\n        },\n        {\n            id: 2,\n            title: \"Investors & Property Developers\",\n        },\n        {\n            id: 3,\n            title: \"Veterans & Active Military\",\n        },\n        {\n            id: 3,\n            title: \"Luxury Homebuyers\",\n        },\n        {\n            id: 5,\n            title: \"Self-Employed & Entrepreneurs\",\n        },\n        {\n            id: 6,\n            title: \"Other (type here)\",\n        },\n    ];\n\n    return (\n        <div className='w-full'>\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily serve clients?\n            </div>\n            {/* <div className='w-full'> */}\n                <input\n                    placeholder=\"Specific cities, counties, or regions\"\n                    className=\"border w-full border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                    style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                    value={customerService}\n                    onChange={(e) => {\n                        setCustomerService(e.target.value);\n                    }}\n                />\n            {/* </div> */}\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the mortgage lender, bank, or brokerage you work with,\n                if any.\n            </div>\n            <input\n                placeholder=\"Name\"\n                className=\" border w-full border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                    setCompanyName(e.target.value);\n                }}\n            />\n\n            <div style={styles.headingStyle} className=\"mt-6\">\n                Client Type\n            </div>\n\n            <div\n                className=\"flex w-full flex-col items-center gap-2\"\n                style={{ marginTop: \"8px\", flexWrap: \"wrap\" }}\n            >\n                {primaryClientTypes.map((item, index) => {\n                    return (\n                        <div key={index} className=\"w-full\">\n                            <button\n                                onClick={() => {\n\n                                    handleSelectClientType(item);\n                                }}\n                                className=\"border border-[#00000010] w-full rounded px-4 py-4 outline-none focus:outline-none focus:ring-0 text-start\"\n                                style={{\n                                    ...styles.inputStyle,\n                                    borderRadius: \"30px\",\n                                    border:\n                                        ClientType === item.title\n                                            ? \"2px solid #7902DF\"\n                                            : \"\",\n                                    backgroundColor:\n                                        ClientType === item.title ? \"#402FFF20\" : \"\",\n                                }}\n                            >\n                                {item.title}\n                            </button>\n                            {ClientType === \"Other (type here)\" && item.id === 6 && (\n                                <input\n                                    placeholder=\"Type here\"\n                                    className=\" w-full border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                                    style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                                    value={otherType}\n                                    onChange={(e) => {\n                                        setOtherType(e.target.value);\n                                    }}\n                                />\n                            )}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default LoanOfficerOtherDetails\n\n\n\n\nconst styles = {\n    headingStyle: {\n        fontSize: 16,\n        fontWeight: \"600\",\n    },\n    inputStyle: {\n        fontSize: 15,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    errmsg: {\n        fontSize: 12,\n        fontWeight: \"500\",\n        borderRadius: \"7px\",\n    },\n    verifyPopup: {\n        height: \"auto\",\n        bgcolor: \"transparent\",\n        // p: 2,\n        mx: \"auto\",\n        my: \"50vh\",\n        transform: \"translateY(-55%)\",\n        borderRadius: 2,\n        border: \"none\",\n        outline: \"none\",\n    },\n};"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,wBAAwB,EAC7B,eAAe,EACf,kBAAkB,EAClB,WAAW,EACX,cAAc,EACd,UAAU,EACV,SAAS,EACT,YAAY,EACZ,sBAAsB,EACzB;IAEG,MAAM,qBAAqB;QACvB;YACI,IAAI;YACJ,OAAO;QACX;QACA;YACI,IAAI;YACJ,OAAO;QACX;QACA;YACI,IAAI;YACJ,OAAO;QACX;QACA;YACI,IAAI;YACJ,OAAO;QACX;QACA;YACI,IAAI;YACJ,OAAO;QACX;QACA;YACI,IAAI;YACJ,OAAO;QACX;KACH;IAED,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAI9C,6LAAC;gBACG,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,mBAAmB,EAAE,MAAM,CAAC,KAAK;gBACrC;;;;;;0BAIR,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAIlD,6LAAC;gBACG,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,GAAG,OAAO,UAAU;oBAAE,WAAW;gBAAM;gBAChD,OAAO;gBACP,UAAU,CAAC;oBACP,eAAe,EAAE,MAAM,CAAC,KAAK;gBACjC;;;;;;0BAGJ,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,WAAU;0BAAO;;;;;;0BAIlD,6LAAC;gBACG,WAAU;gBACV,OAAO;oBAAE,WAAW;oBAAO,UAAU;gBAAO;0BAE3C,mBAAmB,GAAG,CAAC,CAAC,MAAM;oBAC3B,qBACI,6LAAC;wBAAgB,WAAU;;0CACvB,6LAAC;gCACG,SAAS;oCAEL,uBAAuB;gCAC3B;gCACA,WAAU;gCACV,OAAO;oCACH,GAAG,OAAO,UAAU;oCACpB,cAAc;oCACd,QACI,eAAe,KAAK,KAAK,GACnB,sBACA;oCACV,iBACI,eAAe,KAAK,KAAK,GAAG,cAAc;gCAClD;0CAEC,KAAK,KAAK;;;;;;4BAEd,eAAe,uBAAuB,KAAK,EAAE,KAAK,mBAC/C,6LAAC;gCACG,aAAY;gCACZ,WAAU;gCACV,OAAO;oCAAE,GAAG,OAAO,UAAU;oCAAE,WAAW;gCAAM;gCAChD,OAAO;gCACP,UAAU,CAAC;oCACP,aAAa,EAAE,MAAM,CAAC,KAAK;gCAC/B;;;;;;;uBA5BF;;;;;gBAiClB;;;;;;;;;;;;AAIhB;KApHS;uCAsHM;AAKf,MAAM,SAAS;IACX,cAAc;QACV,UAAU;QACV,YAAY;IAChB;IACA,YAAY;QACR,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,QAAQ;QACJ,UAAU;QACV,YAAY;QACZ,cAAc;IAClB;IACA,aAAa;QACT,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 1843, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/OtherDetails.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport VerificationCodeInput from \"@/components/test/VerificationCodeInput\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { setCookie } from \"@/utilities/cookies\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { UserTypes } from \"@/constants/UserTypes\";\nimport RealEstateOtherDetails from \"./RealEstateOtherDetails\";\nimport SolarRepAgentSignUp from \"../otherAgentsSignUp/SolarRepAgentSignUp\";\nimport SolarRepOtherDetails from \"./SalesRepOtherDetails\";\nimport SalesDevRepOtherDetails from \"./SolerDevRepOtherDetails\";\nimport InsuranceOtherDetails from \"./InsuranceOtherDetails\";\nimport MarketerOtherDetails from \"./MarketerOtherDetails\";\nimport RecuiterOtherDetails from \"./RecuiterOtherDetails\";\nimport DebtCollectorOtherDetails from \"./DebtCollectorOtherDetails\";\nimport WebsiteAgentOtherDetails from \"./WebsiteAgentOtherDetails\";\nimport MedSpaAgentOtherDetails from \"./MedSpaAgentOtherDetails\";\nimport { set } from \"draft-js/lib/DefaultDraftBlockRenderMap\";\nimport LawAgentOtherDetails from \"./LawAgentOtherDetails\";\nimport LoanOfficerOtherDetails from \"./LoanOfficerOtherDetails\";\n\nconst OtherDetails = ({\n  handleContinue,\n  handleBack,\n  length = 6,\n  onComplete,\n  userDetails,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  let inputsFields = useRef([]);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //congrats popup for small size screens\n  const [congratsPopup, setCongratsPopup] = useState(false);\n\n  //code for other agents variables\n\n  //for sales dev rep\n  const [service, setService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n\n  //for solar dev\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n  const [collectionStretigy, setCollectionStretigy] = useState(null);\n\n  //for webURL\n  const [websiteUrl, setWebsiteUrl] = useState(\"\");\n  const [urlErrorMessage, setUrlErrorMessage] = useState(\"\");\n\n\n\n  const [territory, setTerritory] = useState(\"\");\n  const [firmOrCompanyAffiliation, setFirmOrCompanyAffiliation] = useState(\"\");\n  const [averageMonthlyClients, setAverageMonthlyClients] = useState(\"\");\n\n  const [consultation, setConsultation] = useState(\"\");\n  const [caseVolume, setCaseVolume] = useState(\"\");\n\n\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"Residential clients\",\n    },\n    {\n      id: 2,\n      title: \"Commercial clients\",\n    },\n    {\n      id: 3,\n      title: \"Both\",\n    },\n  ];\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n  //focus 1st field automaticallly\n  useEffect(() => {\n    // Focus the first input field on component load\n    const registerationDetails = localStorage.getItem(\n      PersistanceKeys.RegisterDetails\n    );\n    inputsFields.current[0]?.focus();\n    if (registerationDetails) {\n      const registerationData = JSON.parse(registerationDetails);\n      // //console.log;\n      setUserData(registerationData);\n    } else {\n      // alert(\"Add details to continue\");\n    }\n  }, []);\n\n  useEffect(() => {\n    //console.log\n    //console.log\n    //console.log\n    //console.log\n  }, [service, companyName, installationVolume, collectionStretigy])\n\n  // Function to get the user's location and set the country code\n  useEffect(() => {\n    if (\n      userData?.userTypeTitle === \"SalesDevRep\" ||\n      userData?.userTypeTitle === \"MarketerAgent\"\n    ) {\n      if (service && companyName) {\n        setShouldContinue(false);\n      } else {\n        setShouldContinue(true);\n      }\n    } else if (userData?.userTypeTitle === UserTypes.RealEstateAgent) {\n      console.log(\"Real Estate Agent Fields:\", {\n        userFarm,\n        userBrokage,\n        userTransaction\n      });\n      if (\n        userFarm &&\n        userBrokage &&\n        userTransaction\n\n      ) {\n        setShouldContinue(false);\n      } else if (!userFarm || !userBrokage || !userTransaction) {\n        setShouldContinue(true);\n      }\n    }\n\n    else if (userData?.userTypeTitle === \"SolarRep\") {\n      if (\n        service &&\n        companyName &&\n        installationVolume &&\n        projectSize &&\n        ClientType\n      ) {\n        setShouldContinue(false);\n      } else {\n        setShouldContinue(true);\n      }\n    } else if (userData?.userTypeTitle === \"InsuranceAgent\") {\n      if (userFarm && userBrokage) {\n        setShouldContinue(false);\n      } else {\n        setShouldContinue(true);\n      }\n    } else if (userData?.userTypeTitle === UserTypes.DebtCollectorAgent) {\n      if (service && companyName && installationVolume && collectionStretigy) {\n        setShouldContinue(false);\n      } else {\n        setShouldContinue(true);\n      }\n    } else if (userData?.userTypeTitle === \"WebsiteAgent\") {\n      if (websiteUrl) {\n        setShouldContinue(false);\n      } else {\n        setShouldContinue(true);\n      }\n    } else if (\n      userData?.userTypeTitle === \"RecruiterAgent\" ||\n      userData?.userTypeTitle === \"TaxAgent\"\n    ) {\n      if (service) {\n        setShouldContinue(false);\n      } else {\n        setShouldContinue(true);\n      }\n    } else if (userData?.userTypeTitle === UserTypes.MedSpaAgent) {\n      if (territory && firmOrCompanyAffiliation && averageMonthlyClients) {\n        setShouldContinue(false);\n      } else if (!territory || !firmOrCompanyAffiliation || !averageMonthlyClients) {\n        {\n          setShouldContinue(true);\n        }\n      }\n    }\n    else if (userData?.userTypeTitle === UserTypes.LawAgent) {\n      if (territory && firmOrCompanyAffiliation && caseVolume && consultation && ClientType) {\n        setShouldContinue(false);\n      } else if (!territory || !firmOrCompanyAffiliation || !caseVolume || !consultation || !ClientType) {\n        {\n          setShouldContinue(true);\n        }\n      }\n\n    }\n    else if (userData?.userTypeTitle === UserTypes.LoanOfficerAgent) {\n      if (territory && firmOrCompanyAffiliation && ClientType) {\n        setShouldContinue(false);\n      } else if (!territory || !firmOrCompanyAffiliation || !ClientType) {\n        {\n          setShouldContinue(true);\n        }\n      }\n\n    }\n\n    else {\n      if (userFarm && userBrokage && userTransaction) {\n        setShouldContinue(false);\n      } else {\n        setShouldContinue(true);\n      }\n    }\n  }, [\n    userFarm,\n    userBrokage,\n    userTransaction,\n    checkPhoneResponse,\n    emailCheckResponse,\n    service,\n    companyName,\n    projectSize,\n    collectionStretigy,\n    installationVolume,\n    ClientType,\n    territory,\n    firmOrCompanyAffiliation,\n    averageMonthlyClients,\n    caseVolume,\n    consultation,\n  ]);\n\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  //select client type function\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  const handleSelectCollectionStretigy = (item) => {\n    // //console.log;\n    setCollectionStretigy(item.title);\n  };\n\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    // let response = await SendVerificationCode(userPhoneNumber, true);\n    try {\n      setShowVerifyPopup(true);\n      setTimeout(() => {\n        if (verifyInputRef.current[0]) {\n          verifyInputRef.current[0].focus();\n        }\n      }, 100);\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userDetails.phone, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    // setResponse(response)\n    // setIsVisible(true)\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n   \n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userDetails.name);\n      formData.append(\"email\", userDetails.email);\n      formData.append(\"phone\", userDetails.phone);\n\n      if (userFarm) {\n        formData.append(\"farm\", userFarm);\n      }\n      if (userBrokage) {\n        formData.append(\"brokerage\", userBrokage);\n      }\n      if (userTransaction) {\n        formData.append(\"averageTransactionPerYear\", userTransaction);\n      }\n      if (service) {\n        formData.append(\"areaOfService\", service);\n      }\n      if (companyName) {\n        formData.append(\"company\", companyName);\n      }\n      if (installationVolume) {\n        formData.append(\"projectsPerYear\", installationVolume);\n      }\n      if (projectSize) {\n        formData.append(\"projectSizekw\", projectSize);\n      }\n      if (websiteUrl) {\n        formData.append(\"website\", websiteUrl);\n      }\n      if (collectionStretigy) {\n        formData.append(\"collectionStrategy\", collectionStretigy);\n      }\n      if (ClientType) {\n        formData.append(\"clientType\", ClientType);\n      }\n      if (territory) {\n        formData.append(\"territory\", territory);\n      }\n      if (firmOrCompanyAffiliation) {\n        formData.append(\"firmOrCompanyAffiliation\", firmOrCompanyAffiliation);\n      }\n      if (averageMonthlyClients) {\n        formData.append(\"averageMonthlyClients\", averageMonthlyClients);\n      }\n      if (caseVolume) {\n        formData.append(\"caseVolume\", caseVolume);\n      }\n      if (consultation) {\n        formData.append(\"consultationFormat\", consultation);\n      }\n\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n\n      formData.append(\"login\", false);\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return;\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        // //console.log;\n        let result = response.data;\n        setResponse(result);\n        setIsVisible(true);\n        if (response.data.status === true) {\n          // //console.log;\n          localStorage.removeItem(PersistanceKeys.RegisterDetails);\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n          //set cokie on locastorage to run middle ware\n          // document.cookie = `User=${encodeURIComponent(\n          //   JSON.stringify(response.data.data)\n          // )}; path=/; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n\n          //check for document undefined issue\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          // handleContinue();\n\n          const screenWidth = window.innerWidth; // Get current screen width\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n             setShowVerifyPopup(false)\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            handleContinue();\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const handleConsultationFormat = (item) => {\n    setConsultation(item.title);\n  };\n\n\n  const getOtherAgentDetailsComponent = () => {\n    //console.log;\n\n    if (userData?.userTypeTitle) {\n\n      if (userData?.userTypeTitle === UserTypes.RealEstateAgent) {\n        return (\n          <RealEstateOtherDetails\n            inputsFields={inputsFields}\n            userBrokage={userBrokage}\n            userFarm={userFarm}\n            userTransaction={userTransaction}\n            setUserBrokage={setUserBrokage}\n            setUserFarm={setUserFarm}\n            setUserTransaction={setUserTransaction}\n            handleVerifyPopup={handleVerifyPopup}\n\n          />\n        )\n      }\n      if (userData?.userTypeTitle === UserTypes.SalesDevRep) {\n        return (\n          <SalesDevRepOtherDetails\n            inputsFields={inputsFields}\n            service={service}\n            companyName={companyName}\n            setService={setService}\n            setCompanyName={setCompanyName}\n            handleVerifyPopup={handleVerifyPopup}\n          />\n        )\n      }\n      if (userData?.userTypeTitle === UserTypes.SolarRep) {\n        return (\n          <SolarRepOtherDetails\n            inputsFields={inputsFields}\n            installationVolume={installationVolume}\n            projectSize={projectSize}\n            ClientType={ClientType}\n            setInstallationVolume={setInstallationVolume}\n            setProjectSize={setProjectSize}\n            companyName={companyName}\n            setCompanyName={setCompanyName}\n            service={service}\n            setService={setService}\n            setClientType={setClientType}\n            handleSelectClientType={(item) => handleSelectClientType(item)}\n            handleVerifyPopup={handleVerifyPopup}\n\n          />\n        )\n      }\n\n      if (userData?.userTypeTitle === UserTypes.InsuranceAgent) {\n        return (\n          <InsuranceOtherDetails\n            inputsFields={inputsFields}\n            userBrokage={userBrokage}\n            userFarm={userFarm}\n            setUserBrokage={setUserBrokage}\n            setUserFarm={setUserFarm}\n            handleVerifyPopup={handleVerifyPopup}\n          />\n        )\n      }\n\n      if (userData?.userTypeTitle === UserTypes.MarketerAgent) {\n        return (\n          <MarketerOtherDetails\n            inputsFields={inputsFields}\n            service={service}\n            companyName={companyName}\n            setService={setService}\n            setCompanyName={setCompanyName}\n            handleVerifyPopup={handleVerifyPopup}\n          />\n        )\n      }\n      // tax and recruiter agent have same UI\n\n\n      if (userData?.userTypeTitle === UserTypes.RecruiterAgent ||\n        userData?.userTypeTitle === UserTypes.TaxAgent\n      ) {\n        return (\n          <RecuiterOtherDetails\n            inputsFields={inputsFields}\n            service={service}\n            setService={setService}\n            handleVerifyPopup={handleVerifyPopup}\n          />\n        )\n      }\n\n      if (userData?.userTypeTitle === UserTypes.DebtCollectorAgent) {\n        return (\n          <DebtCollectorOtherDetails\n            inputsFields={inputsFields}\n            service={service}\n            setService={setService}\n            companyName={companyName}\n            setCompanyName={setCompanyName}\n            installationVolume={installationVolume}\n            setInstallationVolume={setInstallationVolume}\n            handleVerifyPopup={handleVerifyPopup}\n            collectionStretigy={collectionStretigy}\n            handleSelectCollectionStretigy={handleSelectCollectionStretigy}\n          />\n        )\n      }\n\n      if (userData?.userTypeTitle === UserTypes.WebsiteAgent) {\n        return (\n          <WebsiteAgentOtherDetails\n            websiteUrl={websiteUrl}\n            setWebsiteUrl={setWebsiteUrl}\n            urlErrorMessage={urlErrorMessage}\n            setUrlErrorMessage={setUrlErrorMessage}\n            handleVerifyPopup={handleVerifyPopup}\n          />\n        )\n      }\n\n      if (userData?.userTypeTitle === UserTypes.MedSpaAgent) {\n        return (\n          <MedSpaAgentOtherDetails\n            inputsFields={inputsFields}\n            customerService={territory}\n            setCustomerService={setTerritory}\n            companyName={firmOrCompanyAffiliation}\n            setCompanyName={setFirmOrCompanyAffiliation}\n            installationVolume={averageMonthlyClients}\n            setInstallationVolume={setAverageMonthlyClients}\n            handleVerifyPopup={handleVerifyPopup}\n          />\n        )\n      }\n\n      if (userData?.userTypeTitle === UserTypes.LawAgent) {\n        return (\n          <LawAgentOtherDetails\n            inputsFields={inputsFields}\n            customerService={territory}\n            setCustomerService={setTerritory}\n            companyName={firmOrCompanyAffiliation}\n            setCompanyName={setFirmOrCompanyAffiliation}\n            installationVolume={caseVolume}\n            setInstallationVolume={setCaseVolume}\n            handleVerifyPopup={handleVerifyPopup}\n            consultation={consultation}\n            handleConsultationFormat={handleConsultationFormat}\n            ClientType={ClientType}\n            handleSelectClientType={handleSelectClientType}\n          />\n        )\n      }\n\n      if (userData?.userTypeTitle === UserTypes.LoanOfficerAgent) {\n        return (\n          <LoanOfficerOtherDetails\n            inputsFields={inputsFields}\n            customerService={territory}\n            setCustomerService={setTerritory}\n            companyName={firmOrCompanyAffiliation}\n            setCompanyName={setFirmOrCompanyAffiliation}\n            ClientType={ClientType}\n            handleSelectClientType={(item) => handleSelectClientType(item)}\n            handleVerifyPopup={handleVerifyPopup}\n          />\n        )\n      }\n\n\n\n      // else {\n\n      //   return (\n      //     <RealEstateOtherDetails\n      //       inputsFields={inputsFields}\n      //       userBrokage={userBrokage}\n      //       userFarm={userFarm}\n      //       userTransaction={userTransaction}\n      //       setUserBrokage={setUserBrokage}\n      //       setUserFarm={setUserFarm}\n      //       setUserTransaction={setUserTransaction}\n      //       handleVerifyPopup={handleVerifyPopup}\n      //     />\n      //   )\n      // }\n    }\n  }\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white sm:rounded-2xl sm:mx-2 w-full md:w-10/12 h-[100%] sm:max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[90svh] sm:h-[82svh]\">\n          {/* header 84svh */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-4 sm:mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[90%] sm:max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              {/* Other Agents Other Details */}\n\n              {\n                getOtherAgentDetailsComponent()\n              }\n\n              {/* Modal for verify number */}\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    ////backdropFilter: \"blur(5px)\"\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full sm:w-10/12 w-full\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full mx-2\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with ***\n                        {userDetails?.phone.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            autoComplete=\"off\"\n                            autoCorrect=\"off\"\n                            spellCheck=\"false\"\n                            enterKeyHint=\"done\"\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              {/* Modal for congrats */}\n              <Modal\n                open={congratsPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    ////backdropFilter: \"blur(5px)\"\n                  },\n                }}\n              >\n                <Box className=\"w-full\" sx={styles.verifyPopup}>\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"w-full mx-4\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        {/* <button>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button> */}\n                      </div>\n\n                      <div className=\"w-full mt-2 flex flex-row justify-center\">\n                        <Image\n                          className=\"\"\n                          src=\"/agentXOrb.gif\"\n                          style={{\n                            height: \"100px\",\n                            width: \"110px\",\n                            resize: \"contain\",\n                          }}\n                          height={102}\n                          width={102}\n                          alt=\"*\"\n                        />\n                      </div>\n\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                          textAlign: \"center\",\n                          marginTop: 20,\n                        }}\n                      >\n                        Congrats!\n                      </div>\n\n                      <div\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"600\",\n                          textAlign: \"center\",\n                          marginTop: 50,\n                          color: \"#00000070\",\n                        }}\n                      >\n                        Your account is created!\n                      </div>\n\n                      {/* <div\n                        style={{\n                          fontSize: 17,\n                          fontWeight: \"700\",\n                          textAlign: \"center\",\n                          marginTop: 15,\n                          color: \"#000000\",\n                        }}\n                      >\n                        {`Letâ€™s build your AI AgentX`}\n                      </div> */}\n\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{\n                            height: \"50px\",\n                            fontSize: 15,\n                            fontWeight: \"700\",\n                          }}\n                          onClick={() => {\n                            router.push(\"/createagent\");\n                          }}\n                        >\n                          Get Started\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n             \n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OtherDetails;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3058, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/BasicDetails.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport VerificationCodeInput from \"@/components/test/VerificationCodeInput\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { setCookie } from \"@/utilities/cookies\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\n\nconst BasicDetails = ({\n  handleContinue,\n  handleBack,\n  length = 6,\n  onComplete,\n  handleDetails,\n  userDetails,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  let inputsFields = useRef([]);\n  const phoneInputRef = useRef(null);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //congrats popup for small size screens\n  const [congratsPopup, setCongratsPopup] = useState(false);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n  //focus 1st field automaticallly\n  useEffect(() => {\n    // Focus the first input field on component load\n    inputsFields.current[0]?.focus();\n    let loc = getLocalLocation();\n    if (!userDetails.phone) {\n      setCountryCode(loc);\n    }\n\n    if (userDetails) {\n      setUserName(userDetails.name);\n      setUserEmail(userDetails.email);\n      setUserPhoneNumber(userDetails.phone);\n    }\n  }, []);\n\n  // Function to get the user's location and set the country code\n  useEffect(() => {\n    handleDetails(userName, userEmail, userPhoneNumber);\n\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      emailCheckResponse?.status === true &&\n      !errorMessage &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      emailCheckResponse?.status === false ||\n      errorMessage ||\n      checkPhoneResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    userFarm,\n    userBrokage,\n    userTransaction,\n    checkPhoneResponse,\n    emailCheckResponse,\n    errorMessage,\n  ]);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    // let response = await SendVerificationCode(userPhoneNumber, true);\n    handleContinue();\n    return;\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    // setResponse(response)\n    // setIsVisible(true)\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = null;\n      if (typeof window !== \"undefined\") {\n        campainee = GetCampaigneeNameIfAvailable(window);\n      }\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"farm\", userFarm);\n      formData.append(\"brokerage\", userBrokage);\n      formData.append(\"averageTransactionPerYear\", userTransaction);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"login\", false);\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return;\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        // //console.log;\n        let result = response.data;\n        setResponse(result);\n        setIsVisible(true);\n        if (response.data.status === true) {\n          // //console.log;\n          localStorage.removeItem(PersistanceKeys.RegisterDetails);\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n          //set cokie on locastorage to run middle ware\n          // document.cookie = `User=${encodeURIComponent(\n          //   JSON.stringify(response.data.data)\n          // )}; path=/; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n\n          //check for document undefined issue\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          // handleContinue();\n\n          const screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            handleContinue();\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-col justify-center items-center h-[100svh] \"\n    >\n      <div className=\"flex flex-col bg-white sm:rounded-2xl sm:mx-2 w-full md:w-10/12 h-[90%] sm:max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[90svh] sm:h-[82svh]\">\n          {/* header h-[84svh]*/}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%] \">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n              onClick={handleContinue}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-4 sm:mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[90%] sm:max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                ref={(el) => (inputsFields.current[0] = el)}\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\" || e.key === \"Done\") {\n                    inputsFields.current[1]?.focus(); // Move to the second input\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                ref={(el) => (inputsFields.current[1] = el)}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                enterKeyHint=\"done\"\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\") {\n                    // Focus on PhoneInput field when Enter is pressed\n                    // if (phoneInputRef.current) {\n                    //   const inputElement = phoneInputRef.current.querySelector(\"input\"); // Native input element\n                    //   if (inputElement) {\n                    //     inputElement.focus();\n                    //   }\n                    // }\n\n                    const timer = setTimeout(() => {\n                      // Scroll into view before focusing\n                      phoneInputRef.current.scrollIntoView({\n                        behavior: \"smooth\",\n                        block: \"center\",\n                      });\n                      phoneInputRef.current.focus({ preventScroll: true });\n                      // //console.log;\n                    }, 200); // Slight delay to ensure component is rendered\n                    return () => clearTimeout(timer);\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  // ref={phoneInputRef}\n                  className=\"border outline-none bg-white\"\n                  country={\"us\"} // restrict to US only\n                  onlyCountries={[\"us\"]}\n                  disableDropdown={true}\n                  countryCodeEditable={false}\n                  disableCountryCode={false}// Set the default country\n                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputProps={{\n                    ref: phoneInputRef,\n                    // enterKeyHint: \"Done\",\n                  }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                // onKeyDown={(e) => {\n                //   if (e.key === \"Enter\" || e.key === \"Done\") {\n                //     // inputsFields.current[3]?.focus(); // Move to the second input\n                //    // //console.log\n                //     handleContinue();\n                //   }\n                // }}\n                />\n              </div>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"h-[10%] w-full\">\n        <div>\n          <ProgressBar value={70} />\n        </div>\n\n        <Footer\n          handleContinue={handleVerifyPopup}\n          handleBack={handleBack}\n          registerLoader={registerLoader}\n          shouldContinue={shouldContinue}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BasicDetails;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3916, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/MedSpaAgentSignUpMobile.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst MedSpaAgentSignUpMobile = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"Individuals (B2)\",\n    },\n    {\n      id: 2,\n      title: \"Businesses & Corporations (B2B)\",\n    },\n    {\n      id: 3,\n      title: \"Government & Public Sector\",\n    },\n  ];\n\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      installationVolume &&\n      // projectSize &&\n      ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !userFarm ||\n      !userBrokage ||\n      !userTransaction ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      // projectSize ||\n      ClientType ||\n      userTransaction ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n    installationVolume,\n    projectSize,\n    ClientType,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      let clienttype = null;\n\n      if (ClientType === \"Residential clients\") {\n        clienttype = \"residential\";\n      } else if (ClientType === \"Commercial clients\") {\n        clienttype = \"commercial\";\n      } else if (ClientType === \"Both\") {\n        clienttype = \"both\";\n      }\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"firmOrCompanyAffiliation\", companyName);\n      formData.append(\"averageMonthlyClients\", installationVolume);\n      // formData.append(\"projectsPerYear\", projectSize);\n      // formData.append(\"primaryClientType\", clienttype);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            handleContinue();\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\n                  country={\"us\"} // restrict to US only\n                  onlyCountries={[\"us\"]}\n                  disableDropdown={true}\n                  countryCodeEditable={false}\n                  disableCountryCode={false}\n                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the med spa or practice you work with, if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                How many clients do you typically see per month?\n              </div>\n              <input\n                placeholder=\"Type here\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                  setInstallationVolume(e.target.value);\n                }}\n              />\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MedSpaAgentSignUpMobile;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AACA,qEAAqE;AAErE,MAAM,0BAA0B,CAAC,EAC/B,cAAc,EACd,cAAc,EACd,oBAAoB,EACpB,SAAS,CAAC,EACV,UAAU,EACX;;IACC,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE,EAAE;IAChC,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAExB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,IAAI,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IACxC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,6DAA6D;IAC7D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,6BAA6B;IAC7B,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,2BAA2B,6BAA6B,GAC7D,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACX,0BAA0B;IAC1B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,QAAQ,IAAI,CAAC;IAChE,0BAA0B;IAC1B,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,iCAAiC;IACjC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,gCAAgC;IAChC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,oCAAoC;IACpC,MAAM,qBAAqB;QACzB;YACE,IAAI;YACJ,OAAO;QACT;QACA;YACE,IAAI;YACJ,OAAO;QACT;QACA;YACE,IAAI;YACJ,OAAO;QACT;KACD;IAED,MAAM,qBAAqB;QACzB;YACE,IAAI;YACJ,OAAO;QACT;QACA;YACE,IAAI;YACJ,OAAO;QACT;QACA;YACE,IAAI;YACJ,OAAO;QACT;KACD;IAED,+DAA+D;IAE/D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACR,IAAI,MAAM,CAAA,GAAA,qKAAA,CAAA,mBAAgB,AAAD;YACzB,eAAe;QACjB;4CAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACR,IACE,YACA,aACA,mBACA,mBACA,eACA,sBACA,iBAAiB;YACjB,cACA,oBAAoB,WAAW,QAC/B,oBAAoB,WAAW,MAC/B;gBACA,kBAAkB;YACpB,OAAO,IACL,CAAC,YACD,CAAC,aACD,CAAC,mBACD,CAAC,YACD,CAAC,eACD,CAAC,mBACD,mBACA,eACA,sBACA,iBAAiB;YACjB,cACA,mBACA,oBAAoB,WAAW,SAC/B,oBAAoB,WAAW,OAC/B;gBACA,kBAAkB;YACpB;QACF;4CAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACR,IAAI,aAAa,aAAa,OAAO,CAAC,yHAAA,CAAA,kBAAe,CAAC,eAAe;YACrE,IAAI,YAAY;gBACd,IAAI,OAAO,KAAK,KAAK,CAAC;gBACtB,YAAY;YACd;QACF;4CAAG,EAAE;IAEL,2CAA2C;IAC3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACR,IAAI,mBAAmB,eAAe,OAAO,CAAC,EAAE,EAAE;gBAChD,eAAe,OAAO,CAAC,EAAE,CAAC,KAAK;YACjC;QACF;4CAAG;QAAC;KAAgB;IAEpB,4CAA4C;IAC5C,MAAM,0BAA0B,CAAC;QAC/B,mBAAmB;QACnB,oBAAoB;QAEpB,IAAI,CAAC,OAAO;YACV,gBAAgB;QAClB;IACF;IAEA,iCAAiC;IACjC,MAAM,yBAAyB,CAAC;QAC9B,iBAAiB;QACjB,cAAc,KAAK,KAAK;IAC1B;IAEA,oCAAoC;IACpC,MAAM,sBAAsB,CAAC;QAC3B,sEAAsE;QACtE,sEAAsE;QACtE,MAAM,eAAe,CAAA,GAAA,+OAAA,CAAA,6BAA0B,AAAD,EAC5C,CAAC,CAAC,EAAE,aAAa,EACjB,aAAa;QAEf,uGAAuG;QACvG,IAAI,CAAC,gBAAgB,CAAC,aAAa,OAAO,IAAI;YAC5C,gBAAgB;QAClB,OAAO;YACL,gBAAgB;YAEhB,IAAI,SAAS,OAAO,EAAE;gBACpB,aAAa,SAAS,OAAO;YAC/B;YAEA,+BAA+B;YAC/B,iBAAiB;YAEjB,SAAS,OAAO,GAAG,WAAW;gBAC5B,iBAAiB;YACjB,iBAAiB;YACnB,GAAG;QACL;IACF;IAEA,2BAA2B;IAC3B,MAAM,gBAAgB,CAAC;QACrB,MAAM,eAAe;QAErB,8DAA8D;QAC9D,IAAI,OAAO,IAAI,CAAC,QAAQ;YACtB,OAAO;QACT;QAEA,8CAA8C;QAC9C,OAAO,aAAa,IAAI,CAAC;IAC3B;IAEA,8BAA8B;IAE9B,MAAM,oBAAoB;QACxB,IAAI;YACF,kBAAkB;YAClB,IAAI,WAAW,MAAM,CAAA,GAAA,0KAAA,CAAA,UAAoB,AAAD,EAAE,iBAAiB;YAC3D,YAAY;YACZ,aAAa;QACb,iBAAiB;QACnB,EAAE,OAAO,OAAO;QACd,yCAAyC;QAC3C,SAAU;YACR,kBAAkB;QACpB;QACA,mBAAmB;QACnB,WAAW;YACT,IAAI,eAAe,OAAO,CAAC,EAAE,EAAE;gBAC7B,eAAe,OAAO,CAAC,EAAE,CAAC,KAAK;YACjC;QACF,GAAG,MAAM,iDAAiD;IAC5D;IAEA,MAAM,cAAc;QAClB,mBAAmB;IACrB;IAEA,uCAAuC;IAEvC,MAAM,0BAA0B,CAAC,GAAG;QAClC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAC1B,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,UAAU,IAAI,QAAQ,2BAA2B;QAE7E,MAAM,YAAY;eAAI;SAAW;QACjC,SAAS,CAAC,MAAM,GAAG;QACnB,cAAc;QAEd,sDAAsD;QACtD,IAAI,SAAS,QAAQ,SAAS,GAAG;YAC/B,eAAe,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK;QACzC;QAEA,uDAAuD;QACvD,IAAI,UAAU,KAAK,CAAC,CAAC,MAAQ,QAAQ,OAAO,YAAY;YACtD,WAAW,UAAU,IAAI,CAAC,MAAM,wCAAwC;QAC1E;IACF;IAEA,MAAM,kBAAkB,CAAC,GAAG;QAC1B,IAAI,EAAE,GAAG,KAAK,aAAa;YACzB,IAAI,UAAU,CAAC,MAAM,KAAK,MAAM,QAAQ,GAAG;gBACzC,eAAe,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK;YACzC;YACA,MAAM,YAAY;mBAAI;aAAW;YACjC,SAAS,CAAC,MAAM,GAAG;YACnB,cAAc;QAChB;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,MAAM,aAAa,EAAE,aAAa,CAAC,OAAO,CAAC,QAAQ,KAAK,CAAC,GAAG;QAC5D,MAAM,YAAY,WACf,KAAK,CAAC,IACN,GAAG,CAAC,CAAC,OAAU,QAAQ,IAAI,CAAC,QAAQ,OAAO;QAC9C,cAAc;QAEd,iEAAiE;QACjE,UAAU,OAAO,CAAC,CAAC,MAAM;YACvB,eAAe,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG;YACtC,IAAI,UAAU,UAAU,MAAM,GAAG,GAAG;gBAClC,eAAe,OAAO,CAAC,MAAM,CAAC,KAAK;YACrC;QACF;QAEA,IAAI,UAAU,KAAK,CAAC,CAAC,MAAQ,QAAQ,OAAO,YAAY;YACtD,WAAW,UAAU,IAAI,CAAC;QAC5B;IACF;IAEA,8BAA8B;IAC9B,MAAM,mBAAmB;QACvB,kBAAkB;QAClB,6BAA6B;QAC7B;IACF;IAEA,2BAA2B;IAC3B,MAAM,iBAAiB;QACrB,IAAI;YACF,kBAAkB;YAElB,IAAI,aAAa,SAAS,aAAa;YAEvC,IAAI,aAAa;YAEjB,IAAI,eAAe,uBAAuB;gBACxC,aAAa;YACf,OAAO,IAAI,eAAe,sBAAsB;gBAC9C,aAAa;YACf,OAAO,IAAI,eAAe,QAAQ;gBAChC,aAAa;YACf;YACA,MAAM,WAAW,IAAI;YACrB,MAAM,UAAU,6HAAA,CAAA,UAAI,CAAC,QAAQ;YAC7B,IAAI,YAAY,CAAA,GAAA,2HAAA,CAAA,+BAA4B,AAAD,EAAE;YAC7C,IAAI,WAAW;gBACb,SAAS,MAAM,CAAC,cAAc;YAChC;YACA,mCAAmC;YACnC,SAAS,MAAM,CAAC,QAAQ;YACxB,SAAS,MAAM,CAAC,SAAS;YACzB,SAAS,MAAM,CAAC,SAAS;YACzB,SAAS,MAAM,CAAC,gBAAgB,KAAK,SAAS,CAAC,SAAS,SAAS;YACjE,SAAS,MAAM,CAAC,eAAe,KAAK,SAAS,CAAC,SAAS,WAAW;YAClE,SAAS,MAAM,CAAC,YAAY;YAC5B,SAAS,MAAM,CAAC,aAAa;YAC7B,SAAS,MAAM,CAAC,4BAA4B;YAC5C,SAAS,MAAM,CAAC,yBAAyB;YACzC,mDAAmD;YACnD,oDAAoD;YACpD,SAAS,MAAM,CAAC,SAAS;YACzB,SAAS,MAAM,CAAC,oBAAoB,WAAW,IAAI,CAAC;YACpD,SAAS,MAAM,CACb,YACA,KAAK,cAAc,GAAG,eAAe,GAAG,QAAQ;YAGlD,iBAAiB;YACjB,KAAK,IAAI,CAAC,KAAK,MAAM,IAAI,SAAS,OAAO,GAAI;YAC3C,iBAAiB;YACnB;YAEA,SAAS;YACT,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS;YAC3C,IAAI,UAAU;gBACZ,YAAY,SAAS,IAAI;gBACzB,aAAa;gBACb,iBAAiB;gBACjB,IAAI,SAAS,IAAI,CAAC,MAAM,KAAK,MAAM;oBACjC,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,SAAS,IAAI,CAAC,IAAI;oBAE9D,IAAI,OAAO,aAAa,aAAa;wBACnC,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD,EAAE,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;oBACrC;oBAEA,IAAI,cAAc;oBAClB,wCAAmC;wBACjC,cAAc,OAAO,UAAU,EAAE,2BAA2B;oBAC9D;oBACA,MAAM,iBAAiB,KAAK,8CAA8C;oBAE1E,IAAI,eAAe,gBAAgB;wBACjC,iBAAiB;oBACjB,iBAAiB;oBACnB,OAAO;wBACL,iBAAiB;wBACjB;oBACA,0BAA0B;oBAC5B;gBACF;YACF;QACF,EAAE,OAAO,OAAO;QACd,8DAA8D;QAChE,SAAU;YACR,kBAAkB;QACpB;IACF;IAEA,+BAA+B;IAE/B,MAAM,aAAa,OAAO;QACxB,IAAI;YACF,cAAc;YACd,eAAe;YAEf,MAAM,UAAU,6HAAA,CAAA,UAAI,CAAC,UAAU;YAE/B,MAAM,UAAU;gBACd,OAAO;YACT;YAEA,iBAAiB;YAEjB,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS,SAAS;gBAClD,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,IAAI,UAAU;gBACZ,iBAAiB;gBACjB,IAAI,SAAS,IAAI,CAAC,MAAM,KAAK,MAAM;oBACjC,iBAAiB;oBACjB,sBAAsB,SAAS,IAAI;gBACrC,OAAO;oBACL,sBAAsB,SAAS,IAAI;gBACrC;YACF;QACF,EAAE,OAAO,OAAO;QACd,iEAAiE;QACnE,SAAU;YACR,eAAe;QACjB;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,IAAI;YACF,qBAAqB;YACrB,MAAM,UAAU,6HAAA,CAAA,UAAI,CAAC,UAAU;YAE/B,MAAM,UAAU;gBACd,OAAO;YACT;YAEA,iBAAiB;YAEjB,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS,SAAS;gBAClD,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,IAAI,UAAU;gBACZ,iBAAiB;gBACjB,IAAI,SAAS,IAAI,CAAC,MAAM,KAAK,MAAM;oBACjC,iBAAiB;oBACjB,sBAAsB,SAAS,IAAI;gBACrC,OAAO;oBACL,sBAAsB,SAAS,IAAI;gBACrC;YACF;QACF,EAAE,OAAO,OAAO;QACd,iEAAiE;QACnE,SAAU;YACR,qBAAqB;QACvB;IACF;IAEA,MAAM,SAAS;QACb,cAAc;YACZ,UAAU;YACV,YAAY;QACd;QACA,YAAY;YACV,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QACA,QAAQ;YACN,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QACA,aAAa;YACX,QAAQ;YACR,SAAS;YACT,QAAQ;YACR,IAAI;YACJ,IAAI;YACJ,WAAW;YACX,cAAc;YACd,QAAQ;YACR,SAAS;QACX;IACF;IAEA,qBACE,6LAAC;QACC,OAAO;YAAE,OAAO;QAAO;QACvB,WAAU;kBAEV,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,sIAAA,CAAA,UAAM;;;;;;;;;;sCAGT,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,WAAW;oCAAS;8CAC9B;;;;;;8CAGD,6LAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,gBAAgB;oCAAO;;sDAEhC,6LAAC;4CAAI,OAAO,OAAO,YAAY;sDAAG,CAAC,qBAAqB,CAAC;;;;;;sDACzD,6LAAC;4CACC,aAAY;4CACZ,WAAU;4CACV,OAAO;gDAAE,GAAG,OAAO,UAAU;gDAAE,WAAW;4CAAM;4CAChD,OAAO;4CACP,UAAU,CAAC;gDACT,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gDAC5B,MAAM,gBAAgB,MACnB,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,OAAS,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACxD,IAAI,CAAC;gDAER,kCAAkC;gDAClC,wBAAwB;gDACxB,qBAAqB;gDACrB,4HAA4H;gDAC5H,gCAAgC;gDAEhC,YAAY;4CACd;;;;;;sDAGF,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,OAAO,OAAO,YAAY;8DAC5B,CAAC,yBAAyB,CAAC;;;;;;8DAE9B,6LAAC;;wDACE,4BACC,6LAAC;4DAAE,OAAO;gEAAE,GAAG,OAAO,MAAM;gEAAE,OAAO;4DAAQ;sEAAG;;;;;iFAIhD,6LAAC;sEACE,mCACC,6LAAC;gEACC,OAAO;oEACL,GAAG,OAAO,MAAM;oEAChB,OACE,mBAAmB,MAAM,KAAK,OAC1B,UACA;gEACR;0EAEC,mBAAmB,OAAO,CACxB,KAAK,CAAC,GAAG,GACT,WAAW,KACZ,mBAAmB,OAAO,CAAC,KAAK,CAAC;;;;;qFAGrC,6LAAC;;;;;;;;;;sEAIP,6LAAC;4DAAI,OAAO;gEAAE,GAAG,OAAO,MAAM;gEAAE,OAAO;4DAAM;sEAC1C;;;;;;;;;;;;;;;;;;sDAKP,6LAAC;4CACC,aAAY;4CACZ,WAAU;4CACV,OAAO;gDAAE,GAAG,OAAO,UAAU;gDAAE,WAAW;4CAAM;4CAChD,OAAO;4CACP,UAAU,CAAC;gDACT,IAAI,QAAQ,EAAE,MAAM,CAAC,KAAK;gDAC1B,aAAa;gDAEb,eAAe;gDACf,qCAAqC;gDACrC,yBAAyB;gDACzB,sBAAsB;gDACtB,cAAc;gDACd,wCAAwC;gDACxC,WAAW;gDACX,iCAAiC;gDACjC,IAAI;gDAEJ,IAAI,SAAS,OAAO,EAAE;oDACpB,aAAa,SAAS,OAAO;gDAC/B;gDAEA,sBAAsB;gDAEtB,IAAI,CAAC,OAAO;oDACV,iBAAiB;oDACjB,cAAc;oDACd;gDACF;gDAEA,IAAI,CAAC,cAAc,QAAQ;oDACzB,iBAAiB;oDACjB,cAAc;gDAChB,OAAO;oDACL,iBAAiB;oDACjB,IAAI,OAAO;wDACT,oBAAoB;wDACpB,SAAS,OAAO,GAAG,WAAW;4DAC5B,WAAW;wDACb,GAAG;oDACL,OAAO;wDACL,yCAAyC;wDACzC,sBAAsB;wDACtB,cAAc;oDAChB;gDACF;4CACF;;;;;;sDAGF,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,OAAO,OAAO,YAAY;8DAC5B,CAAC,wBAAwB,CAAC;;;;;;8DAG7B,6LAAC;;wDACE,gCACC,6LAAC;4DACC,WAAU;4DACV,OAAO;gEAAE,GAAG,OAAO,MAAM;gEAAE,QAAQ;4DAAO;sEAC3C;;;;;;wDAIF,6BACC,6LAAC;4DACC,OAAO;gEACL,GAAG,OAAO,MAAM;gEAChB,OAAO,gBAAgB;gEACvB,QAAQ;4DACV;sEAEC;;;;;iFAGH,6LAAC;sEACE,kCACC,6LAAC;gEACC,OAAO;oEACL,GAAG,OAAO,MAAM;oEAChB,OAAO;oEACP,QAAQ;gEACV;0EACD;;;;;qFAID,6LAAC;0EACE,mCACC,6LAAC;oEACC,OAAO;wEACL,GAAG,OAAO,MAAM;wEAChB,OACE,mBAAmB,MAAM,KAAK,OAC1B,UACA;wEACN,QAAQ;oEACV;8EAEC,mBAAmB,OAAO,CACxB,KAAK,CAAC,GAAG,GACT,WAAW,KACZ,mBAAmB,OAAO,CAAC,KAAK,CAAC;;;;;yFAGrC,6LAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;sDASf,6LAAC;4CAAI,OAAO;gDAAE,WAAW;4CAAM;sDAC7B,cAAA,6LAAC,6JAAA,CAAA,UAAU;gDACT,WAAU;gDACV,SAAS;gDACT,eAAe;oDAAC;iDAAK;gDACrB,iBAAiB;gDACjB,qBAAqB;gDACrB,oBAAoB;gDACpB,OAAO;gDACP,UAAU;gDACV,aACE,iBACI,yBACA;gDAEN,UAAU;gDACV,OAAO;oDAAE,cAAc;gDAAM;gDAC7B,YAAY;oDACV,OAAO;oDACP,aAAa;oDACb,iBAAiB;oDACjB,aAAa;oDACb,YAAY;oDACZ,eAAe;gDACjB;gDACA,aAAa;oDACX,QAAQ;oDACR,iBAAiB;gDAInB;gDACA,eAAe;oDACb,WAAW;oDACX,WAAW;gDACb;gDACA,aAAa,UAAU,eAAe;;;;;;;;;;;sDAI1C,6LAAC;4CAAI,OAAO,OAAO,YAAY;4CAAE,WAAU;sDAAO;;;;;;sDAGlD,6LAAC;4CACC,aAAY;4CACZ,WAAU;4CACV,OAAO;gDAAE,GAAG,OAAO,UAAU;gDAAE,WAAW;4CAAM;4CAChD,OAAO;4CACP,UAAU,CAAC;gDACT,mBAAmB,EAAE,MAAM,CAAC,KAAK;4CACnC;;;;;;sDAGF,6LAAC;4CAAI,OAAO,OAAO,YAAY;4CAAE,WAAU;sDAAO;;;;;;sDAGlD,6LAAC;4CACC,aAAY;4CACZ,WAAU;4CACV,OAAO;gDAAE,GAAG,OAAO,UAAU;gDAAE,WAAW;4CAAM;4CAChD,OAAO;4CACP,UAAU,CAAC;gDACT,eAAe,EAAE,MAAM,CAAC,KAAK;4CAC/B;;;;;;sDAGF,6LAAC;4CAAI,OAAO,OAAO,YAAY;4CAAE,WAAU;sDAAO;;;;;;sDAGlD,6LAAC;4CACC,aAAY;4CACZ,WAAU;4CACV,OAAO;gDAAE,GAAG,OAAO,UAAU;gDAAE,WAAW;4CAAM;4CAChD,OAAO;4CACP,UAAU,CAAC;gDACT,sBAAsB,EAAE,MAAM,CAAC,KAAK;4CACtC;;;;;;sDAGF,6LAAC,iMAAA,CAAA,QAAK;4CACJ,MAAM;4CACN,2CAA2C;4CAC3C,oBAAoB;4CACpB,eAAe;gDACb,SAAS;gDACT,IAAI;oDACF,iBAAiB;gDAEnB;4CACF;sDAEA,cAAA,6LAAC,2LAAA,CAAA,MAAG;gDACF,WAAU;gDACV,IAAI,OAAO,WAAW;0DAEtB,cAAA,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDACC,WAAU;wDACV,OAAO;4DACL,iBAAiB;4DACjB,SAAS;4DACT,cAAc;wDAChB;;0EAEA,6LAAC;gEAAI,WAAU;0EACb,cAAA,6LAAC;oEAAO,SAAS;8EACf,cAAA,6LAAC,gIAAA,CAAA,UAAK;wEACJ,KAAK;wEACL,QAAQ;wEACR,OAAO;wEACP,KAAI;;;;;;;;;;;;;;;;0EAIV,6LAAC;gEACC,OAAO;oEACL,UAAU;oEACV,YAAY;gEACd;0EACD;;;;;;0EAGD,6LAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,GAAG,OAAO,UAAU;oEAAE,OAAO;gEAAY;;oEACnD;oEAEE,gBAAgB,KAAK,CAAC,CAAC;oEAAG;;;;;;;0EAG7B,6LAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,SAAS;oEAAQ,KAAK;gEAAM;0EAEpC,MAAM,IAAI,CAAC;oEAAE;gEAAO,GAAG,GAAG,CAAC,CAAC,GAAG,sBAC9B,6LAAC;wEAEC,KAAK,CAAC,KAAQ,eAAe,OAAO,CAAC,MAAM,GAAG;wEAC9C,cAAc;wEACd,MAAK;wEACL,WAAU;wEACV,WAAU;wEACV,OAAO,UAAU,CAAC,MAAM;wEACxB,UAAU,CAAC,IAAM,wBAAwB,GAAG;wEAC5C,WAAW,CAAC,IAAM,gBAAgB,GAAG;wEACrC,SAAS,CAAC;4EACR,8DAA8D;4EAC9D,IACE,EAAE,GAAG,KAAK,WACV,WAAW,KAAK,CAAC,CAAC,QAAU,MAAM,IAAI,OAAO,KAC7C;gFACA;4EACF;wEACF;wEACA,SAAS;wEACT,aAAY;wEACZ,OAAO;4EACL,OAAO;4EACP,QAAQ;4EACR,WAAW;4EACX,UAAU;4EACV,QAAQ;4EACR,cAAc;wEAChB;wEACA,WAAU;uEA5BL;;;;;;;;;;0EAgCX,6LAAC;gEACC,WAAU;gEACV,OAAO,OAAO,UAAU;;oEAEvB,CAAC,oBAAoB,CAAC;oEACtB,+BACC,6LAAC,kOAAA,CAAA,mBAAgB;wEAAC,MAAM;;;;;6FAExB,6LAAC;wEACC,WAAU;wEACV,SAAS;kFACV;;;;;;;;;;;;4DAKJ,+BACC,6LAAC;gEAAI,WAAU;0EACb,cAAA,6LAAC,kOAAA,CAAA,mBAAgB;oEAAC,MAAM;;;;;;;;;;qFAG1B,6LAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,QAAQ;gEAAO;gEACxB,SAAS;0EACV;;;;;;;;;;;;;;;;;;;;;;;;;;;sDASX,6LAAC,6KAAA,CAAA,UAAa;4CACZ,SAAS,SAAS,OAAO;4CACzB,WAAW;4CACX,cAAc,CAAC;gDACb,aAAa;4CACf;4CACA,SAAS,SAAS,MAAM;;;;;;;;;;;;;;;;;;;;;;;;8BAMhC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;sCACC,cAAA,6LAAC,2IAAA,CAAA,UAAW;gCAAC,OAAO;;;;;;;;;;;sCAGtB,6LAAC,sIAAA,CAAA,UAAM;4BACL,gBAAgB;4BAChB,YAAY;4BACZ,gBAAgB;4BAChB,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;AAM5B;GAl4BM;;QAcW,qIAAA,CAAA,YAAS;;;KAdpB;uCAo4BS","debugId":null}},
    {"offset": {"line": 5037, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/LoanOfficerSignUpMobile.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst LoanOfficeSugnUpMobile = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n\n  const [otherType, setOtherType] = useState(\"\");\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"First-Time Homebuyers\",\n    },\n    {\n      id: 2,\n      title: \"Investors & Property Developers\",\n    },\n    {\n      id: 3,\n      title: \"Veterans & Active Military\",\n    },\n    {\n      id: 3,\n      title: \"Luxury Homebuyers\",\n    },\n    {\n      id: 5,\n      title: \"Self-Employed & Entrepreneurs\",\n    },\n    {\n      id: 6,\n      title: \"Other (type here)\",\n    },\n  ];\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      // projectSize ||\n      ClientType ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n\n    ClientType,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      let clienttype = null;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"companyAffiliation\", companyName);\n      formData.append(\"clientType\", ClientType);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            handleContinue();\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily serve clients?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the mortgage lender, bank, or brokerage you work with,\n                if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Client Type\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\" }}\n              >\n                {primaryClientTypes.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleSelectClientType(item);\n                        }}\n                        className=\"border border-[#00000010] rounded px-4 h-[74px] w-full outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            ClientType === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            ClientType === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                      {ClientType === \"Other (type here)\" && item.id === 6 && (\n                        <input\n                          placeholder=\"Type here\"\n                          className=\" w-full border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                          style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                          value={otherType}\n                          onChange={(e) => {\n                            setOtherType(e.target.value);\n                          }}\n                        />\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoanOfficeSugnUpMobile;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6198, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/mobileUI/LawAgentSignUpMobile.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst LawAgentSignUpMobile = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n  const [consultation, setConsultation] = useState(null);\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"Individuals (B2)\",\n    },\n    {\n      id: 2,\n      title: \"Businesses & Corporations (B2B)\",\n    },\n    {\n      id: 3,\n      title: \"Government & Public Sector\",\n    },\n  ];\n\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      installationVolume &&\n      // projectSize &&\n      ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !userFarm ||\n      !userBrokage ||\n      !userTransaction ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      // projectSize ||\n      ClientType ||\n      userTransaction ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n    installationVolume,\n    projectSize,\n    ClientType,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  const handleConsultationFormat = (item) => {\n    setConsultation(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      let clienttype = null;\n\n      if (ClientType === \"Individuals (B2)\") {\n        clienttype = \"Individuals\";\n      } else if (ClientType === \"Businesses & Corporations (B2B)\") {\n        clienttype = \"Businesses&Corporations\";\n      } else if (ClientType === \"Government & Public Sector\") {\n        clienttype = \"Government&PublicSector\";\n      }\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"firmOrCompanyAffiliation\", companyName);\n      formData.append(\"caseVolume\", installationVolume);\n      // formData.append(\"projectsPerYear\", projectSize);\n      formData.append(\"clientType\", ClientType);\n      formData.append(\"consultationFormat\", consultation);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            handleContinue();\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\n                  country={\"us\"} // restrict to US only\n                  onlyCountries={[\"us\"]}\n                  disableDropdown={true}\n                  countryCodeEditable={false}\n                  disableCountryCode={false} \n                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily practice law?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the firm or legal practice you work with, if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                How many cases do you handle annually or monthly?\n              </div>\n              <input\n                placeholder=\"Type here\"\n                type=\"number\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                  setInstallationVolume(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Client Type\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\" }}\n              >\n                {primaryClientTypes.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleSelectClientType(item);\n                        }}\n                        className=\"border border-[#00000010] rounded px-4 h-[74px] w-full outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            ClientType === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            ClientType === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Consultation Format\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\" }}\n              >\n                {ConsultationFormat.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleConsultationFormat(item);\n                        }}\n                        className=\"border w-full h-[74px] border-[#00000010] rounded px-4 outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            ClientType === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            ClientType === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LawAgentSignUpMobile;\n"],"names":[],"mappings":"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","debugId":null}}]
}