{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/InsuranceAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { validateEmail } from \"@/utilities/validateEmail\";\nimport Apis from \"../apis/Apis\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/navigation\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport ProgressBar from \"../ProgressBar\";\n\ntype InsuranceAgentSignUpProps = {\n  handleInsuranceBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst InsuranceAgentSignUp: React.FC<InsuranceAgentSignUpProps> = ({\n  handleInsuranceBack,\n}) => {\n  const router = useRouter();\n\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [userFarm, setUserFarm] = useState<string>(\"\");\n  const [userBrokage, setUserBrokage] = useState<string>(\"\");\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response = await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  useEffect(() => {\n    if (userFarm.trim() !== \"\" && userBrokage.trim() !== \"\") {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [userFarm, userBrokage]);\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              className=\"border outline-none bg-white\"\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Market Territory */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Market Territory (Farm/Focus Area)\n          </div>\n          <input\n            placeholder=\"City, Zip, County, etc.\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userFarm}\n            onChange={(e) => setUserFarm(e.target.value)}\n          />\n\n          {/* Brokerage */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Brokerage or Agency Name\n          </div>\n          <input\n            placeholder=\"Brokerage Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userBrokage}\n            onChange={(e) => setUserBrokage(e.target.value)}\n          />\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => {verifyInputRef.current[index] = el}}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleInsuranceBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InsuranceAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/SalesDevAgent.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst SalesDevAgent = ({\n  handleContinue,\n  handleSalesAgentBack,\n  length = 6,\n  onComplete,\n  handleWaitList,\n  setCongratsPopup,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [customerService, setCustomerService] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //getlocation\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  // Function to get the user's location and set the country code\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      company &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !customerService ||\n      !company ||\n      !userTransaction ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    customerService,\n    company,\n    userTransaction,\n    checkPhoneResponse,\n    emailCheckResponse,\n  ]);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n      // //console.log;\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      // formData.append(\"farm\", customerService);\n      // formData.append(\"brokerage\", company);\n      // formData.append(\"averageTransactionPerYear\", userTransaction);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"areaOfService\", customerService);\n      formData.append(\"company\", company);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      //console.log;\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        //console.log;\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n          //console.log;\n          try {\n            if (typeof document !== \"undefined\") {\n              setCookie(response.data.data.user, document);\n            }\n          } catch (error) {\n            //console.log;\n          }\n          //console.log;\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n          //console.log;\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            //console.log;\n          } else {\n            //console.log;\n            // handleContinue();\n            router.push(\"/createagent\")\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate or serve customers\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Company\n              </div>\n              <input\n                placeholder=\"Company\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={company}\n                onChange={(e) => {\n                  setCompany(e.target.value);\n                }}\n              />\n\n              {/* <div>\n                                <div style={styles.headingStyle} className='mt-6'>\n                                    {`What’s your market territory`}\n                                </div>\n                                <input\n                                    placeholder='Your territory  '\n                                    className='border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0'\n                                    style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                                    value={customerService}\n                                    onChange={(e) => { setCustomerService(e.target.value) }}\n                                />\n\n                                <div style={styles.headingStyle} className='mt-6'>\n                                    Your brokerage\n                                </div>\n                                <input\n                                    placeholder='Brokerage'\n                                    className='border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0'\n                                    style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                                    value={company}\n                                    onChange={(e) => { setCompany(e.target.value) }}\n                                />\n\n                                <div style={styles.headingStyle} className='mt-6'>\n                                    How many homes did you sell last yeartion volume per year\n                                </div>\n                                <input\n                                    placeholder='Value'\n                                    className='border border-[#00000010] rounded p-3 outline-none mb-2 focus:outline-none focus:ring-0'\n                                    style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                                    value={userTransaction}\n                                    onChange={(e) => { setUserTransaction(e.target.value) }}\n                                />\n                            </div> */}\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSalesAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SalesDevAgent;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1763, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/SolarRepAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\n\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { validateEmail } from \"@/utilities/validateEmail\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/navigation\";\n\ntype SolarRepAgentSignUpProps = {\n  handleSolarAgentBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst SolarRepAgentSignUp: React.FC<SolarRepAgentSignUpProps> = ({\n  handleSolarAgentBack,\n}) => {\n  const router = useRouter();\n\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [market, setMarket] = useState<string>(\"\");\n  const [companyName, setCompanyName] = useState<string>(\"\");\n  const [installationVolume, setInstallationVolume] = useState<string>(\"\");\n  const [primaryClientType, setPrimaryClientType] = useState<string[]>([]);\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const primaryClientTypes = [\n    { title: \"Residential\" },\n    { title: \"Commercial\" },\n    { title: \"Industrial\" },\n    { title: \"Other\" },\n  ];\n\n    const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response = await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n  };\n\n  const handleSelectClientType = (item: { title: string }) => {\n    if (primaryClientType.includes(item.title)) {\n      setPrimaryClientType(primaryClientType.filter((t) => t !== item.title));\n    } else {\n      setPrimaryClientType([...primaryClientType, item.title]);\n    }\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  useEffect(() => {\n    if (\n      market.trim() !== \"\" &&\n      companyName.trim() !== \"\" &&\n      installationVolume.trim() !== \"\" &&\n      primaryClientType.length > 0\n    ) {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [market, companyName, installationVolume, primaryClientType]);\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              className=\"border outline-none bg-white\"\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Market */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Market Territory (City / State)\n          </div>\n          <input\n            placeholder=\"City / State\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={market}\n            onChange={(e) => setMarket(e.target.value)}\n          />\n\n          {/* Company */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Company Name\n          </div>\n          <input\n            placeholder=\"Company Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={companyName}\n            onChange={(e) => setCompanyName(e.target.value)}\n          />\n\n          {/* Installation Volume */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Installation Volume (Monthly / Yearly)\n          </div>\n          <input\n            placeholder=\"Installation Volume\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={installationVolume}\n            onChange={(e) => setInstallationVolume(e.target.value)}\n          />\n\n          {/* Primary Client Types */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Primary Client Types\n          </div>\n          <div className=\"flex flex-wrap items-center gap-4\" style={{ marginTop: \"8px\" }}>\n            {primaryClientTypes.map((item, index) => (\n              <div key={index}>\n                <button\n                  onClick={() => handleSelectClientType(item)}\n                  className=\"border border-[#00000010] rounded px-4 h-[70px] outline-none focus:outline-none focus:ring-0 w-auto\"\n                  style={{\n                    ...styles.inputStyle,\n                    borderRadius: \"30px\",\n                    whiteSpace: \"nowrap\",\n                    border: primaryClientType.includes(item.title) ? \"2px solid #7902DF\" : \"\",\n                    backgroundColor: primaryClientType.includes(item.title) ? \"#402FFF20\" : \"\",\n                  }}\n                >\n                  {item.title}\n                </button>\n              </div>\n            ))}\n          </div>\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => (verifyInputRef.current[index] = el!)}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SolarRepAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2549, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/MarketerAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport SnackMessages from \"@/components/onboarding/services/AuthVerification/SnackMessages\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { validateEmail } from \"@/utilities/validateEmail\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/navigation\";\n\ntype MarketerAgentSignUpProps = {\n  handleMarketerAgentBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst MarketerAgentSignUp: React.FC<MarketerAgentSignUpProps> = ({\n  handleMarketerAgentBack,\n}) => {\n  const router = useRouter();\n\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [companyName, setCompanyName] = useState<string>(\"\");\n  const [servicesOffered, setServicesOffered] = useState<string[]>([]);\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const servicesOptions = [\n    { title: \"Social Media Marketing\" },\n    { title: \"SEO / SEM\" },\n    { title: \"Email Marketing\" },\n    { title: \"Content Creation\" },\n    { title: \"Paid Ads\" },\n    { title: \"Other\" },\n  ];\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response = await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n  };\n\n  const handleSelectService = (item: { title: string }) => {\n    if (servicesOffered.includes(item.title)) {\n      setServicesOffered(servicesOffered.filter((t) => t !== item.title));\n    } else {\n      setServicesOffered([...servicesOffered, item.title]);\n    }\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  useEffect(() => {\n    if (companyName.trim() !== \"\" && servicesOffered.length > 0) {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [companyName, servicesOffered]);\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              className=\"border outline-none bg-white\"\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Company Name */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Company Name\n          </div>\n          <input\n            placeholder=\"Company Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={companyName}\n            onChange={(e) => setCompanyName(e.target.value)}\n          />\n\n          {/* Services Offered */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Services You Offer\n          </div>\n          <div className=\"flex flex-wrap items-center gap-4\" style={{ marginTop: \"8px\" }}>\n            {servicesOptions.map((item, index) => (\n              <div key={index}>\n                <button\n                  onClick={() => handleSelectService(item)}\n                  className=\"border border-[#00000010] rounded px-4 h-[70px] outline-none focus:outline-none focus:ring-0 w-auto\"\n                  style={{\n                    ...styles.inputStyle,\n                    borderRadius: \"30px\",\n                    whiteSpace: \"nowrap\",\n                    border: servicesOffered.includes(item.title) ? \"2px solid #7902DF\" : \"\",\n                    backgroundColor: servicesOffered.includes(item.title) ? \"#402FFF20\" : \"\",\n                  }}\n                >\n                  {item.title}\n                </button>\n              </div>\n            ))}\n          </div>\n\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => (verifyInputRef.current[index] = el!)}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleMarketerAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketerAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3291, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/WebOwnersAgentSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { isValidUrl, PersistanceKeys } from \"@/constants/Constants\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst WebOwnersAgentSignUp = ({\n  handleContinue,\n  handleWebsiteAgentBack,\n  length = 6,\n  onComplete,\n  handleWaitList,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //web url\n  const [websiteUrl, setWebsiteUrl] = useState(\"\");\n  const [urlError, setUrlError] = useState(false);\n  const [urlErrorMessage, setUrlErrorMessage] = useState(\"\");\n\n  //get location\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  // Function to get the user's location and set the country code\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      websiteUrl &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !websiteUrl ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    websiteUrl,\n    checkPhoneResponse,\n    emailCheckResponse,\n  ]);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for url validation\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      //console.log);\n      if (websiteUrl) {\n        if (isValidUrl(websiteUrl)) {\n          setUrlError(true);\n          setErrMessage(\"\");\n          //console.log;\n        } else {\n          setUrlErrorMessage(\"Invalid\");\n          setUrlError(false);\n        }\n      }\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [websiteUrl]);\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      // formData.append(\"farm\", userFarm);\n      // formData.append(\"brokerage\", userBrokage);\n      // formData.append(\"averageTransactionPerYear\", userTransaction);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"website\", websiteUrl);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          localStorage.removeItem(PersistanceKeys.RegisterDetails);\n          // localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n          //set cokie on locastorage to run middle ware\n          // document.cookie = `User=${encodeURIComponent(\n          //   JSON.stringify(response.data.data)\n          // )}; path=/; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n\n          //check for document undefined issue\n\n          // if (typeof document !== \"undefined\") {\n          //     document.cookie = `User=${encodeURIComponent(\n          //         JSON.stringify(response.data.data)\n          //     )}; path=/; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n          // }\n\n          handleWaitList();\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82vh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-8/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Website (URL)\n              </div>\n              <div>\n                {urlErrorMessage && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: \"red\",\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {urlErrorMessage}\n                  </p>\n                )}\n              </div>\n\n              <input\n                placeholder=\"URL\"\n                className=\"border border-[#00000010] rounded p-3 outline-none mb-2 focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={websiteUrl}\n                onChange={(e) => {\n                  setWebsiteUrl(e.target.value);\n                  setUrlError(false);\n                  setUrlErrorMessage(\"\");\n                }}\n              />\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleWebsiteAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WebOwnersAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4352, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/RecruiterAgentSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst RecruiterAgentSignUp = ({\n  handleContinue,\n  handleRecruiterAgentBack,\n  length = 6,\n  onComplete,\n  handleWaitList,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code for servie customers\n  const [ServiceCustomer, setServiceCustomer] = useState(\"\");\n\n  //get location\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  // Function to get the user's location and set the country code\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      ServiceCustomer &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !ServiceCustomer ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    ServiceCustomer,\n  ]);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    // handleWaitList();\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"areaOfService\", ServiceCustomer);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            // handleContinue();\n            router.push(\"/createagent\");\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-8/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate or serve customers\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={ServiceCustomer}\n                onChange={(e) => {\n                  setServiceCustomer(e.target.value);\n                }}\n              />\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleRecruiterAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecruiterAgentSignUp;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AACA,qEAAqE;AAErE,MAAM,uBAAuB,CAAC,EAC5B,cAAc,EACd,wBAAwB,EACxB,SAAS,CAAC,EACV,UAAU,EACV,cAAc,EACf;;IACC,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE,EAAE;IAChC,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAExB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,IAAI,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IACxC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,6DAA6D;IAC7D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,6BAA6B;IAC7B,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,2BAA2B,6BAA6B,GAC7D,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACX,0BAA0B;IAC1B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,QAAQ,IAAI,CAAC;IAChE,0BAA0B;IAC1B,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,iCAAiC;IACjC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,2BAA2B;IAC3B,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,cAAc;IACd,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACR,IAAI,MAAM,CAAA,GAAA,qKAAA,CAAA,mBAAgB,AAAD;YACzB,eAAe;QACjB;yCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACR,IAAI,aAAa,aAAa,OAAO,CAAC,yHAAA,CAAA,kBAAe,CAAC,eAAe;YACrE,IAAI,YAAY;gBACd,IAAI,OAAO,KAAK,KAAK,CAAC;gBACtB,YAAY;YACd;QACF;yCAAG,EAAE;IAEL,+DAA+D;IAC/D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACR,IACE,YACA,aACA,mBACA,mBACA,oBAAoB,WAAW,QAC/B,oBAAoB,WAAW,MAC/B;gBACA,kBAAkB;YACpB,OAAO,IACL,CAAC,YACD,CAAC,aACD,CAAC,mBACD,CAAC,mBACD,oBAAoB,WAAW,SAC/B,oBAAoB,WAAW,OAC/B;gBACA,kBAAkB;YACpB;QACF;yCAAG;QACD;QACA;QACA;QACA;QACA;QACA;KACD;IAED,2CAA2C;IAC3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACR,IAAI,mBAAmB,eAAe,OAAO,CAAC,EAAE,EAAE;gBAChD,eAAe,OAAO,CAAC,EAAE,CAAC,KAAK;YACjC;QACF;yCAAG;QAAC;KAAgB;IAEpB,4CAA4C;IAC5C,MAAM,0BAA0B,CAAC;QAC/B,mBAAmB;QACnB,oBAAoB;QAEpB,IAAI,CAAC,OAAO;YACV,gBAAgB;QAClB;IACF;IAEA,oCAAoC;IACpC,MAAM,sBAAsB,CAAC;QAC3B,sEAAsE;QACtE,sEAAsE;QACtE,MAAM,eAAe,CAAA,GAAA,+OAAA,CAAA,6BAA0B,AAAD,EAC5C,CAAC,CAAC,EAAE,aAAa,EACjB,aAAa;QAEf,uGAAuG;QACvG,IAAI,CAAC,gBAAgB,CAAC,aAAa,OAAO,IAAI;YAC5C,gBAAgB;QAClB,OAAO;YACL,gBAAgB;YAEhB,IAAI,SAAS,OAAO,EAAE;gBACpB,aAAa,SAAS,OAAO;YAC/B;YAEA,+BAA+B;YAC/B,iBAAiB;YAEjB,SAAS,OAAO,GAAG,WAAW;gBAC5B,iBAAiB;YACjB,iBAAiB;YACnB,GAAG;QACL;IACF;IAEA,2BAA2B;IAC3B,MAAM,gBAAgB,CAAC;QACrB,MAAM,eAAe;QAErB,8DAA8D;QAC9D,IAAI,OAAO,IAAI,CAAC,QAAQ;YACtB,OAAO;QACT;QAEA,8CAA8C;QAC9C,OAAO,aAAa,IAAI,CAAC;IAC3B;IAEA,8BAA8B;IAE9B,MAAM,oBAAoB;QACxB,IAAI;YACF,kBAAkB;YAClB,IAAI,WAAW,MAAM,CAAA,GAAA,0KAAA,CAAA,UAAoB,AAAD,EAAE,iBAAiB;YAC3D,YAAY;YACZ,aAAa;QACb,iBAAiB;QACnB,EAAE,OAAO,OAAO;QACd,yCAAyC;QAC3C,SAAU;YACR,kBAAkB;QACpB;QACA,mBAAmB;QACnB,WAAW;YACT,IAAI,eAAe,OAAO,CAAC,EAAE,EAAE;gBAC7B,eAAe,OAAO,CAAC,EAAE,CAAC,KAAK;YACjC;QACF,GAAG,MAAM,iDAAiD;IAC5D;IAEA,MAAM,cAAc;QAClB,mBAAmB;IACrB;IAEA,uCAAuC;IAEvC,MAAM,0BAA0B,CAAC,GAAG;QAClC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAC1B,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,UAAU,IAAI,QAAQ,2BAA2B;QAE7E,MAAM,YAAY;eAAI;SAAW;QACjC,SAAS,CAAC,MAAM,GAAG;QACnB,cAAc;QAEd,sDAAsD;QACtD,IAAI,SAAS,QAAQ,SAAS,GAAG;YAC/B,eAAe,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK;QACzC;QAEA,uDAAuD;QACvD,IAAI,UAAU,KAAK,CAAC,CAAC,MAAQ,QAAQ,OAAO,YAAY;YACtD,WAAW,UAAU,IAAI,CAAC,MAAM,wCAAwC;QAC1E;IACF;IAEA,MAAM,kBAAkB,CAAC,GAAG;QAC1B,IAAI,EAAE,GAAG,KAAK,aAAa;YACzB,IAAI,UAAU,CAAC,MAAM,KAAK,MAAM,QAAQ,GAAG;gBACzC,eAAe,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK;YACzC;YACA,MAAM,YAAY;mBAAI;aAAW;YACjC,SAAS,CAAC,MAAM,GAAG;YACnB,cAAc;QAChB;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,MAAM,aAAa,EAAE,aAAa,CAAC,OAAO,CAAC,QAAQ,KAAK,CAAC,GAAG;QAC5D,MAAM,YAAY,WACf,KAAK,CAAC,IACN,GAAG,CAAC,CAAC,OAAU,QAAQ,IAAI,CAAC,QAAQ,OAAO;QAC9C,cAAc;QAEd,iEAAiE;QACjE,UAAU,OAAO,CAAC,CAAC,MAAM;YACvB,eAAe,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG;YACtC,IAAI,UAAU,UAAU,MAAM,GAAG,GAAG;gBAClC,eAAe,OAAO,CAAC,MAAM,CAAC,KAAK;YACrC;QACF;QAEA,IAAI,UAAU,KAAK,CAAC,CAAC,MAAQ,QAAQ,OAAO,YAAY;YACtD,WAAW,UAAU,IAAI,CAAC;QAC5B;IACF;IAEA,8BAA8B;IAC9B,MAAM,mBAAmB;QACvB,kBAAkB;QAClB,6BAA6B;QAC7B,oBAAoB;QACpB;IACF;IAEA,2BAA2B;IAC3B,MAAM,iBAAiB;QACrB,IAAI;YACF,kBAAkB;YAElB,IAAI,aAAa,SAAS,aAAa;YAEvC,MAAM,WAAW,IAAI;YACrB,MAAM,UAAU,6HAAA,CAAA,UAAI,CAAC,QAAQ;YAC7B,IAAI,YAAY,CAAA,GAAA,2HAAA,CAAA,+BAA4B,AAAD,EAAE;YAC7C,IAAI,WAAW;gBACb,SAAS,MAAM,CAAC,cAAc;YAChC;YACA,mCAAmC;YACnC,SAAS,MAAM,CAAC,QAAQ;YACxB,SAAS,MAAM,CAAC,SAAS;YACzB,SAAS,MAAM,CAAC,SAAS;YACzB,SAAS,MAAM,CAAC,gBAAgB,KAAK,SAAS,CAAC,SAAS,SAAS;YACjE,SAAS,MAAM,CAAC,eAAe,KAAK,SAAS,CAAC,SAAS,WAAW;YAClE,SAAS,MAAM,CAAC,YAAY;YAC5B,SAAS,MAAM,CAAC,iBAAiB;YACjC,SAAS,MAAM,CAAC,SAAS;YACzB,SAAS,MAAM,CAAC,oBAAoB,WAAW,IAAI,CAAC;YACpD,SAAS,MAAM,CACb,YACA,KAAK,cAAc,GAAG,eAAe,GAAG,QAAQ;YAGlD,iBAAiB;YACjB,KAAK,IAAI,CAAC,KAAK,MAAM,IAAI,SAAS,OAAO,GAAI;YAC3C,iBAAiB;YACnB;YAEA,SAAS;YACT,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS;YAC3C,IAAI,UAAU;gBACZ,YAAY,SAAS,IAAI;gBACzB,aAAa;gBACb,iBAAiB;gBACjB,IAAI,SAAS,IAAI,CAAC,MAAM,KAAK,MAAM;oBACjC,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,SAAS,IAAI,CAAC,IAAI;oBAE9D,IAAI,OAAO,aAAa,aAAa;wBACnC,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD,EAAE,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;oBACrC;oBAEA,IAAI,cAAc;oBAClB,wCAAmC;wBACjC,cAAc,OAAO,UAAU,EAAE,2BAA2B;oBAC9D;oBACA,MAAM,iBAAiB,KAAK,8CAA8C;oBAE1E,IAAI,eAAe,gBAAgB;wBACjC,iBAAiB;oBACjB,iBAAiB;oBACnB,OAAO;wBACL,iBAAiB;wBACjB,oBAAoB;wBACpB,OAAO,IAAI,CAAC;oBAEZ,0BAA0B;oBAC5B;gBACF;YACF;QACF,EAAE,OAAO,OAAO;QACd,8DAA8D;QAChE,SAAU;YACR,kBAAkB;QACpB;IACF;IAEA,+BAA+B;IAE/B,MAAM,aAAa,OAAO;QACxB,IAAI;YACF,cAAc;YACd,eAAe;YAEf,MAAM,UAAU,6HAAA,CAAA,UAAI,CAAC,UAAU;YAE/B,MAAM,UAAU;gBACd,OAAO;YACT;YAEA,iBAAiB;YAEjB,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS,SAAS;gBAClD,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,IAAI,UAAU;gBACZ,iBAAiB;gBACjB,IAAI,SAAS,IAAI,CAAC,MAAM,KAAK,MAAM;oBACjC,iBAAiB;oBACjB,sBAAsB,SAAS,IAAI;gBACrC,OAAO;oBACL,sBAAsB,SAAS,IAAI;gBACrC;YACF;QACF,EAAE,OAAO,OAAO;QACd,iEAAiE;QACnE,SAAU;YACR,eAAe;QACjB;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,IAAI;YACF,qBAAqB;YACrB,MAAM,UAAU,6HAAA,CAAA,UAAI,CAAC,UAAU;YAE/B,MAAM,UAAU;gBACd,OAAO;YACT;YAEA,iBAAiB;YAEjB,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS,SAAS;gBAClD,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,IAAI,UAAU;gBACZ,iBAAiB;gBACjB,IAAI,SAAS,IAAI,CAAC,MAAM,KAAK,MAAM;oBACjC,iBAAiB;oBACjB,sBAAsB,SAAS,IAAI;gBACrC,OAAO;oBACL,sBAAsB,SAAS,IAAI;gBACrC;YACF;QACF,EAAE,OAAO,OAAO;QACd,iEAAiE;QACnE,SAAU;YACR,qBAAqB;QACvB;IACF;IAEA,MAAM,SAAS;QACb,cAAc;YACZ,UAAU;YACV,YAAY;QACd;QACA,YAAY;YACV,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QACA,QAAQ;YACN,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QACA,aAAa;YACX,QAAQ;YACR,SAAS;YACT,QAAQ;YACR,IAAI;YACJ,IAAI;YACJ,WAAW;YACX,cAAc;YACd,QAAQ;YACR,SAAS;QACX;IACF;IAEA,qBACE,6LAAC;QACC,OAAO;YAAE,OAAO;QAAO;QACvB,WAAU;kBAEV,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,sIAAA,CAAA,UAAM;;;;;;;;;;sCAGT,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,WAAW;oCAAS;8CAC9B;;;;;;8CAGD,6LAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,gBAAgB;oCAAO;;sDAEhC,6LAAC;4CAAI,OAAO,OAAO,YAAY;sDAAG,CAAC,qBAAqB,CAAC;;;;;;sDACzD,6LAAC;4CACC,aAAY;4CACZ,WAAU;4CACV,OAAO;gDAAE,GAAG,OAAO,UAAU;gDAAE,WAAW;4CAAM;4CAChD,OAAO;4CACP,UAAU,CAAC;gDACT,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gDAC5B,MAAM,gBAAgB,MACnB,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,OAAS,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACxD,IAAI,CAAC;gDAER,kCAAkC;gDAClC,wBAAwB;gDACxB,qBAAqB;gDACrB,4HAA4H;gDAC5H,gCAAgC;gDAEhC,YAAY;4CACd;;;;;;sDAGF,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,OAAO,OAAO,YAAY;8DAC5B,CAAC,yBAAyB,CAAC;;;;;;8DAE9B,6LAAC;;wDACE,4BACC,6LAAC;4DAAE,OAAO;gEAAE,GAAG,OAAO,MAAM;gEAAE,OAAO;4DAAQ;sEAAG;;;;;iFAIhD,6LAAC;sEACE,mCACC,6LAAC;gEACC,OAAO;oEACL,GAAG,OAAO,MAAM;oEAChB,OACE,mBAAmB,MAAM,KAAK,OAC1B,UACA;gEACR;0EAEC,mBAAmB,OAAO,CACxB,KAAK,CAAC,GAAG,GACT,WAAW,KACZ,mBAAmB,OAAO,CAAC,KAAK,CAAC;;;;;qFAGrC,6LAAC;;;;;;;;;;sEAIP,6LAAC;4DAAI,OAAO;gEAAE,GAAG,OAAO,MAAM;gEAAE,OAAO;4DAAM;sEAC1C;;;;;;;;;;;;;;;;;;sDAKP,6LAAC;4CACC,aAAY;4CACZ,WAAU;4CACV,OAAO;gDAAE,GAAG,OAAO,UAAU;gDAAE,WAAW;4CAAM;4CAChD,OAAO;4CACP,UAAU,CAAC;gDACT,IAAI,QAAQ,EAAE,MAAM,CAAC,KAAK;gDAC1B,aAAa;gDAEb,eAAe;gDACf,qCAAqC;gDACrC,yBAAyB;gDACzB,sBAAsB;gDACtB,cAAc;gDACd,wCAAwC;gDACxC,WAAW;gDACX,iCAAiC;gDACjC,IAAI;gDAEJ,IAAI,SAAS,OAAO,EAAE;oDACpB,aAAa,SAAS,OAAO;gDAC/B;gDAEA,sBAAsB;gDAEtB,IAAI,CAAC,OAAO;oDACV,iBAAiB;oDACjB,cAAc;oDACd;gDACF;gDAEA,IAAI,CAAC,cAAc,QAAQ;oDACzB,iBAAiB;oDACjB,cAAc;gDAChB,OAAO;oDACL,iBAAiB;oDACjB,IAAI,OAAO;wDACT,oBAAoB;wDACpB,SAAS,OAAO,GAAG,WAAW;4DAC5B,WAAW;wDACb,GAAG;oDACL,OAAO;wDACL,yCAAyC;wDACzC,sBAAsB;wDACtB,cAAc;oDAChB;gDACF;4CACF;;;;;;sDAGF,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,OAAO,OAAO,YAAY;8DAC5B,CAAC,wBAAwB,CAAC;;;;;;8DAG7B,6LAAC;;wDACE,gCACC,6LAAC;4DACC,WAAU;4DACV,OAAO;gEAAE,GAAG,OAAO,MAAM;gEAAE,QAAQ;4DAAO;sEAC3C;;;;;;wDAIF,6BACC,6LAAC;4DACC,OAAO;gEACL,GAAG,OAAO,MAAM;gEAChB,OAAO,gBAAgB;gEACvB,QAAQ;4DACV;sEAEC;;;;;iFAGH,6LAAC;sEACE,kCACC,6LAAC;gEACC,OAAO;oEACL,GAAG,OAAO,MAAM;oEAChB,OAAO;oEACP,QAAQ;gEACV;0EACD;;;;;qFAID,6LAAC;0EACE,mCACC,6LAAC;oEACC,OAAO;wEACL,GAAG,OAAO,MAAM;wEAChB,OACE,mBAAmB,MAAM,KAAK,OAC1B,UACA;wEACN,QAAQ;oEACV;8EAEC,mBAAmB,OAAO,CACxB,KAAK,CAAC,GAAG,GACT,WAAW,KACZ,mBAAmB,OAAO,CAAC,KAAK,CAAC;;;;;yFAGrC,6LAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;sDASf,6LAAC;4CAAI,OAAO;gDAAE,WAAW;4CAAM;sDAC7B,cAAA,6LAAC,6JAAA,CAAA,UAAU;gDACT,WAAU;gDAC5B,SAAS;gDACW,eAAe;oDAAC;iDAAK;gDACrB,iBAAiB;gDACjB,qBAAqB;gDACrB,oBAAoB;gDAAwB,OAAO;gDACrD,UAAU;gDACV,aACE,iBACI,yBACA;gDAEN,UAAU;gDACV,OAAO;oDAAE,cAAc;gDAAM;gDAC7B,YAAY;oDACV,OAAO;oDACP,aAAa;oDACb,iBAAiB;oDACjB,aAAa;oDACb,YAAY;oDACZ,eAAe;gDACjB;gDACA,aAAa;oDACX,QAAQ;oDACR,iBAAiB;gDAInB;gDACA,eAAe;oDACb,WAAW;oDACX,WAAW;gDACb;gDACA,aAAa,UAAU,eAAe;;;;;;;;;;;sDAI1C,6LAAC;4CAAI,OAAO,OAAO,YAAY;4CAAE,WAAU;sDAAO;;;;;;sDAGlD,6LAAC;4CACC,aAAY;4CACZ,WAAU;4CACV,OAAO;gDAAE,GAAG,OAAO,UAAU;gDAAE,WAAW;4CAAM;4CAChD,OAAO;4CACP,UAAU,CAAC;gDACT,mBAAmB,EAAE,MAAM,CAAC,KAAK;4CACnC;;;;;;sDAGF,6LAAC,iMAAA,CAAA,QAAK;4CACJ,MAAM;4CACN,2CAA2C;4CAC3C,oBAAoB;4CACpB,eAAe;gDACb,SAAS;gDACT,IAAI;oDACF,iBAAiB;gDAEnB;4CACF;sDAEA,cAAA,6LAAC,2LAAA,CAAA,MAAG;gDACF,WAAU;gDACV,IAAI,OAAO,WAAW;0DAEtB,cAAA,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDACC,WAAU;wDACV,OAAO;4DACL,iBAAiB;4DACjB,SAAS;4DACT,cAAc;wDAChB;;0EAEA,6LAAC;gEAAI,WAAU;0EACb,cAAA,6LAAC;oEAAO,SAAS;8EACf,cAAA,6LAAC,gIAAA,CAAA,UAAK;wEACJ,KAAK;wEACL,QAAQ;wEACR,OAAO;wEACP,KAAI;;;;;;;;;;;;;;;;0EAIV,6LAAC;gEACC,OAAO;oEACL,UAAU;oEACV,YAAY;gEACd;0EACD;;;;;;0EAGD,6LAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,GAAG,OAAO,UAAU;oEAAE,OAAO;gEAAY;;oEACnD;oEAEE,gBAAgB,KAAK,CAAC,CAAC;oEAAG;;;;;;;0EAG7B,6LAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,SAAS;oEAAQ,KAAK;gEAAM;0EAEpC,MAAM,IAAI,CAAC;oEAAE;gEAAO,GAAG,GAAG,CAAC,CAAC,GAAG,sBAC9B,6LAAC;wEAEC,KAAK,CAAC,KAAQ,eAAe,OAAO,CAAC,MAAM,GAAG;wEAC9C,cAAc;wEACd,MAAK;wEACL,WAAU;wEACV,WAAU;wEACV,OAAO,UAAU,CAAC,MAAM;wEACxB,UAAU,CAAC,IAAM,wBAAwB,GAAG;wEAC5C,WAAW,CAAC,IAAM,gBAAgB,GAAG;wEACrC,SAAS,CAAC;4EACR,8DAA8D;4EAC9D,IACE,EAAE,GAAG,KAAK,WACV,WAAW,KAAK,CAAC,CAAC,QAAU,MAAM,IAAI,OAAO,KAC7C;gFACA;4EACF;wEACF;wEACA,SAAS;wEACT,aAAY;wEACZ,OAAO;4EACL,OAAO;4EACP,QAAQ;4EACR,WAAW;4EACX,UAAU;4EACV,QAAQ;4EACR,cAAc;wEAChB;wEACA,WAAU;uEA5BL;;;;;;;;;;0EAgCX,6LAAC;gEACC,WAAU;gEACV,OAAO,OAAO,UAAU;;oEAEvB,CAAC,oBAAoB,CAAC;oEACtB,+BACC,6LAAC,kOAAA,CAAA,mBAAgB;wEAAC,MAAM;;;;;6FAExB,6LAAC;wEACC,WAAU;wEACV,SAAS;kFACV;;;;;;;;;;;;4DAKJ,+BACC,6LAAC;gEAAI,WAAU;0EACb,cAAA,6LAAC,kOAAA,CAAA,mBAAgB;oEAAC,MAAM;;;;;;;;;;qFAG1B,6LAAC;gEACC,WAAU;gEACV,OAAO;oEAAE,QAAQ;gEAAO;gEACxB,SAAS;0EACV;;;;;;;;;;;;;;;;;;;;;;;;;;;sDASX,6LAAC,6KAAA,CAAA,UAAa;4CACZ,SAAS,SAAS,OAAO;4CACzB,WAAW;4CACX,cAAc,CAAC;gDACb,aAAa;4CACf;4CACA,SAAS,SAAS,MAAM;;;;;;;;;;;;;;;;;;;;;;;;8BAMhC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;sCACC,cAAA,6LAAC,2IAAA,CAAA,UAAW;gCAAC,OAAO;;;;;;;;;;;sCAGtB,6LAAC,sIAAA,CAAA,UAAM;4BACL,gBAAgB;4BAChB,YAAY;4BACZ,gBAAgB;4BAChB,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;AAM5B;GApyBM;;QAcW,qIAAA,CAAA,YAAS;;;KAdpB;uCAsyBS","debugId":null}},
    {"offset": {"line": 5370, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/TaxAgentSignUp.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport { Box, Modal, CircularProgress } from \"@mui/material\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport SnackMessages from \"@/components/onboarding/services/AuthVerification/SnackMessages\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { validateEmail } from \"@/utilities/validateEmail\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\n\ntype TaxAgentSignUpProps = {\n  handleTaxAgentBack: () => void;\n};\n\ntype EmailCheckResponse = {\n  status: boolean;\n  message: string;\n};\n\nconst TaxAgentSignUp: React.FC<TaxAgentSignUpProps> = ({ handleTaxAgentBack }) => {\n  const [userName, setUserName] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [userPhoneNumber, setUserPhoneNumber] = useState<string>(\"\");\n  const [companyName, setCompanyName] = useState<string>(\"\");\n  const [servicesOffered, setServicesOffered] = useState<string[]>([]);\n\n  const [emailLoader, setEmailLoader] = useState<boolean>(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState<EmailCheckResponse | null>(null);\n  const [validEmail, setValidEmail] = useState<string>(\"\");\n\n  const [locationLoader, setLocationLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState<boolean>(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState<EmailCheckResponse | null>(null);\n\n  const [showVerifyPopup, setShowVerifyPopup] = useState<boolean>(false);\n  const [VerifyCode, setVerifyCode] = useState<string[]>(Array(6).fill(\"\"));\n  const verifyInputRef = useRef<HTMLInputElement[]>([]);\n  const length = 6;\n\n  const [sendcodeLoader, setSendcodeLoader] = useState<boolean>(false);\n  const [registerLoader, setRegisterLoader] = useState<boolean>(false);\n\n  const [shouldContinue, setShouldContinue] = useState<boolean>(true);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [response, setResponse] = useState<{ status: boolean; message: string }>({\n    status: false,\n    message: \"\",\n  });\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const servicesOptions = [\n    { title: \"Individual Tax Preparation\" },\n    { title: \"Business Tax Preparation\" },\n    { title: \"Tax Planning & Consulting\" },\n    { title: \"Bookkeeping & Accounting\" },\n    { title: \"Payroll Services\" },\n    { title: \"Other\" },\n  ];\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 15,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  const checkEmail = async (email: string) => {\n    setEmailLoader(true);\n    try {\n      const response : any = await axios.post(Apis.CheckEmail, { email });\n      if (response?.data) {\n        setEmailCheckResponse({\n          status: response.data.status,\n          message: response.data.message,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    setUserPhoneNumber(value);\n    // Optionally: add debounce + phone validation logic here\n  };\n\n  const handleSelectService = (item: { title: string }) => {\n    if (servicesOffered.includes(item.title)) {\n      setServicesOffered(servicesOffered.filter((t) => t !== item.title));\n    } else {\n      setServicesOffered([...servicesOffered, item.title]);\n    }\n  };\n\n  const handleVerifyPopup = () => {\n    setShowVerifyPopup(true);\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  useEffect(() => {\n    if (servicesOffered.length > 0) {\n      setShouldContinue(false);\n    } else {\n      setShouldContinue(true);\n    }\n  }, [servicesOffered]);\n  return (\n    <div className=\"flex flex-row w-full justify-center h-[100svh]\">\n      <div className=\"w-full flex flex-col items-center px-4 h-[90%]\">\n        <div className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\" style={{ textAlign: \"center\" }}>\n          Your Contact Information\n        </div>\n\n        <div\n          className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n          style={{ scrollbarWidth: \"none\" }}\n        >\n          {/* Name */}\n          <div style={styles.headingStyle}>What's your full name</div>\n          <input\n            placeholder=\"Name\"\n            className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userName}\n            onChange={(e) => {\n              const input = e.target.value;\n              const formattedName = input\n                .split(\" \")\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(\" \");\n              setUserName(formattedName);\n            }}\n          />\n\n          {/* Email */}\n          <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n            <div style={styles.headingStyle}>What's your email address</div>\n            <div>\n              {emailLoader ? (\n                <p style={{ ...styles.errmsg, color: \"black\" }}>Checking ...</p>\n              ) : (\n                emailCheckResponse && (\n                  <p\n                    style={{\n                      ...styles.errmsg,\n                      color: emailCheckResponse.status ? \"green\" : \"red\",\n                    }}\n                  >\n                    {emailCheckResponse.message.charAt(0).toUpperCase() + emailCheckResponse.message.slice(1)}\n                  </p>\n                )\n              )}\n              <div style={{ ...styles.errmsg, color: \"red\" }}>{validEmail}</div>\n            </div>\n          </div>\n\n          <input\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={userEmail}\n            type=\"text\"\n            placeholder=\"Email address\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setUserEmail(value);\n\n              if (timerRef.current) clearTimeout(timerRef.current);\n              setEmailCheckResponse(null);\n\n              if (!value) {\n                setValidEmail(\"\");\n                return;\n              }\n\n              if (!validateEmail(value)) {\n                setValidEmail(\"Invalid\");\n              } else {\n                timerRef.current = setTimeout(() => {\n                  checkEmail(value);\n                }, 300);\n              }\n            }}\n            onFocus={(e) => e.target.setAttribute(\"autocomplete\", \"off\")}\n          />\n\n          {/* Phone */}\n          <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n            <div style={styles.headingStyle}>What's your phone number</div>\n            <div>\n              {locationLoader && (\n                <p className=\"text-purple\" style={{ ...styles.errmsg, height: \"20px\" }}>\n                  Getting location ...\n                </p>\n              )}\n              {errorMessage ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {errorMessage}\n                </p>\n              ) : phoneNumberLoader ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: \"black\",\n                    height: \"20px\",\n                  }}\n                >\n                  Checking ...\n                </p>\n              ) : checkPhoneResponse ? (\n                <p\n                  style={{\n                    ...styles.errmsg,\n                    color: checkPhoneResponse.status ? \"green\" : \"red\",\n                    height: \"20px\",\n                  }}\n                >\n                  {checkPhoneResponse.message.charAt(0).toUpperCase() + checkPhoneResponse.message.slice(1)}\n                </p>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <PhoneInput\n              className=\"border outline-none bg-white\"\n              country={\"us\"}\n              onlyCountries={[\"us\"]}\n              disableDropdown={true}\n              countryCodeEditable={false}\n              value={userPhoneNumber}\n              onChange={handlePhoneNumberChange}\n              placeholder={locationLoader ? \"Loading location ...\" : \"Enter Phone Number\"}\n              inputStyle={{\n                width: \"100%\",\n                borderWidth: \"0px\",\n                backgroundColor: \"transparent\",\n                paddingLeft: \"60px\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n              }}\n              buttonStyle={{\n                border: \"none\",\n                backgroundColor: \"transparent\",\n              }}\n              dropdownStyle={{\n                maxHeight: \"150px\",\n                overflowY: \"auto\",\n              }}\n            />\n          </div>\n\n          {/* Company */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Name of the company you work with, if any.\n          </div>\n          <input\n            placeholder=\"Company Name\"\n            className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n            style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n            value={companyName}\n            onChange={(e) => setCompanyName(e.target.value)}\n          />\n\n          {/* Services Offered */}\n          <div style={styles.headingStyle} className=\"mt-6\">\n            Services You Offer\n          </div>\n          <div className=\"flex flex-wrap items-center gap-4\" style={{ marginTop: \"8px\" }}>\n            {servicesOptions.map((item, index) => (\n              <div key={index}>\n                <button\n                  onClick={() => handleSelectService(item)}\n                  className=\"border border-[#00000010] rounded px-4 h-[70px] outline-none focus:outline-none focus:ring-0 w-auto\"\n                  style={{\n                    ...styles.inputStyle,\n                    borderRadius: \"30px\",\n                    whiteSpace: \"nowrap\",\n                    border: servicesOffered.includes(item.title) ? \"2px solid #7902DF\" : \"\",\n                    backgroundColor: servicesOffered.includes(item.title) ? \"#402FFF20\" : \"\",\n                  }}\n                >\n                  {item.title}\n                </button>\n              </div>\n            ))}\n          </div>\n          {/* Verification Modal */}\n          <Modal\n            open={showVerifyPopup}\n            closeAfterTransition\n            BackdropProps={{\n              timeout: 1000,\n              sx: { backgroundColor: \"#00000020\" },\n            }}\n          >\n            <Box className=\"lg:w-8/12 sm:w-full w-8/12\" sx={styles.verifyPopup}>\n              <div className=\"flex flex-row justify-center w-full\">\n                <div\n                  className=\"sm:w-7/12 w-full\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    padding: 20,\n                    borderRadius: \"13px\",\n                  }}\n                >\n                  <div className=\"flex flex-row justify-end\">\n                    <button onClick={handleClose}>\n                      <Image\n                        src={\"/assets/crossIcon.png\"}\n                        height={40}\n                        width={40}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                  <div style={{ fontSize: 26, fontWeight: \"700\" }}>\n                    Verify phone number\n                  </div>\n                  <div\n                    className=\"mt-8\"\n                    style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                  >\n                    Enter code that was sent to number ending with *{userPhoneNumber.slice(-4)}.\n                  </div>\n\n                  {/* Verification Code Input */}\n                  <div className=\"mt-8\" style={{ display: \"flex\", gap: \"8px\" }}>\n                    {Array.from({ length }).map((_, index) => (\n                      <input\n                        key={index}\n                        ref={(el) => {verifyInputRef.current[index] = el!}}\n                        type=\"tel\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={VerifyCode[index]}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (!/[0-9]/.test(value) && value !== \"\") return;\n                          const newValues = [...VerifyCode];\n                          newValues[index] = value;\n                          setVerifyCode(newValues);\n                        }}\n                        placeholder=\"-\"\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          fontSize: \"20px\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        className=\"focus:outline-none focus:ring-0\"\n                      />\n                    ))}\n                  </div>\n\n                  <div\n                    className=\"mt-8 flex flex-row items-center gap-2\"\n                    style={styles.inputStyle}\n                  >\n                    Didn't receive code?\n                    {sendcodeLoader ? (\n                      <CircularProgress size={17} />\n                    ) : (\n                      <button\n                        className=\"outline-none border-none text-purple\"\n                        onClick={handleVerifyPopup}\n                      >\n                        Resend\n                      </button>\n                    )}\n                  </div>\n\n                  {registerLoader ? (\n                    <div className=\"flex flex-row items-center justify-center mt-8\">\n                      <CircularProgress size={35} />\n                    </div>\n                  ) : (\n                    <button\n                      className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                      style={{ height: \"50px\" }}\n                      onClick={() => {\n                        // Example: handle verification submit\n                        console.log(\"Verifying code...\");\n                        setShowVerifyPopup(false);\n                      }}\n                    >\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n            </Box>\n          </Modal>\n\n          {/* Snack Message */}\n          <SnackMessages\n            message={response.message}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n            success={response.status}\n          />\n        </div>\n\n        {/* Footer */}\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleTaxAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaxAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6108, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/MedSpaAgentSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst MedSpaAgentSignUp = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"Individuals (B2)\",\n    },\n    {\n      id: 2,\n      title: \"Businesses & Corporations (B2B)\",\n    },\n    {\n      id: 3,\n      title: \"Government & Public Sector\",\n    },\n  ];\n\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      installationVolume &&\n      // projectSize &&\n      // ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !userFarm ||\n      !userBrokage ||\n      !userTransaction ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      // projectSize ||\n      // ClientType ||\n      // userTransaction ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n    installationVolume,\n    projectSize,\n    // ClientType,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      let clienttype = null;\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"firmOrCompanyAffiliation\", companyName);\n      formData.append(\"averageMonthlyClients\", installationVolume);\n      // formData.append(\"projectsPerYear\", projectSize);\n      // formData.append(\"primaryClientType\", clienttype);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            // handleContinue();\n            router.push(\"/createagent\")\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\n                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily operate?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the med spa or practice you work with, if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                How many clients do you typically see per month?\n              </div>\n              <input\n                placeholder=\"Type here\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                  setInstallationVolume(e.target.value);\n                }}\n                type=\"number\"\n              />\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MedSpaAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7222, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/LawAgentSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst LawAgentSignUp = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n  const [consultation, setConsultation] = useState(null);\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"Individuals (B2)\",\n    },\n    {\n      id: 2,\n      title: \"Businesses & Corporations (B2B)\",\n    },\n    {\n      id: 3,\n      title: \"Government & Public Sector\",\n    },\n  ];\n\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      installationVolume &&\n      // projectSize &&\n      ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true &&\n      consultation\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      !userFarm ||\n      !userBrokage ||\n      !userTransaction ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      ClientType ||\n      // userTransaction ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false ||\n      consultation\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n    installationVolume,\n    projectSize,\n    ClientType,\n    consultation,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  const handleConsultationFormat = (item) => {\n    setConsultation(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"firmOrCompanyAffiliation\", companyName);\n      formData.append(\"caseVolume\", installationVolume);\n      // formData.append(\"projectsPerYear\", projectSize);\n      formData.append(\"clientType\", ClientType);\n      formData.append(\"consultationFormat\", consultation);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            // handleContinue();\n            router.push(\"/createagent\")\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                placeholder=\"Email address\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily practice law?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the firm or legal practice you work with, if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                How many cases do you handle annually or monthly?\n              </div>\n              <input\n                type=\"number\"\n                placeholder=\"Type here\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={installationVolume}\n                onChange={(e) => {\n                  setInstallationVolume(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Client Type\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\", flexWrap: \"wrap\" }}\n              >\n                {primaryClientTypes.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleSelectClientType(item);\n                        }}\n                        className=\"border border-[#00000010] rounded px-4 py-4 outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            ClientType === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            ClientType === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Consultation Format\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\" }}\n              >\n                {ConsultationFormat.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleConsultationFormat(item);\n                        }}\n                        className=\"border border-[#00000010] rounded px-4 py-4 outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            consultation === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            consultation === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LawAgentSignUp;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8439, "column": 0}, "map": {"version":3,"sources":["file:///Users/salmanmajid/Documents/NahomProjects/NextJS%28TS%29/agentXSAAS/arslan-agentx-typescript/components/onboarding/otherAgentsSignUp/LoanOfficerSignUp.js"],"sourcesContent":["import Body from \"@/components/onboarding/Body\";\nimport Header from \"@/components/onboarding/Header\";\nimport Image from \"next/image\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ProgressBar from \"@/components/onboarding/ProgressBar\";\nimport { useRouter } from \"next/navigation\";\nimport Footer from \"@/components/onboarding/Footer\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Apis from \"@/components/apis/Apis\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Box,\n  CircularProgress,\n  Fade,\n  Modal,\n  Snackbar,\n} from \"@mui/material\";\nimport SendVerificationCode from \"../services/AuthVerification/AuthService\";\nimport SnackMessages from \"../services/AuthVerification/SnackMessages\";\nimport { getLocalLocation } from \"../services/apisServices/ApiService\";\nimport { GetCampaigneeNameIfAvailable } from \"@/utilities/UserUtility\";\nimport { PersistanceKeys } from \"@/constants/Constants\";\nimport { setCookie } from \"@/utilities/cookies\";\n// import VerificationCodeInput from '../test/VerificationCodeInput';\n\nconst LoanOfficerSignUp = ({\n  handleContinue,\n  handleWaitList,\n  handleSolarAgentBack,\n  length = 6,\n  onComplete,\n}) => {\n  const verifyInputRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const [isVisible, setIsVisible] = useState(false);\n  let [response, setResponse] = useState({});\n  const [sendcodeLoader, setSendcodeLoader] = useState(false);\n\n  const router = useRouter();\n  const [userName, setUserName] = useState(\"\");\n  const [showVerifyPopup, setShowVerifyPopup] = useState(false);\n  const [registerLoader, setRegisterLoader] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  // const [emailErr, setEmailCheckResponse] = useState(false);\n  const [userFarm, setUserFarm] = useState(\"\");\n  const [userBrokage, setUserBrokage] = useState(\"\");\n  const [userTransaction, setUserTransaction] = useState(\"\");\n  //phone number input variable\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [phoneVerifiedSuccessSnack, setPhoneVerifiedSuccessSnack] =\n    useState(false);\n  //verify code input fields\n  const [VerifyCode, setVerifyCode] = useState(Array(length).fill(\"\"));\n  //check email availability\n  const [emailLoader, setEmailLoader] = useState(false);\n  const [emailCheckResponse, setEmailCheckResponse] = useState(null);\n  const [validEmail, setValidEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, setErrMessage] = useState(null);\n  //check phone number availability\n  const [phoneNumberLoader, setPhoneNumberLoader] = useState(false);\n  const [checkPhoneResponse, setCheckPhoneResponse] = useState(null);\n  const [locationLoader, setLocationLoader] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(true);\n\n  //code to select the client type\n  const [customerService, setCustomerService] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [installationVolume, setInstallationVolume] = useState(\"\");\n  const [projectSize, setProjectSize] = useState(\"\");\n  const [ClientType, setClientType] = useState(null);\n\n  const [otherType, setOtherType] = useState(\"\");\n\n  //array for the primary client types\n  const primaryClientTypes = [\n    {\n      id: 1,\n      title: \"First-Time Homebuyers\",\n    },\n    {\n      id: 2,\n      title: \"Investors & Property Developers\",\n    },\n    {\n      id: 3,\n      title: \"Veterans & Active Military\",\n    },\n    {\n      id: 3,\n      title: \"Luxury Homebuyers\",\n    },\n    {\n      id: 5,\n      title: \"Self-Employed & Entrepreneurs\",\n    },\n    {\n      id: 6,\n      title: \"Other (type here)\",\n    },\n  ];\n  const ConsultationFormat = [\n    {\n      id: 1,\n      title: \"In-Person Consultations\",\n    },\n    {\n      id: 2,\n      title: \"Virtual Consultations\",\n    },\n    {\n      id: 3,\n      title: \"Virtual Consultationsr\",\n    },\n  ];\n\n  // Function to get the user's location and set the country code\n\n  useEffect(() => {\n    let loc = getLocalLocation();\n    setCountryCode(loc);\n  }, []);\n\n  useEffect(() => {\n    if (\n      userName &&\n      userEmail &&\n      userPhoneNumber &&\n      customerService &&\n      companyName &&\n      ClientType &&\n      emailCheckResponse?.status === true &&\n      checkPhoneResponse?.status === true\n    ) {\n      setShouldContinue(false);\n    } else if (\n      !userName ||\n      !userEmail ||\n      !userPhoneNumber ||\n      customerService ||\n      companyName ||\n      installationVolume ||\n      // projectSize ||\n      ClientType ||\n      checkPhoneResponse?.status === false ||\n      emailCheckResponse?.status === false\n    ) {\n      setShouldContinue(true);\n    }\n  }, [\n    userName,\n    userEmail,\n    userPhoneNumber,\n    checkPhoneResponse,\n    emailCheckResponse,\n    customerService,\n    companyName,\n\n    ClientType,\n  ]);\n\n  useEffect(() => {\n    let storedData = localStorage.getItem(PersistanceKeys.RegisterDetails);\n    if (storedData) {\n      let data = JSON.parse(storedData);\n      setUserData(data);\n    }\n  }, []);\n\n  //code to focus the verify code input field\n  useEffect(() => {\n    if (showVerifyPopup && verifyInputRef.current[0]) {\n      verifyInputRef.current[0].focus();\n    }\n  }, [showVerifyPopup]);\n\n  // Handle phone number change and validation\n  const handlePhoneNumberChange = (phone) => {\n    setUserPhoneNumber(phone);\n    validatePhoneNumber(phone);\n\n    if (!phone) {\n      setErrorMessage(\"\");\n    }\n  };\n\n  ///function to select client type\n  const handleSelectClientType = (item) => {\n    // //console.log;\n    setClientType(item.title);\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (phoneNumber) => {\n    // const parsedNumber = parsePhoneNumberFromString(`+${phoneNumber}`);\n    // parsePhoneNumberFromString(`+${phone}`, countryCode?.toUpperCase())\n    const parsedNumber = parsePhoneNumberFromString(\n      `+${phoneNumber}`,\n      countryCode?.toUpperCase()\n    );\n    // if (parsedNumber && parsedNumber.isValid() && parsedNumber.country === countryCode?.toUpperCase()) {\n    if (!parsedNumber || !parsedNumber.isValid()) {\n      setErrorMessage(\"Invalid\");\n    } else {\n      setErrorMessage(\"\");\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      // setCheckPhoneResponse(null);\n      // //console.log;\n\n      timerRef.current = setTimeout(() => {\n        checkPhoneNumber(phoneNumber);\n        // //console.log;\n      }, 300);\n    }\n  };\n\n  //email validation function\n  const validateEmail = (email) => {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    // Check if email contains consecutive dots, which are invalid\n    if (/\\.\\./.test(email)) {\n      return false;\n    }\n\n    // Check the general pattern for a valid email\n    return emailPattern.test(email);\n  };\n\n  //code for verify number popup\n\n  const handleVerifyPopup = async () => {\n    try {\n      setSendcodeLoader(true);\n      let response = await SendVerificationCode(userPhoneNumber, true);\n      setResponse(response);\n      setIsVisible(true);\n      // //console.log;\n    } catch (error) {\n      // console.error(\"Error occured\", error);\n    } finally {\n      setSendcodeLoader(false);\n    }\n    setShowVerifyPopup(true);\n    setTimeout(() => {\n      if (verifyInputRef.current[0]) {\n        verifyInputRef.current[0].focus();\n      }\n    }, 100); // Adjust the delay as needed, 0 should be enough\n  };\n\n  const handleClose = () => {\n    setShowVerifyPopup(false);\n  };\n\n  //code for handling verify code changes\n\n  const handleVerifyInputChange = (e, index) => {\n    const { value } = e.target;\n    if (!/[0-9]/.test(value) && value !== \"\") return; // Allow only numeric input\n\n    const newValues = [...VerifyCode];\n    newValues[index] = value;\n    setVerifyCode(newValues);\n\n    // Move focus to the next field if a number is entered\n    if (value && index < length - 1) {\n      verifyInputRef.current[index + 1].focus();\n    }\n\n    // Trigger onComplete callback if all fields are filled\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\")); // Convert array to a single string here\n    }\n  };\n\n  const handleBackspace = (e, index) => {\n    if (e.key === \"Backspace\") {\n      if (VerifyCode[index] === \"\" && index > 0) {\n        verifyInputRef.current[index - 1].focus();\n      }\n      const newValues = [...VerifyCode];\n      newValues[index] = \"\";\n      setVerifyCode(newValues);\n    }\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\").slice(0, length);\n    const newValues = pastedText\n      .split(\"\")\n      .map((char) => (/[0-9]/.test(char) ? char : \"\"));\n    setVerifyCode(newValues);\n\n    // Set each input's value and move focus to the last filled input\n    newValues.forEach((char, index) => {\n      verifyInputRef.current[index].value = char;\n      if (index === newValues.length - 1) {\n        verifyInputRef.current[index].focus();\n      }\n    });\n\n    if (newValues.every((num) => num !== \"\") && onComplete) {\n      onComplete(newValues.join(\"\"));\n    }\n  };\n\n  //code for number verification\n  const handleVerifyCode = () => {\n    // //console.log);\n    setPhoneVerifiedSuccessSnack(true);\n    handleRegister();\n  };\n\n  //code for registering user\n  const handleRegister = async () => {\n    try {\n      setRegisterLoader(true);\n\n      let agentTitle = userData.userTypeTitle;\n\n      const formData = new FormData();\n      const ApiPath = Apis.register;\n      let campainee = GetCampaigneeNameIfAvailable(window);\n      if (campainee) {\n        formData.append(\"campaignee\", campainee);\n      }\n      // const formData = new FormData();\n      formData.append(\"name\", userName);\n      formData.append(\"email\", userEmail);\n      formData.append(\"phone\", userPhoneNumber);\n      formData.append(\"agentService\", JSON.stringify(userData.serviceID));\n      formData.append(\"areaOfFocus\", JSON.stringify(userData.focusAreaId));\n      formData.append(\"userType\", agentTitle);\n      formData.append(\"territory\", customerService);\n      formData.append(\"firmOrCompanyAffiliation\", companyName);\n      formData.append(\"clientType\", ClientType);\n      formData.append(\"login\", false);\n      formData.append(\"verificationCode\", VerifyCode.join(\"\"));\n      formData.append(\n        \"timeZone\",\n        Intl.DateTimeFormat().resolvedOptions().timeZone\n      );\n\n      // //console.log;\n      for (let [key, value] of formData.entries()) {\n        // //console.log;\n      }\n\n      // return\n      const response = await axios.post(ApiPath, formData);\n      if (response) {\n        setResponse(response.data);\n        setIsVisible(true);\n        // //console.log;\n        if (response.data.status === true) {\n          localStorage.setItem(\"User\", JSON.stringify(response.data.data));\n\n          if (typeof document !== \"undefined\") {\n            setCookie(response.data.data.user, document);\n          }\n\n          let screenWidth = 1000;\n          if (typeof window !== \"undefined\") {\n            screenWidth = window.innerWidth; // Get current screen width\n          }\n          const SM_SCREEN_SIZE = 640; // Tailwind's sm breakpoint is typically 640px\n\n          if (screenWidth <= SM_SCREEN_SIZE) {\n            setCongratsPopup(true);\n            // //console.log;\n          } else {\n            // //console.log;\n            // handleContinue();\n            router.push(\"/createagent\")\n\n            // setCongratsPopup(true);\n          }\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in register api is: \", error);\n    } finally {\n      setRegisterLoader(false);\n    }\n  };\n\n  //code to check email and phone\n\n  const checkEmail = async (value) => {\n    try {\n      setValidEmail(\"\");\n      setEmailLoader(true);\n\n      const ApiPath = Apis.CheckEmail;\n\n      const ApiData = {\n        email: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setEmailCheckResponse(response.data);\n        } else {\n          setEmailCheckResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check email api is :\", error);\n    } finally {\n      setEmailLoader(false);\n    }\n  };\n\n  const checkPhoneNumber = async (value) => {\n    try {\n      setPhoneNumberLoader(true);\n      const ApiPath = Apis.CheckPhone;\n\n      const ApiData = {\n        phone: value,\n      };\n\n      // //console.log;\n\n      const response = await axios.post(ApiPath, ApiData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response) {\n        // //console.log;\n        if (response.data.status === true) {\n          // //console.log;\n          setCheckPhoneResponse(response.data);\n        } else {\n          setCheckPhoneResponse(response.data);\n        }\n      }\n    } catch (error) {\n      // console.error(\"Error occured in check phone api is :\", error);\n    } finally {\n      setPhoneNumberLoader(false);\n    }\n  };\n\n  const styles = {\n    headingStyle: {\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n    inputStyle: {\n      fontSize: 13,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    errmsg: {\n      fontSize: 12,\n      fontWeight: \"500\",\n      borderRadius: \"7px\",\n    },\n    verifyPopup: {\n      height: \"auto\",\n      bgcolor: \"transparent\",\n      // p: 2,\n      mx: \"auto\",\n      my: \"50vh\",\n      transform: \"translateY(-55%)\",\n      borderRadius: 2,\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n\n  return (\n    <div\n      style={{ width: \"100%\" }}\n      className=\"overflow-y-hidden flex flex-row justify-center items-center\"\n    >\n      <div className=\"bg-white rounded-2xl mx-2 w-full md:w-10/12 max-h-[90%] py-4 overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple\">\n        <div className=\"h-[82svh]\">\n          {/* header */}\n          <div className=\"h-[10%]\">\n            <Header />\n          </div>\n          {/* Body */}\n          <div className=\"flex flex-col items-center px-4 w-full h-[90%]\">\n            <div\n              className=\"mt-6 w-11/12 md:text-4xl text-lg font-[600]\"\n              style={{ textAlign: \"center\" }}\n            >\n              Your Contact Information\n            </div>\n            <div\n              className=\"mt-8 w-full md:w-10/12 lg:w-6/12 flex flex-col max-h-[85%] overflow-auto scrollbar scrollbar-track-transparent scrollbar-thin scrollbar-thumb-purple px-2\"\n              style={{ scrollbarWidth: \"none\" }}\n            >\n              <div style={styles.headingStyle}>{`What's your full name`}</div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userName}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const formattedName = input\n                    .split(\" \")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(\" \");\n\n                  // const words = input.split(' ');\n                  // const formattedName =\n                  //   words.length > 1\n                  //     ? words[0].toLowerCase() + ' ' + words.slice(1).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n                  //     : words[0].toLowerCase();\n\n                  setUserName(formattedName);\n                }}\n              />\n\n              <div className=\"flex flex-row items-center w-full justify-between mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your email address`}\n                </div>\n                <div>\n                  {emailLoader ? (\n                    <p style={{ ...styles.errmsg, color: \"black\" }}>\n                      Checking ...\n                    </p>\n                  ) : (\n                    <div>\n                      {emailCheckResponse ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color:\n                              emailCheckResponse.status === true\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {emailCheckResponse.message\n                            .slice(0, 1)\n                            .toUpperCase() +\n                            emailCheckResponse.message.slice(1)}\n                        </p>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                  )}\n                  <div style={{ ...styles.errmsg, color: \"red\" }}>\n                    {validEmail}\n                  </div>\n                </div>\n              </div>\n\n              <input\n                placeholder=\"Email address\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={userEmail}\n                onChange={(e) => {\n                  let value = e.target.value;\n                  setUserEmail(value);\n\n                  // if (value) {\n                  //   const timer = setTimeout(() => {\n                  //     checkEmail(value);\n                  //    // //console.log\n                  //   }, 1000);\n                  //   return (() => clearTimeout(timer));\n                  // } else {\n                  //   setEmailCheckResponse(null);\n                  // }\n\n                  if (timerRef.current) {\n                    clearTimeout(timerRef.current);\n                  }\n\n                  setEmailCheckResponse(null);\n\n                  if (!value) {\n                    // //console.log;\n                    setValidEmail(\"\");\n                    return;\n                  }\n\n                  if (!validateEmail(value)) {\n                    // //console.log;\n                    setValidEmail(\"Invalid\");\n                  } else {\n                    // //console.log;\n                    if (value) {\n                      // Set a new timeout\n                      timerRef.current = setTimeout(() => {\n                        checkEmail(value);\n                      }, 300);\n                    } else {\n                      // Reset the response if input is cleared\n                      setEmailCheckResponse(null);\n                      setValidEmail(\"\");\n                    }\n                  }\n                }}\n              />\n\n              <div className=\"flex flex-row items-center justify-between w-full mt-6\">\n                <div style={styles.headingStyle}>\n                  {`What's your phone number`}\n                </div>\n                {/* Display error or success message */}\n                <div>\n                  {locationLoader && (\n                    <p\n                      className=\"text-purple\"\n                      style={{ ...styles.errmsg, height: \"20px\" }}\n                    >\n                      Getting location ...\n                    </p>\n                  )}\n                  {errorMessage ? (\n                    <p\n                      style={{\n                        ...styles.errmsg,\n                        color: errorMessage && \"red\",\n                        height: \"20px\",\n                      }}\n                    >\n                      {errorMessage}\n                    </p>\n                  ) : (\n                    <div>\n                      {phoneNumberLoader ? (\n                        <p\n                          style={{\n                            ...styles.errmsg,\n                            color: \"black\",\n                            height: \"20px\",\n                          }}\n                        >\n                          Checking ...\n                        </p>\n                      ) : (\n                        <div>\n                          {checkPhoneResponse ? (\n                            <p\n                              style={{\n                                ...styles.errmsg,\n                                color:\n                                  checkPhoneResponse.status === true\n                                    ? \"green\"\n                                    : \"red\",\n                                height: \"20px\",\n                              }}\n                            >\n                              {checkPhoneResponse.message\n                                .slice(0, 1)\n                                .toUpperCase() +\n                                checkPhoneResponse.message.slice(1)}\n                            </p>\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ marginTop: \"8px\" }}>\n                <PhoneInput\n                  className=\"border outline-none bg-white\"\ncountry={\"us\"} // restrict to US only\n                    onlyCountries={[\"us\"]}\n                    disableDropdown={true}\n                    countryCodeEditable={false}\n                    disableCountryCode={false}                  value={userPhoneNumber}\n                  onChange={handlePhoneNumberChange}\n                  placeholder={\n                    locationLoader\n                      ? \"Loading location ...\"\n                      : \"Enter Phone Number\"\n                  }\n                  disabled={loading} // Disable input if still loading\n                  style={{ borderRadius: \"7px\" }}\n                  inputStyle={{\n                    width: \"100%\",\n                    borderWidth: \"0px\",\n                    backgroundColor: \"transparent\",\n                    paddingLeft: \"60px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                  buttonStyle={{\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    // display: 'flex',\n                    // alignItems: 'center',\n                    // justifyContent: 'center',\n                  }}\n                  dropdownStyle={{\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\",\n                  }}\n                  defaultMask={loading ? \"Loading...\" : undefined}\n                />\n              </div>\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Where do you primarily serve clients?\n              </div>\n              <input\n                placeholder=\"Specific cities, counties, or regions\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={customerService}\n                onChange={(e) => {\n                  setCustomerService(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Name of the mortgage lender, bank, or brokerage you work with,\n                if any.\n              </div>\n              <input\n                placeholder=\"Name\"\n                className=\"border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n\n              <div style={styles.headingStyle} className=\"mt-6\">\n                Client Type\n              </div>\n\n              <div\n                className=\"flex w-full flex-wrap flex-row items-center gap-2\"\n                style={{ marginTop: \"8px\", flexWrap: \"wrap\" }}\n              >\n                {primaryClientTypes.map((item, index) => {\n                  return (\n                    <div key={index} className=\"w-full\">\n                      <button\n                        onClick={() => {\n                          handleSelectClientType(item);\n                        }}\n                        className=\"border border-[#00000010] rounded px-4 py-4 outline-none focus:outline-none focus:ring-0\"\n                        style={{\n                          ...styles.inputStyle,\n                          borderRadius: \"30px\",\n                          paddingInline: index === 2 && \"40px\",\n                          border:\n                            ClientType === item.title\n                              ? \"2px solid #7902DF\"\n                              : \"\",\n                          backgroundColor:\n                            ClientType === item.title ? \"#402FFF20\" : \"\",\n                        }}\n                      >\n                        {item.title}\n                      </button>\n                      {ClientType === \"Other (type here)\" && item.id === 6 && (\n                        <input\n                          placeholder=\"Type here\"\n                          className=\" w-full border border-[#00000010] rounded p-3 outline-none focus:outline-none focus:ring-0\"\n                          style={{ ...styles.inputStyle, marginTop: \"8px\" }}\n                          value={otherType}\n                          onChange={(e) => {\n                            setOtherType(e.target.value);\n                          }}\n                        />\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n\n              <Modal\n                open={showVerifyPopup}\n                // onClose={() => setAddKYCQuestion(false)}\n                closeAfterTransition\n                BackdropProps={{\n                  timeout: 1000,\n                  sx: {\n                    backgroundColor: \"#00000020\",\n                    // //backdropFilter: \"blur(20px)\",\n                  },\n                }}\n              >\n                <Box\n                  className=\"lg:w-8/12 sm:w-full w-8/12\"\n                  sx={styles.verifyPopup}\n                >\n                  <div className=\"flex flex-row justify-center w-full\">\n                    <div\n                      className=\"sm:w-7/12 w-full\"\n                      style={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 20,\n                        borderRadius: \"13px\",\n                      }}\n                    >\n                      <div className=\"flex flex-row justify-end\">\n                        <button onClick={handleClose}>\n                          <Image\n                            src={\"/assets/crossIcon.png\"}\n                            height={40}\n                            width={40}\n                            alt=\"*\"\n                          />\n                        </button>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: 26,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Verify phone number\n                      </div>\n                      <div\n                        className=\"mt-8\"\n                        style={{ ...styles.inputStyle, color: \"#00000060\" }}\n                      >\n                        Enter code that was sent to number ending with *\n                        {userPhoneNumber.slice(-4)}.\n                      </div>\n                      {/* <VerificationCodeInput /> */}\n                      <div\n                        className=\"mt-8\"\n                        style={{ display: \"flex\", gap: \"8px\" }}\n                      >\n                        {Array.from({ length }).map((_, index) => (\n                          <input\n                            key={index}\n                            ref={(el) => (verifyInputRef.current[index] = el)}\n                            // type=\"text\"\n                            type=\"tel\"\n                            inputMode=\"numeric\"\n                            maxLength=\"1\"\n                            value={VerifyCode[index]}\n                            onChange={(e) => handleVerifyInputChange(e, index)}\n                            onKeyDown={(e) => handleBackspace(e, index)}\n                            onKeyUp={(e) => {\n                              // Check if the Enter key is pressed and all inputs are filled\n                              if (\n                                e.key === \"Enter\" &&\n                                VerifyCode.every((value) => value.trim() !== \"\")\n                              ) {\n                                handleVerifyCode();\n                              }\n                            }}\n                            onPaste={handlePaste}\n                            placeholder=\"-\"\n                            style={{\n                              width: \"40px\",\n                              height: \"40px\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                              border: \"1px solid #ccc\",\n                              borderRadius: \"5px\",\n                            }}\n                            className=\" focus:outline-none focus:ring-0\"\n                          />\n                        ))}\n                      </div>\n                      <div\n                        className=\"mt-8 flex flex-row items-center gap-2\"\n                        style={styles.inputStyle}\n                      >\n                        {`Didn't receive code?`}\n                        {sendcodeLoader ? (\n                          <CircularProgress size={17} />\n                        ) : (\n                          <button\n                            className=\"outline-none border-none text-purple\"\n                            onClick={handleVerifyPopup}\n                          >\n                            Resend\n                          </button>\n                        )}\n                      </div>\n                      {registerLoader ? (\n                        <div className=\"flex fex-row items-center justify-center mt-8\">\n                          <CircularProgress size={35} />\n                        </div>\n                      ) : (\n                        <button\n                          className=\"text-white bg-purple outline-none rounded-xl w-full mt-8\"\n                          style={{ height: \"50px\" }}\n                          onClick={handleVerifyCode}\n                        >\n                          Continue\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </Box>\n              </Modal>\n\n              <SnackMessages\n                message={response.message}\n                isVisible={isVisible}\n                setIsVisible={(visible) => {\n                  setIsVisible(visible);\n                }}\n                success={response.status}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"h-[10%]\">\n          <div>\n            <ProgressBar value={80} />\n          </div>\n\n          <Footer\n            handleContinue={handleVerifyPopup}\n            handleBack={handleSolarAgentBack}\n            registerLoader={registerLoader}\n            shouldContinue={shouldContinue}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoanOfficerSignUp;\n"],"names":[],"mappings":"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","debugId":null}}]
}